
miniProjet_telemetre_us.elf:     file format elf32-littlenios2
miniProjet_telemetre_us.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000401c0

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x0000f9d0 memsz 0x0000f9d0 flags r-x
    LOAD off    0x000109f0 vaddr 0x0004f9f0 paddr 0x000514dc align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012fc8 vaddr 0x00052fc8 paddr 0x00052fc8 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f4ec  000401c0  000401c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000344  0004f6ac  0004f6ac  000106ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0004f9f0  000514dc  000109f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  00052fc8  00052fc8  00012fc8  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  00053124  00053124  000124dc  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000124dc  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000f10  00000000  00000000  00012500  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000237ac  00000000  00000000  00013410  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009153  00000000  00000000  00036bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b579  00000000  00000000  0003fd0f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000020d4  00000000  00000000  0004b288  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003419  00000000  00000000  0004d35c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017e2e  00000000  00000000  00050775  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  000685a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001928  00000000  00000000  00068608  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006d04a  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000a  00000000  00000000  0006d04d  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006d057  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006d058  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006d059  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006d05d  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006d061  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0006d065  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0006d06e  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0006d077  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000011  00000000  00000000  0006d080  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000003d  00000000  00000000  0006d091  2**0
                  CONTENTS, READONLY
 29 .jdi          000049b5  00000000  00000000  0006d0ce  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0005a0b5  00000000  00000000  00071a83  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
000401c0 l    d  .text	00000000 .text
0004f6ac l    d  .rodata	00000000 .rodata
0004f9f0 l    d  .rwdata	00000000 .rwdata
00052fc8 l    d  .bss	00000000 .bss
00053124 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../miniProjet_telemetre_us_bsp//obj/HAL/src/crt0.o
00040208 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00040094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004f83e l     O .rodata	00000010 zeroes.4404
000431c0 l     F .text	000000bc __sbprintf
0004f84e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
000433d0 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00044f00 l     F .text	00000008 __fp_unlock
00044f14 l     F .text	0000019c __sinit.part.1
000450b0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0004f9f0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0004fe34 l     O .rwdata	00000020 lc_ctype_charset
0004fe14 l     O .rwdata	00000020 lc_message_charset
0004fe54 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0004f880 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
000484ac l     F .text	000000fc __sprint_r.part.0
0004f9b4 l     O .rodata	00000010 blanks.4348
0004f9a4 l     O .rodata	00000010 zeroes.4349
00049a38 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0004ce9c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004cfa8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004cfd4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0004d0c0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004d1a0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004d28c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004d460 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000514cc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_wait.c
0004d6dc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0004d75c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004d890 l     F .text	00000034 alt_dev_reg
0005043c l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004db6c l     F .text	0000020c altera_avalon_jtag_uart_irq
0004dd78 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0004e67c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0004eaf0 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0004ec30 l     F .text	0000003c alt_get_errno
0004ec6c l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00047af0 g     F .text	00000074 _mprec_log10
00047bdc g     F .text	0000008c __any_on
00049fd4 g     F .text	00000054 _isatty_r
0004f88c g     O .rodata	00000028 __mprec_tinytens
0004d39c g     F .text	0000007c alt_main
00040e40 g     F .text	000000c0 _puts_r
00053024 g     O .bss	00000100 alt_irq
0004a028 g     F .text	00000060 _lseek_r
000514dc g       *ABS*	00000000 __flash_rwdata_start
0004c220 g     F .text	00000088 .hidden __eqdf2
00053124 g       *ABS*	00000000 __alt_heap_start
00040e04 g     F .text	0000003c printf
0004a240 g     F .text	0000009c _wcrtomb_r
0004836c g     F .text	0000005c __sseek
00045250 g     F .text	00000010 __sinit
0004a0e8 g     F .text	00000140 __swbuf_r
00045d18 g     F .text	0000007c _setlocale_r
000450b8 g     F .text	00000068 __sfmoreglue
0004d43c g     F .text	00000024 __malloc_unlock
000469e8 g     F .text	0000015c memmove
00045238 g     F .text	00000018 _cleanup
00046c6c g     F .text	000000a8 _Balloc
0004c2a8 g     F .text	000000dc .hidden __gtdf2
00040000 g     F .entry	0000001c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
00049f78 g     F .text	0000005c _fstat_r
00052fe0 g     O .bss	00000004 errno
000482e8 g     F .text	00000008 __seofread
00052fe8 g     O .bss	00000004 alt_argv
0005949c g       *ABS*	00000000 _gp
0004d6ac g     F .text	00000030 usleep
000502bc g     O .rwdata	00000180 alt_fd_list
0004f04c g     F .text	00000090 alt_find_dev
000468a0 g     F .text	00000148 memcpy
00044f08 g     F .text	0000000c _cleanup_r
000409dc g     F .text	000000dc .hidden __floatsidf
0004ebb4 g     F .text	0000007c alt_io_redirect
0004c384 g     F .text	000000f4 .hidden __ltdf2
0004f6ac g       *ABS*	00000000 __DTOR_END__
00040f00 g     F .text	00000014 puts
000481cc g     F .text	00000074 __fpclassifyd
00047a4c g     F .text	000000a4 __ratio
00049a1c g     F .text	0000001c __vfiprintf_internal
0004df70 g     F .text	0000021c altera_avalon_jtag_uart_read
00040dd4 g     F .text	00000030 _printf_r
0004afd0 g     F .text	00000064 .hidden __udivsi3
0004d0fc g     F .text	000000a4 isatty
0004f8dc g     O .rodata	000000c8 __mprec_tens
00045d94 g     F .text	0000000c __locale_charset
0004f288 g     F .text	00000090 alt_icache_flush
00052fdc g     O .bss	00000004 __malloc_top_pad
000514a4 g     O .rwdata	00000004 __mb_cur_max
00045dc4 g     F .text	0000000c _localeconv_r
00047078 g     F .text	0000003c __i2b
000456d4 g     F .text	000004bc __sfvwrite_r
00048240 g     F .text	00000054 _sbrk_r
0004a088 g     F .text	00000060 _read_r
000514c4 g     O .rwdata	00000004 alt_max_fd
00049c6c g     F .text	000000f0 _fclose_r
00044ed0 g     F .text	00000030 fflush
00052fd8 g     O .bss	00000004 __malloc_max_sbrked_mem
00040ab8 g     F .text	00000110 .hidden __extendsfdf2
0004b08c g     F .text	000008ac .hidden __adddf3
000477f4 g     F .text	0000010c __b2d
0004a9a0 g     F .text	00000538 .hidden __umoddi3
0004d2c8 g     F .text	000000d4 lseek
0005149c g     O .rwdata	00000004 _global_impure_ptr
00047c68 g     F .text	00000564 _realloc_r
00053124 g       *ABS*	00000000 __bss_end
0004ea00 g     F .text	000000f0 alt_iic_isr_register
0004ef20 g     F .text	00000108 alt_tick
0004a428 g     F .text	00000578 .hidden __udivdi3
00049ed4 g     F .text	00000024 _fputwc_r
0004f8b4 g     O .rodata	00000028 __mprec_bigtens
00046e5c g     F .text	00000104 __s2b
0004cdf4 g     F .text	000000a8 .hidden __floatunsidf
00047534 g     F .text	00000060 __mcmp
00045270 g     F .text	00000018 __fp_lock_all
0004e9b4 g     F .text	0000004c alt_ic_irq_enabled
0004ee84 g     F .text	0000009c alt_alarm_stop
00052ff0 g     O .bss	00000004 alt_irq_active
000400ec g     F .exceptions	000000d4 alt_irq_handler
00050294 g     O .rwdata	00000028 alt_dev_null
0004e634 g     F .text	00000048 alt_dcache_flush_all
00046f60 g     F .text	00000068 __hi0bits
0004cd74 g     F .text	00000080 .hidden __fixdfsi
000514dc g       *ABS*	00000000 __ram_rwdata_end
000514bc g     O .rwdata	00000008 alt_dev_list
0004d798 g     F .text	000000f8 write
0004f9f0 g       *ABS*	00000000 __ram_rodata_end
0004d010 g     F .text	000000b0 fstat
0004c384 g     F .text	000000f4 .hidden __ledf2
000472ac g     F .text	00000140 __pow5mult
000485c0 g     F .text	0000145c ___vfiprintf_internal_r
00052fd0 g     O .bss	00000004 __nlocale_changed
0004b034 g     F .text	00000058 .hidden __umodsi3
00053124 g       *ABS*	00000000 end
0004daac g     F .text	000000c0 altera_avalon_jtag_uart_init
0004f6ac g       *ABS*	00000000 __CTOR_LIST__
00067100 g       *ABS*	00000000 __alt_stack_pointer
00040d70 g     F .text	00000064 .hidden __clzsi2
0004e18c g     F .text	00000224 altera_avalon_jtag_uart_write
00045260 g     F .text	00000004 __sfp_lock_acquire
000467bc g     F .text	000000e4 memchr
00040fac g     F .text	000021f8 ___vfprintf_internal_r
000453c4 g     F .text	00000310 _free_r
0004d718 g     F .text	00000044 wait
00045da0 g     F .text	00000010 __locale_mb_cur_max
0004f4f8 g     F .text	00000180 __call_exitprocs
00052fcc g     O .bss	00000004 __mlocale_changed
000514a8 g     O .rwdata	00000004 __malloc_sbrk_base
000401c0 g     F .text	0000004c _start
00052ff4 g     O .bss	00000004 _alt_tick_rate
000473ec g     F .text	00000148 __lshift
00052ff8 g     O .bss	00000004 _alt_nticks
0004d49c g     F .text	000000fc read
0004d8fc g     F .text	0000004c alt_sys_init
0004f3e0 g     F .text	00000118 __register_exitproc
000470b4 g     F .text	000001f8 __multiply
0004de18 g     F .text	00000068 altera_avalon_jtag_uart_close
0004f9f0 g       *ABS*	00000000 __ram_rwdata_start
0004f6ac g       *ABS*	00000000 __ram_rodata_start
00052ffc g     O .bss	00000028 __malloc_current_mallinfo
00047900 g     F .text	0000014c __d2b
0004d948 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0004f1e4 g     F .text	000000a4 alt_get_fd
0004e4dc g     F .text	00000158 alt_busy_sleep
00049b54 g     F .text	00000054 _close_r
0004f364 g     F .text	0000007c memcmp
0004da08 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00053124 g       *ABS*	00000000 __alt_stack_base
0004da58 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0004327c g     F .text	00000154 __swsetup_r
0004b938 g     F .text	000008e8 .hidden __divdf3
00045120 g     F .text	00000118 __sfp
00047b64 g     F .text	00000078 __copybits
0004fe8c g     O .rwdata	00000408 __malloc_av_
0004526c g     F .text	00000004 __sinit_lock_release
000402c4 g     F .text	00000718 .hidden __muldf3
00048294 g     F .text	00000054 __sread
0004f0dc g     F .text	00000108 alt_find_file
0004e6b8 g     F .text	000000a4 alt_dev_llist_insert
0004d418 g     F .text	00000024 __malloc_lock
0004d5fc g     F .text	000000b0 sbrk
00044e74 g     F .text	0000005c _fflush_r
00049ba8 g     F .text	000000c4 _calloc_r
00052fc8 g       *ABS*	00000000 __bss_start
00046b44 g     F .text	00000128 memset
0004020c g     F .text	000000b8 main
00052fec g     O .bss	00000004 alt_envp
00052fd4 g     O .bss	00000004 __malloc_max_total_mem
0004d9a8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004a228 g     F .text	00000018 __swbuf
000483c8 g     F .text	00000008 __sclose
00067100 g       *ABS*	00000000 __alt_heap_limit
00049d5c g     F .text	00000014 fclose
00040bc8 g     F .text	000001a8 .hidden __truncdfsf2
000435d0 g     F .text	00001688 _dtoa_r
00045fb0 g     F .text	0000080c _malloc_r
0004a39c g     F .text	00000030 __ascii_wctomb
000514c8 g     O .rwdata	00000004 alt_errno
00045b90 g     F .text	000000c4 _fwalk
0004aed8 g     F .text	00000084 .hidden __divsi3
000452a0 g     F .text	00000124 _malloc_trim_r
0004f6ac g       *ABS*	00000000 __CTOR_END__
000483d0 g     F .text	000000dc strcmp
0004f6ac g       *ABS*	00000000 __flash_rodata_start
0004f6ac g       *ABS*	00000000 __DTOR_LIST__
0004c220 g     F .text	00000088 .hidden __nedf2
0004d8c4 g     F .text	00000038 alt_irq_init
0004d598 g     F .text	00000064 alt_release_fd
0004f6f7 g     O .rodata	00000100 .hidden __clz_tab
00052fc8 g     O .bss	00000004 _PathLocale
0004f318 g     F .text	00000014 atexit
00049af4 g     F .text	00000060 _write_r
00045dd0 g     F .text	00000018 setlocale
000514a0 g     O .rwdata	00000004 _impure_ptr
00052fe4 g     O .bss	00000004 alt_argc
00044c58 g     F .text	0000021c __sflush_r
0004e7bc g     F .text	00000060 _do_dtors
00045dbc g     F .text	00000008 __locale_cjk_lang
00040020 g       .exceptions	00000000 alt_irq_entry
00047790 g     F .text	00000064 __ulp
00045288 g     F .text	00000018 __fp_unlock_all
000514b4 g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
00045de8 g     F .text	0000000c localeconv
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0004e850 g     F .text	00000050 alt_ic_isr_register
000514dc g       *ABS*	00000000 _edata
00053124 g       *ABS*	00000000 _end
00049d70 g     F .text	00000164 __fputwc
000401c0 g       *ABS*	00000000 __ram_exceptions_end
0004de80 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0004e928 g     F .text	0000008c alt_ic_irq_disable
000482f0 g     F .text	0000007c __swrite
000514ac g     O .rwdata	00000004 __malloc_trim_threshold
0004f028 g     F .text	00000024 altera_nios2_qsys_irq_init
00045db0 g     F .text	0000000c __locale_msgcharset
0004f32c g     F .text	00000038 exit
00045c54 g     F .text	000000c4 _fwalk_reent
00047594 g     F .text	000001fc __mdiff
0004af5c g     F .text	00000074 .hidden __modsi3
00067100 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00045264 g     F .text	00000004 __sfp_lock_release
0004f678 g     F .text	00000034 _exit
0004e3b0 g     F .text	0000012c alt_alarm_start
00045df4 g     F .text	000001bc __smakebuf_r
00040f14 g     F .text	00000098 strlen
0004ed30 g     F .text	00000154 open
0004c2a8 g     F .text	000000dc .hidden __gedf2
000514b0 g     O .rwdata	00000004 __wctomb
000485a8 g     F .text	00000018 __sprint_r
0004e81c g     F .text	00000034 alt_icache_flush_all
000514d0 g     O .rwdata	00000004 alt_priority_mask
0004e8a0 g     F .text	00000088 alt_ic_irq_enable
000431a4 g     F .text	0000001c __vfprintf_internal
0004a3cc g     F .text	0000005c _wctomb_r
0004c478 g     F .text	000008fc .hidden __subdf3
00046fc8 g     F .text	000000b0 __lo0bits
000514d4 g     O .rwdata	00000008 alt_alarm_list
0004e75c g     F .text	00000060 _do_ctors
0004a2dc g     F .text	000000c0 wcrtomb
0004ced8 g     F .text	000000d0 close
0004d208 g     F .text	00000084 alt_load
00049ef8 g     F .text	00000080 fputwc
00045268 g     F .text	00000004 __sinit_lock_acquire
00046d3c g     F .text	00000120 __multadd
00046d14 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__alt_data_end+0xfffd8f04>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08407014 	ori	at,at,448
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__alt_mem_onchip_memory2-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400ec0 	call	400ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000306 	br	40098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
   4008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)

00040094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
   40094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   40098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   4009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400e8:	ef80083a 	eret

000400ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400ec:	defff904 	addi	sp,sp,-28
   400f0:	dfc00615 	stw	ra,24(sp)
   400f4:	df000515 	stw	fp,20(sp)
   400f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   400fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40100:	0005313a 	rdctl	r2,ipending
   40104:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40114:	00800044 	movi	r2,1
   40118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4011c:	e0fffb17 	ldw	r3,-20(fp)
   40120:	e0bffc17 	ldw	r2,-16(fp)
   40124:	1884703a 	and	r2,r3,r2
   40128:	10001426 	beq	r2,zero,4017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4012c:	00800174 	movhi	r2,5
   40130:	108c0904 	addi	r2,r2,12324
   40134:	e0fffd17 	ldw	r3,-12(fp)
   40138:	180690fa 	slli	r3,r3,3
   4013c:	10c5883a 	add	r2,r2,r3
   40140:	10c00017 	ldw	r3,0(r2)
   40144:	00800174 	movhi	r2,5
   40148:	108c0904 	addi	r2,r2,12324
   4014c:	e13ffd17 	ldw	r4,-12(fp)
   40150:	200890fa 	slli	r4,r4,3
   40154:	1105883a 	add	r2,r2,r4
   40158:	10800104 	addi	r2,r2,4
   4015c:	10800017 	ldw	r2,0(r2)
   40160:	1009883a 	mov	r4,r2
   40164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4016c:	0005313a 	rdctl	r2,ipending
   40170:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40174:	e0bfff17 	ldw	r2,-4(fp)
   40178:	00000706 	br	40198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4017c:	e0bffc17 	ldw	r2,-16(fp)
   40180:	1085883a 	add	r2,r2,r2
   40184:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40188:	e0bffd17 	ldw	r2,-12(fp)
   4018c:	10800044 	addi	r2,r2,1
   40190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   40194:	003fe106 	br	4011c <__alt_data_end+0xfffd901c>

    active = alt_irq_pending ();
   40198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   4019c:	e0bffb17 	ldw	r2,-20(fp)
   401a0:	103fdb1e 	bne	r2,zero,40110 <__alt_data_end+0xfffd9010>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401a4:	0001883a 	nop
}
   401a8:	0001883a 	nop
   401ac:	e037883a 	mov	sp,fp
   401b0:	dfc00117 	ldw	ra,4(sp)
   401b4:	df000017 	ldw	fp,0(sp)
   401b8:	dec00204 	addi	sp,sp,8
   401bc:	f800283a 	ret

Disassembly of section .text:

000401c0 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   401c0:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   401c4:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   401c8:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   401cc:	00bffd16 	blt	zero,r2,401c4 <__alt_data_end+0xfffd90c4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   401d0:	06c001b4 	movhi	sp,6
    ori sp, sp, %lo(__alt_stack_pointer)
   401d4:	dedc4014 	ori	sp,sp,28928
    movhi gp, %hi(_gp)
   401d8:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   401dc:	d6a52714 	ori	gp,gp,38044
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   401e0:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   401e4:	108bf214 	ori	r2,r2,12232

    movhi r3, %hi(__bss_end)
   401e8:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   401ec:	18cc4914 	ori	r3,r3,12580

    beq r2, r3, 1f
   401f0:	10c00326 	beq	r2,r3,40200 <_start+0x40>

0:
    stw zero, (r2)
   401f4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   401f8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   401fc:	10fffd36 	bltu	r2,r3,401f4 <__alt_data_end+0xfffd90f4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40200:	004d2080 	call	4d208 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40204:	004d39c0 	call	4d39c <alt_main>

00040208 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   40208:	003fff06 	br	40208 <__alt_data_end+0xfffd9108>

0004020c <main>:
#include <unistd.h>
#include <io.h>
#include "system.h"

int main()
{
   4020c:	defffc04 	addi	sp,sp,-16
   40210:	dfc00315 	stw	ra,12(sp)
   40214:	df000215 	stw	fp,8(sp)
   40218:	df000204 	addi	fp,sp,8
	int nb_clk;
	float distance;
	printf("Nous allons commencer a mesurer!\n");
   4021c:	01000174 	movhi	r4,5
   40220:	213dab04 	addi	r4,r4,-2388
   40224:	0040f000 	call	40f00 <puts>
	while(1){
		usleep(100000);
   40228:	010000b4 	movhi	r4,2
   4022c:	2121a804 	addi	r4,r4,-31072
   40230:	004d6ac0 	call	4d6ac <usleep>
		wait(3);
   40234:	010000c4 	movi	r4,3
   40238:	004d7180 	call	4d718 <wait>
		nb_clk = IORD(TELEMETRE_US_INST_BASE,0);
   4023c:	00800234 	movhi	r2,8
   40240:	10840a04 	addi	r2,r2,4136
   40244:	10800037 	ldwio	r2,0(r2)
   40248:	e0bffe15 	stw	r2,-8(fp)
		distance = nb_clk * 0.00034;
   4024c:	e13ffe17 	ldw	r4,-8(fp)
   40250:	00409dc0 	call	409dc <__floatsidf>
   40254:	1011883a 	mov	r8,r2
   40258:	1813883a 	mov	r9,r3
   4025c:	01b85cb4 	movhi	r6,57714
   40260:	31a7e004 	addi	r6,r6,-24704
   40264:	01cfcdb4 	movhi	r7,16182
   40268:	39d21004 	addi	r7,r7,18496
   4026c:	4009883a 	mov	r4,r8
   40270:	480b883a 	mov	r5,r9
   40274:	00402c40 	call	402c4 <__muldf3>
   40278:	1009883a 	mov	r4,r2
   4027c:	180b883a 	mov	r5,r3
   40280:	2005883a 	mov	r2,r4
   40284:	2807883a 	mov	r3,r5
   40288:	1009883a 	mov	r4,r2
   4028c:	180b883a 	mov	r5,r3
   40290:	0040bc80 	call	40bc8 <__truncdfsf2>
   40294:	1007883a 	mov	r3,r2
   40298:	e0ffff15 	stw	r3,-4(fp)
		printf("La distance de l'obstacle est: %.2fcm\n",distance);
   4029c:	e13fff17 	ldw	r4,-4(fp)
   402a0:	0040ab80 	call	40ab8 <__extendsfdf2>
   402a4:	100d883a 	mov	r6,r2
   402a8:	180f883a 	mov	r7,r3
   402ac:	300b883a 	mov	r5,r6
   402b0:	380d883a 	mov	r6,r7
   402b4:	01000174 	movhi	r4,5
   402b8:	213db404 	addi	r4,r4,-2352
   402bc:	0040e040 	call	40e04 <printf>
	}
   402c0:	003fd906 	br	40228 <__alt_data_end+0xfffd9128>

000402c4 <__muldf3>:
   402c4:	defff304 	addi	sp,sp,-52
   402c8:	2804d53a 	srli	r2,r5,20
   402cc:	dd800915 	stw	r22,36(sp)
   402d0:	282cd7fa 	srli	r22,r5,31
   402d4:	dc000315 	stw	r16,12(sp)
   402d8:	04000434 	movhi	r16,16
   402dc:	dd400815 	stw	r21,32(sp)
   402e0:	dc800515 	stw	r18,20(sp)
   402e4:	843fffc4 	addi	r16,r16,-1
   402e8:	dfc00c15 	stw	ra,48(sp)
   402ec:	df000b15 	stw	fp,44(sp)
   402f0:	ddc00a15 	stw	r23,40(sp)
   402f4:	dd000715 	stw	r20,28(sp)
   402f8:	dcc00615 	stw	r19,24(sp)
   402fc:	dc400415 	stw	r17,16(sp)
   40300:	1481ffcc 	andi	r18,r2,2047
   40304:	2c20703a 	and	r16,r5,r16
   40308:	b02b883a 	mov	r21,r22
   4030c:	b2403fcc 	andi	r9,r22,255
   40310:	90006026 	beq	r18,zero,40494 <__muldf3+0x1d0>
   40314:	0081ffc4 	movi	r2,2047
   40318:	2029883a 	mov	r20,r4
   4031c:	90803626 	beq	r18,r2,403f8 <__muldf3+0x134>
   40320:	80800434 	orhi	r2,r16,16
   40324:	100490fa 	slli	r2,r2,3
   40328:	2020d77a 	srli	r16,r4,29
   4032c:	202890fa 	slli	r20,r4,3
   40330:	94bf0044 	addi	r18,r18,-1023
   40334:	80a0b03a 	or	r16,r16,r2
   40338:	0027883a 	mov	r19,zero
   4033c:	0039883a 	mov	fp,zero
   40340:	3804d53a 	srli	r2,r7,20
   40344:	382ed7fa 	srli	r23,r7,31
   40348:	04400434 	movhi	r17,16
   4034c:	8c7fffc4 	addi	r17,r17,-1
   40350:	1081ffcc 	andi	r2,r2,2047
   40354:	3011883a 	mov	r8,r6
   40358:	3c62703a 	and	r17,r7,r17
   4035c:	ba803fcc 	andi	r10,r23,255
   40360:	10006d26 	beq	r2,zero,40518 <__muldf3+0x254>
   40364:	00c1ffc4 	movi	r3,2047
   40368:	10c06526 	beq	r2,r3,40500 <__muldf3+0x23c>
   4036c:	88c00434 	orhi	r3,r17,16
   40370:	180690fa 	slli	r3,r3,3
   40374:	3022d77a 	srli	r17,r6,29
   40378:	301090fa 	slli	r8,r6,3
   4037c:	10bf0044 	addi	r2,r2,-1023
   40380:	88e2b03a 	or	r17,r17,r3
   40384:	000b883a 	mov	r5,zero
   40388:	9085883a 	add	r2,r18,r2
   4038c:	2cc8b03a 	or	r4,r5,r19
   40390:	00c003c4 	movi	r3,15
   40394:	bdacf03a 	xor	r22,r23,r22
   40398:	12c00044 	addi	r11,r2,1
   4039c:	19009936 	bltu	r3,r4,40604 <__muldf3+0x340>
   403a0:	200890ba 	slli	r4,r4,2
   403a4:	00c00134 	movhi	r3,4
   403a8:	18c0ee04 	addi	r3,r3,952
   403ac:	20c9883a 	add	r4,r4,r3
   403b0:	20c00017 	ldw	r3,0(r4)
   403b4:	1800683a 	jmp	r3
   403b8:	00040604 	movi	zero,4120
   403bc:	00040418 	cmpnei	zero,zero,4112
   403c0:	00040418 	cmpnei	zero,zero,4112
   403c4:	00040414 	movui	zero,4112
   403c8:	000405e0 	cmpeqi	zero,zero,4119
   403cc:	000405e0 	cmpeqi	zero,zero,4119
   403d0:	000405c8 	cmpgei	zero,zero,4119
   403d4:	00040414 	movui	zero,4112
   403d8:	000405e0 	cmpeqi	zero,zero,4119
   403dc:	000405c8 	cmpgei	zero,zero,4119
   403e0:	000405e0 	cmpeqi	zero,zero,4119
   403e4:	00040414 	movui	zero,4112
   403e8:	000405f0 	cmpltui	zero,zero,4119
   403ec:	000405f0 	cmpltui	zero,zero,4119
   403f0:	000405f0 	cmpltui	zero,zero,4119
   403f4:	0004080c 	andi	zero,zero,4128
   403f8:	2404b03a 	or	r2,r4,r16
   403fc:	10006f1e 	bne	r2,zero,405bc <__muldf3+0x2f8>
   40400:	04c00204 	movi	r19,8
   40404:	0021883a 	mov	r16,zero
   40408:	0029883a 	mov	r20,zero
   4040c:	07000084 	movi	fp,2
   40410:	003fcb06 	br	40340 <__alt_data_end+0xfffd9240>
   40414:	502d883a 	mov	r22,r10
   40418:	00800084 	movi	r2,2
   4041c:	28805726 	beq	r5,r2,4057c <__muldf3+0x2b8>
   40420:	008000c4 	movi	r2,3
   40424:	28816626 	beq	r5,r2,409c0 <__muldf3+0x6fc>
   40428:	00800044 	movi	r2,1
   4042c:	2881411e 	bne	r5,r2,40934 <__muldf3+0x670>
   40430:	b02b883a 	mov	r21,r22
   40434:	0005883a 	mov	r2,zero
   40438:	000b883a 	mov	r5,zero
   4043c:	0029883a 	mov	r20,zero
   40440:	1004953a 	slli	r2,r2,20
   40444:	a8c03fcc 	andi	r3,r21,255
   40448:	04400434 	movhi	r17,16
   4044c:	8c7fffc4 	addi	r17,r17,-1
   40450:	180697fa 	slli	r3,r3,31
   40454:	2c4a703a 	and	r5,r5,r17
   40458:	288ab03a 	or	r5,r5,r2
   4045c:	28c6b03a 	or	r3,r5,r3
   40460:	a005883a 	mov	r2,r20
   40464:	dfc00c17 	ldw	ra,48(sp)
   40468:	df000b17 	ldw	fp,44(sp)
   4046c:	ddc00a17 	ldw	r23,40(sp)
   40470:	dd800917 	ldw	r22,36(sp)
   40474:	dd400817 	ldw	r21,32(sp)
   40478:	dd000717 	ldw	r20,28(sp)
   4047c:	dcc00617 	ldw	r19,24(sp)
   40480:	dc800517 	ldw	r18,20(sp)
   40484:	dc400417 	ldw	r17,16(sp)
   40488:	dc000317 	ldw	r16,12(sp)
   4048c:	dec00d04 	addi	sp,sp,52
   40490:	f800283a 	ret
   40494:	2404b03a 	or	r2,r4,r16
   40498:	2027883a 	mov	r19,r4
   4049c:	10004226 	beq	r2,zero,405a8 <__muldf3+0x2e4>
   404a0:	8000fc26 	beq	r16,zero,40894 <__muldf3+0x5d0>
   404a4:	8009883a 	mov	r4,r16
   404a8:	d9800215 	stw	r6,8(sp)
   404ac:	d9c00015 	stw	r7,0(sp)
   404b0:	da400115 	stw	r9,4(sp)
   404b4:	0040d700 	call	40d70 <__clzsi2>
   404b8:	d9800217 	ldw	r6,8(sp)
   404bc:	d9c00017 	ldw	r7,0(sp)
   404c0:	da400117 	ldw	r9,4(sp)
   404c4:	113ffd44 	addi	r4,r2,-11
   404c8:	00c00704 	movi	r3,28
   404cc:	1900ed16 	blt	r3,r4,40884 <__muldf3+0x5c0>
   404d0:	00c00744 	movi	r3,29
   404d4:	147ffe04 	addi	r17,r2,-8
   404d8:	1907c83a 	sub	r3,r3,r4
   404dc:	8460983a 	sll	r16,r16,r17
   404e0:	98c6d83a 	srl	r3,r19,r3
   404e4:	9c68983a 	sll	r20,r19,r17
   404e8:	1c20b03a 	or	r16,r3,r16
   404ec:	1080fcc4 	addi	r2,r2,1011
   404f0:	00a5c83a 	sub	r18,zero,r2
   404f4:	0027883a 	mov	r19,zero
   404f8:	0039883a 	mov	fp,zero
   404fc:	003f9006 	br	40340 <__alt_data_end+0xfffd9240>
   40500:	3446b03a 	or	r3,r6,r17
   40504:	1800261e 	bne	r3,zero,405a0 <__muldf3+0x2dc>
   40508:	0023883a 	mov	r17,zero
   4050c:	0011883a 	mov	r8,zero
   40510:	01400084 	movi	r5,2
   40514:	003f9c06 	br	40388 <__alt_data_end+0xfffd9288>
   40518:	3446b03a 	or	r3,r6,r17
   4051c:	18001c26 	beq	r3,zero,40590 <__muldf3+0x2cc>
   40520:	8800ce26 	beq	r17,zero,4085c <__muldf3+0x598>
   40524:	8809883a 	mov	r4,r17
   40528:	d9800215 	stw	r6,8(sp)
   4052c:	da400115 	stw	r9,4(sp)
   40530:	da800015 	stw	r10,0(sp)
   40534:	0040d700 	call	40d70 <__clzsi2>
   40538:	d9800217 	ldw	r6,8(sp)
   4053c:	da400117 	ldw	r9,4(sp)
   40540:	da800017 	ldw	r10,0(sp)
   40544:	113ffd44 	addi	r4,r2,-11
   40548:	00c00704 	movi	r3,28
   4054c:	1900bf16 	blt	r3,r4,4084c <__muldf3+0x588>
   40550:	00c00744 	movi	r3,29
   40554:	123ffe04 	addi	r8,r2,-8
   40558:	1907c83a 	sub	r3,r3,r4
   4055c:	8a22983a 	sll	r17,r17,r8
   40560:	30c6d83a 	srl	r3,r6,r3
   40564:	3210983a 	sll	r8,r6,r8
   40568:	1c62b03a 	or	r17,r3,r17
   4056c:	1080fcc4 	addi	r2,r2,1011
   40570:	0085c83a 	sub	r2,zero,r2
   40574:	000b883a 	mov	r5,zero
   40578:	003f8306 	br	40388 <__alt_data_end+0xfffd9288>
   4057c:	b02b883a 	mov	r21,r22
   40580:	0081ffc4 	movi	r2,2047
   40584:	000b883a 	mov	r5,zero
   40588:	0029883a 	mov	r20,zero
   4058c:	003fac06 	br	40440 <__alt_data_end+0xfffd9340>
   40590:	0023883a 	mov	r17,zero
   40594:	0011883a 	mov	r8,zero
   40598:	01400044 	movi	r5,1
   4059c:	003f7a06 	br	40388 <__alt_data_end+0xfffd9288>
   405a0:	014000c4 	movi	r5,3
   405a4:	003f7806 	br	40388 <__alt_data_end+0xfffd9288>
   405a8:	04c00104 	movi	r19,4
   405ac:	0021883a 	mov	r16,zero
   405b0:	0029883a 	mov	r20,zero
   405b4:	07000044 	movi	fp,1
   405b8:	003f6106 	br	40340 <__alt_data_end+0xfffd9240>
   405bc:	04c00304 	movi	r19,12
   405c0:	070000c4 	movi	fp,3
   405c4:	003f5e06 	br	40340 <__alt_data_end+0xfffd9240>
   405c8:	01400434 	movhi	r5,16
   405cc:	002b883a 	mov	r21,zero
   405d0:	297fffc4 	addi	r5,r5,-1
   405d4:	053fffc4 	movi	r20,-1
   405d8:	0081ffc4 	movi	r2,2047
   405dc:	003f9806 	br	40440 <__alt_data_end+0xfffd9340>
   405e0:	8023883a 	mov	r17,r16
   405e4:	a011883a 	mov	r8,r20
   405e8:	e00b883a 	mov	r5,fp
   405ec:	003f8a06 	br	40418 <__alt_data_end+0xfffd9318>
   405f0:	8023883a 	mov	r17,r16
   405f4:	a011883a 	mov	r8,r20
   405f8:	482d883a 	mov	r22,r9
   405fc:	e00b883a 	mov	r5,fp
   40600:	003f8506 	br	40418 <__alt_data_end+0xfffd9318>
   40604:	a00ad43a 	srli	r5,r20,16
   40608:	401ad43a 	srli	r13,r8,16
   4060c:	a53fffcc 	andi	r20,r20,65535
   40610:	423fffcc 	andi	r8,r8,65535
   40614:	4519383a 	mul	r12,r8,r20
   40618:	4147383a 	mul	r3,r8,r5
   4061c:	6d09383a 	mul	r4,r13,r20
   40620:	600cd43a 	srli	r6,r12,16
   40624:	2b5d383a 	mul	r14,r5,r13
   40628:	20c9883a 	add	r4,r4,r3
   4062c:	310d883a 	add	r6,r6,r4
   40630:	30c0022e 	bgeu	r6,r3,4063c <__muldf3+0x378>
   40634:	00c00074 	movhi	r3,1
   40638:	70dd883a 	add	r14,r14,r3
   4063c:	8826d43a 	srli	r19,r17,16
   40640:	8bffffcc 	andi	r15,r17,65535
   40644:	7d23383a 	mul	r17,r15,r20
   40648:	7949383a 	mul	r4,r15,r5
   4064c:	9d29383a 	mul	r20,r19,r20
   40650:	8814d43a 	srli	r10,r17,16
   40654:	3012943a 	slli	r9,r6,16
   40658:	a129883a 	add	r20,r20,r4
   4065c:	633fffcc 	andi	r12,r12,65535
   40660:	5515883a 	add	r10,r10,r20
   40664:	3006d43a 	srli	r3,r6,16
   40668:	4b13883a 	add	r9,r9,r12
   4066c:	2ccb383a 	mul	r5,r5,r19
   40670:	5100022e 	bgeu	r10,r4,4067c <__muldf3+0x3b8>
   40674:	01000074 	movhi	r4,1
   40678:	290b883a 	add	r5,r5,r4
   4067c:	802ad43a 	srli	r21,r16,16
   40680:	843fffcc 	andi	r16,r16,65535
   40684:	440d383a 	mul	r6,r8,r16
   40688:	4565383a 	mul	r18,r8,r21
   4068c:	8349383a 	mul	r4,r16,r13
   40690:	500e943a 	slli	r7,r10,16
   40694:	3010d43a 	srli	r8,r6,16
   40698:	5028d43a 	srli	r20,r10,16
   4069c:	2489883a 	add	r4,r4,r18
   406a0:	8abfffcc 	andi	r10,r17,65535
   406a4:	3a95883a 	add	r10,r7,r10
   406a8:	4119883a 	add	r12,r8,r4
   406ac:	a169883a 	add	r20,r20,r5
   406b0:	1a87883a 	add	r3,r3,r10
   406b4:	6d5b383a 	mul	r13,r13,r21
   406b8:	6480022e 	bgeu	r12,r18,406c4 <__muldf3+0x400>
   406bc:	01000074 	movhi	r4,1
   406c0:	691b883a 	add	r13,r13,r4
   406c4:	7c25383a 	mul	r18,r15,r16
   406c8:	7d4b383a 	mul	r5,r15,r21
   406cc:	84cf383a 	mul	r7,r16,r19
   406d0:	901ed43a 	srli	r15,r18,16
   406d4:	6008d43a 	srli	r4,r12,16
   406d8:	6010943a 	slli	r8,r12,16
   406dc:	394f883a 	add	r7,r7,r5
   406e0:	333fffcc 	andi	r12,r6,65535
   406e4:	79df883a 	add	r15,r15,r7
   406e8:	235b883a 	add	r13,r4,r13
   406ec:	9d63383a 	mul	r17,r19,r21
   406f0:	4309883a 	add	r4,r8,r12
   406f4:	7940022e 	bgeu	r15,r5,40700 <__muldf3+0x43c>
   406f8:	01400074 	movhi	r5,1
   406fc:	8963883a 	add	r17,r17,r5
   40700:	780a943a 	slli	r5,r15,16
   40704:	91bfffcc 	andi	r6,r18,65535
   40708:	70c7883a 	add	r3,r14,r3
   4070c:	298d883a 	add	r6,r5,r6
   40710:	1a8f803a 	cmpltu	r7,r3,r10
   40714:	350b883a 	add	r5,r6,r20
   40718:	20c7883a 	add	r3,r4,r3
   4071c:	3955883a 	add	r10,r7,r5
   40720:	1909803a 	cmpltu	r4,r3,r4
   40724:	6a91883a 	add	r8,r13,r10
   40728:	780cd43a 	srli	r6,r15,16
   4072c:	2219883a 	add	r12,r4,r8
   40730:	2d0b803a 	cmpltu	r5,r5,r20
   40734:	51cf803a 	cmpltu	r7,r10,r7
   40738:	29ceb03a 	or	r7,r5,r7
   4073c:	4351803a 	cmpltu	r8,r8,r13
   40740:	610b803a 	cmpltu	r5,r12,r4
   40744:	4148b03a 	or	r4,r8,r5
   40748:	398f883a 	add	r7,r7,r6
   4074c:	3909883a 	add	r4,r7,r4
   40750:	1810927a 	slli	r8,r3,9
   40754:	2449883a 	add	r4,r4,r17
   40758:	2008927a 	slli	r4,r4,9
   4075c:	6022d5fa 	srli	r17,r12,23
   40760:	1806d5fa 	srli	r3,r3,23
   40764:	4252b03a 	or	r9,r8,r9
   40768:	600a927a 	slli	r5,r12,9
   4076c:	4810c03a 	cmpne	r8,r9,zero
   40770:	2462b03a 	or	r17,r4,r17
   40774:	40c6b03a 	or	r3,r8,r3
   40778:	8900402c 	andhi	r4,r17,256
   4077c:	1950b03a 	or	r8,r3,r5
   40780:	20000726 	beq	r4,zero,407a0 <__muldf3+0x4dc>
   40784:	4006d07a 	srli	r3,r8,1
   40788:	880497fa 	slli	r2,r17,31
   4078c:	4200004c 	andi	r8,r8,1
   40790:	8822d07a 	srli	r17,r17,1
   40794:	1a10b03a 	or	r8,r3,r8
   40798:	1210b03a 	or	r8,r2,r8
   4079c:	5805883a 	mov	r2,r11
   407a0:	1140ffc4 	addi	r5,r2,1023
   407a4:	0140440e 	bge	zero,r5,408b8 <__muldf3+0x5f4>
   407a8:	40c001cc 	andi	r3,r8,7
   407ac:	18000726 	beq	r3,zero,407cc <__muldf3+0x508>
   407b0:	40c003cc 	andi	r3,r8,15
   407b4:	01000104 	movi	r4,4
   407b8:	19000426 	beq	r3,r4,407cc <__muldf3+0x508>
   407bc:	4107883a 	add	r3,r8,r4
   407c0:	1a11803a 	cmpltu	r8,r3,r8
   407c4:	8a23883a 	add	r17,r17,r8
   407c8:	1811883a 	mov	r8,r3
   407cc:	88c0402c 	andhi	r3,r17,256
   407d0:	18000426 	beq	r3,zero,407e4 <__muldf3+0x520>
   407d4:	11410004 	addi	r5,r2,1024
   407d8:	00bfc034 	movhi	r2,65280
   407dc:	10bfffc4 	addi	r2,r2,-1
   407e0:	88a2703a 	and	r17,r17,r2
   407e4:	0081ff84 	movi	r2,2046
   407e8:	117f6416 	blt	r2,r5,4057c <__alt_data_end+0xfffd947c>
   407ec:	8828977a 	slli	r20,r17,29
   407f0:	4010d0fa 	srli	r8,r8,3
   407f4:	8822927a 	slli	r17,r17,9
   407f8:	2881ffcc 	andi	r2,r5,2047
   407fc:	a228b03a 	or	r20,r20,r8
   40800:	880ad33a 	srli	r5,r17,12
   40804:	b02b883a 	mov	r21,r22
   40808:	003f0d06 	br	40440 <__alt_data_end+0xfffd9340>
   4080c:	8080022c 	andhi	r2,r16,8
   40810:	10000926 	beq	r2,zero,40838 <__muldf3+0x574>
   40814:	8880022c 	andhi	r2,r17,8
   40818:	1000071e 	bne	r2,zero,40838 <__muldf3+0x574>
   4081c:	00800434 	movhi	r2,16
   40820:	89400234 	orhi	r5,r17,8
   40824:	10bfffc4 	addi	r2,r2,-1
   40828:	b82b883a 	mov	r21,r23
   4082c:	288a703a 	and	r5,r5,r2
   40830:	4029883a 	mov	r20,r8
   40834:	003f6806 	br	405d8 <__alt_data_end+0xfffd94d8>
   40838:	00800434 	movhi	r2,16
   4083c:	81400234 	orhi	r5,r16,8
   40840:	10bfffc4 	addi	r2,r2,-1
   40844:	288a703a 	and	r5,r5,r2
   40848:	003f6306 	br	405d8 <__alt_data_end+0xfffd94d8>
   4084c:	147ff604 	addi	r17,r2,-40
   40850:	3462983a 	sll	r17,r6,r17
   40854:	0011883a 	mov	r8,zero
   40858:	003f4406 	br	4056c <__alt_data_end+0xfffd946c>
   4085c:	3009883a 	mov	r4,r6
   40860:	d9800215 	stw	r6,8(sp)
   40864:	da400115 	stw	r9,4(sp)
   40868:	da800015 	stw	r10,0(sp)
   4086c:	0040d700 	call	40d70 <__clzsi2>
   40870:	10800804 	addi	r2,r2,32
   40874:	da800017 	ldw	r10,0(sp)
   40878:	da400117 	ldw	r9,4(sp)
   4087c:	d9800217 	ldw	r6,8(sp)
   40880:	003f3006 	br	40544 <__alt_data_end+0xfffd9444>
   40884:	143ff604 	addi	r16,r2,-40
   40888:	9c20983a 	sll	r16,r19,r16
   4088c:	0029883a 	mov	r20,zero
   40890:	003f1606 	br	404ec <__alt_data_end+0xfffd93ec>
   40894:	d9800215 	stw	r6,8(sp)
   40898:	d9c00015 	stw	r7,0(sp)
   4089c:	da400115 	stw	r9,4(sp)
   408a0:	0040d700 	call	40d70 <__clzsi2>
   408a4:	10800804 	addi	r2,r2,32
   408a8:	da400117 	ldw	r9,4(sp)
   408ac:	d9c00017 	ldw	r7,0(sp)
   408b0:	d9800217 	ldw	r6,8(sp)
   408b4:	003f0306 	br	404c4 <__alt_data_end+0xfffd93c4>
   408b8:	00c00044 	movi	r3,1
   408bc:	1947c83a 	sub	r3,r3,r5
   408c0:	00800e04 	movi	r2,56
   408c4:	10feda16 	blt	r2,r3,40430 <__alt_data_end+0xfffd9330>
   408c8:	008007c4 	movi	r2,31
   408cc:	10c01b16 	blt	r2,r3,4093c <__muldf3+0x678>
   408d0:	00800804 	movi	r2,32
   408d4:	10c5c83a 	sub	r2,r2,r3
   408d8:	888a983a 	sll	r5,r17,r2
   408dc:	40c8d83a 	srl	r4,r8,r3
   408e0:	4084983a 	sll	r2,r8,r2
   408e4:	88e2d83a 	srl	r17,r17,r3
   408e8:	2906b03a 	or	r3,r5,r4
   408ec:	1004c03a 	cmpne	r2,r2,zero
   408f0:	1886b03a 	or	r3,r3,r2
   408f4:	188001cc 	andi	r2,r3,7
   408f8:	10000726 	beq	r2,zero,40918 <__muldf3+0x654>
   408fc:	188003cc 	andi	r2,r3,15
   40900:	01000104 	movi	r4,4
   40904:	11000426 	beq	r2,r4,40918 <__muldf3+0x654>
   40908:	1805883a 	mov	r2,r3
   4090c:	10c00104 	addi	r3,r2,4
   40910:	1885803a 	cmpltu	r2,r3,r2
   40914:	88a3883a 	add	r17,r17,r2
   40918:	8880202c 	andhi	r2,r17,128
   4091c:	10001c26 	beq	r2,zero,40990 <__muldf3+0x6cc>
   40920:	b02b883a 	mov	r21,r22
   40924:	00800044 	movi	r2,1
   40928:	000b883a 	mov	r5,zero
   4092c:	0029883a 	mov	r20,zero
   40930:	003ec306 	br	40440 <__alt_data_end+0xfffd9340>
   40934:	5805883a 	mov	r2,r11
   40938:	003f9906 	br	407a0 <__alt_data_end+0xfffd96a0>
   4093c:	00bff844 	movi	r2,-31
   40940:	1145c83a 	sub	r2,r2,r5
   40944:	8888d83a 	srl	r4,r17,r2
   40948:	00800804 	movi	r2,32
   4094c:	18801a26 	beq	r3,r2,409b8 <__muldf3+0x6f4>
   40950:	00801004 	movi	r2,64
   40954:	10c5c83a 	sub	r2,r2,r3
   40958:	8884983a 	sll	r2,r17,r2
   4095c:	1204b03a 	or	r2,r2,r8
   40960:	1004c03a 	cmpne	r2,r2,zero
   40964:	2084b03a 	or	r2,r4,r2
   40968:	144001cc 	andi	r17,r2,7
   4096c:	88000d1e 	bne	r17,zero,409a4 <__muldf3+0x6e0>
   40970:	000b883a 	mov	r5,zero
   40974:	1028d0fa 	srli	r20,r2,3
   40978:	b02b883a 	mov	r21,r22
   4097c:	0005883a 	mov	r2,zero
   40980:	a468b03a 	or	r20,r20,r17
   40984:	003eae06 	br	40440 <__alt_data_end+0xfffd9340>
   40988:	1007883a 	mov	r3,r2
   4098c:	0023883a 	mov	r17,zero
   40990:	880a927a 	slli	r5,r17,9
   40994:	1805883a 	mov	r2,r3
   40998:	8822977a 	slli	r17,r17,29
   4099c:	280ad33a 	srli	r5,r5,12
   409a0:	003ff406 	br	40974 <__alt_data_end+0xfffd9874>
   409a4:	10c003cc 	andi	r3,r2,15
   409a8:	01000104 	movi	r4,4
   409ac:	193ff626 	beq	r3,r4,40988 <__alt_data_end+0xfffd9888>
   409b0:	0023883a 	mov	r17,zero
   409b4:	003fd506 	br	4090c <__alt_data_end+0xfffd980c>
   409b8:	0005883a 	mov	r2,zero
   409bc:	003fe706 	br	4095c <__alt_data_end+0xfffd985c>
   409c0:	00800434 	movhi	r2,16
   409c4:	89400234 	orhi	r5,r17,8
   409c8:	10bfffc4 	addi	r2,r2,-1
   409cc:	b02b883a 	mov	r21,r22
   409d0:	288a703a 	and	r5,r5,r2
   409d4:	4029883a 	mov	r20,r8
   409d8:	003eff06 	br	405d8 <__alt_data_end+0xfffd94d8>

000409dc <__floatsidf>:
   409dc:	defffd04 	addi	sp,sp,-12
   409e0:	dfc00215 	stw	ra,8(sp)
   409e4:	dc400115 	stw	r17,4(sp)
   409e8:	dc000015 	stw	r16,0(sp)
   409ec:	20002b26 	beq	r4,zero,40a9c <__floatsidf+0xc0>
   409f0:	2023883a 	mov	r17,r4
   409f4:	2020d7fa 	srli	r16,r4,31
   409f8:	20002d16 	blt	r4,zero,40ab0 <__floatsidf+0xd4>
   409fc:	8809883a 	mov	r4,r17
   40a00:	0040d700 	call	40d70 <__clzsi2>
   40a04:	01410784 	movi	r5,1054
   40a08:	288bc83a 	sub	r5,r5,r2
   40a0c:	01010cc4 	movi	r4,1075
   40a10:	2149c83a 	sub	r4,r4,r5
   40a14:	00c007c4 	movi	r3,31
   40a18:	1900160e 	bge	r3,r4,40a74 <__floatsidf+0x98>
   40a1c:	00c104c4 	movi	r3,1043
   40a20:	1947c83a 	sub	r3,r3,r5
   40a24:	88c6983a 	sll	r3,r17,r3
   40a28:	00800434 	movhi	r2,16
   40a2c:	10bfffc4 	addi	r2,r2,-1
   40a30:	1886703a 	and	r3,r3,r2
   40a34:	2941ffcc 	andi	r5,r5,2047
   40a38:	800d883a 	mov	r6,r16
   40a3c:	0005883a 	mov	r2,zero
   40a40:	280a953a 	slli	r5,r5,20
   40a44:	31803fcc 	andi	r6,r6,255
   40a48:	01000434 	movhi	r4,16
   40a4c:	300c97fa 	slli	r6,r6,31
   40a50:	213fffc4 	addi	r4,r4,-1
   40a54:	1906703a 	and	r3,r3,r4
   40a58:	1946b03a 	or	r3,r3,r5
   40a5c:	1986b03a 	or	r3,r3,r6
   40a60:	dfc00217 	ldw	ra,8(sp)
   40a64:	dc400117 	ldw	r17,4(sp)
   40a68:	dc000017 	ldw	r16,0(sp)
   40a6c:	dec00304 	addi	sp,sp,12
   40a70:	f800283a 	ret
   40a74:	00c002c4 	movi	r3,11
   40a78:	1887c83a 	sub	r3,r3,r2
   40a7c:	88c6d83a 	srl	r3,r17,r3
   40a80:	8904983a 	sll	r2,r17,r4
   40a84:	01000434 	movhi	r4,16
   40a88:	213fffc4 	addi	r4,r4,-1
   40a8c:	2941ffcc 	andi	r5,r5,2047
   40a90:	1906703a 	and	r3,r3,r4
   40a94:	800d883a 	mov	r6,r16
   40a98:	003fe906 	br	40a40 <__alt_data_end+0xfffd9940>
   40a9c:	000d883a 	mov	r6,zero
   40aa0:	000b883a 	mov	r5,zero
   40aa4:	0007883a 	mov	r3,zero
   40aa8:	0005883a 	mov	r2,zero
   40aac:	003fe406 	br	40a40 <__alt_data_end+0xfffd9940>
   40ab0:	0123c83a 	sub	r17,zero,r4
   40ab4:	003fd106 	br	409fc <__alt_data_end+0xfffd98fc>

00040ab8 <__extendsfdf2>:
   40ab8:	200ad5fa 	srli	r5,r4,23
   40abc:	defffd04 	addi	sp,sp,-12
   40ac0:	dc400115 	stw	r17,4(sp)
   40ac4:	29403fcc 	andi	r5,r5,255
   40ac8:	29800044 	addi	r6,r5,1
   40acc:	04402034 	movhi	r17,128
   40ad0:	dc000015 	stw	r16,0(sp)
   40ad4:	8c7fffc4 	addi	r17,r17,-1
   40ad8:	dfc00215 	stw	ra,8(sp)
   40adc:	31803fcc 	andi	r6,r6,255
   40ae0:	00800044 	movi	r2,1
   40ae4:	8922703a 	and	r17,r17,r4
   40ae8:	2020d7fa 	srli	r16,r4,31
   40aec:	1180110e 	bge	r2,r6,40b34 <__extendsfdf2+0x7c>
   40af0:	880cd0fa 	srli	r6,r17,3
   40af4:	8822977a 	slli	r17,r17,29
   40af8:	2940e004 	addi	r5,r5,896
   40afc:	2941ffcc 	andi	r5,r5,2047
   40b00:	2804953a 	slli	r2,r5,20
   40b04:	01400434 	movhi	r5,16
   40b08:	800697fa 	slli	r3,r16,31
   40b0c:	297fffc4 	addi	r5,r5,-1
   40b10:	314a703a 	and	r5,r6,r5
   40b14:	288ab03a 	or	r5,r5,r2
   40b18:	28c6b03a 	or	r3,r5,r3
   40b1c:	8805883a 	mov	r2,r17
   40b20:	dfc00217 	ldw	ra,8(sp)
   40b24:	dc400117 	ldw	r17,4(sp)
   40b28:	dc000017 	ldw	r16,0(sp)
   40b2c:	dec00304 	addi	sp,sp,12
   40b30:	f800283a 	ret
   40b34:	2800111e 	bne	r5,zero,40b7c <__extendsfdf2+0xc4>
   40b38:	88001c26 	beq	r17,zero,40bac <__extendsfdf2+0xf4>
   40b3c:	8809883a 	mov	r4,r17
   40b40:	0040d700 	call	40d70 <__clzsi2>
   40b44:	00c00284 	movi	r3,10
   40b48:	18801b16 	blt	r3,r2,40bb8 <__extendsfdf2+0x100>
   40b4c:	018002c4 	movi	r6,11
   40b50:	308dc83a 	sub	r6,r6,r2
   40b54:	11000544 	addi	r4,r2,21
   40b58:	8986d83a 	srl	r3,r17,r6
   40b5c:	8922983a 	sll	r17,r17,r4
   40b60:	0180e244 	movi	r6,905
   40b64:	01400434 	movhi	r5,16
   40b68:	3085c83a 	sub	r2,r6,r2
   40b6c:	297fffc4 	addi	r5,r5,-1
   40b70:	194c703a 	and	r6,r3,r5
   40b74:	1141ffcc 	andi	r5,r2,2047
   40b78:	003fe006 	br	40afc <__alt_data_end+0xfffd99fc>
   40b7c:	88000826 	beq	r17,zero,40ba0 <__extendsfdf2+0xe8>
   40b80:	880cd0fa 	srli	r6,r17,3
   40b84:	00800434 	movhi	r2,16
   40b88:	10bfffc4 	addi	r2,r2,-1
   40b8c:	31800234 	orhi	r6,r6,8
   40b90:	8822977a 	slli	r17,r17,29
   40b94:	308c703a 	and	r6,r6,r2
   40b98:	0141ffc4 	movi	r5,2047
   40b9c:	003fd706 	br	40afc <__alt_data_end+0xfffd99fc>
   40ba0:	0141ffc4 	movi	r5,2047
   40ba4:	000d883a 	mov	r6,zero
   40ba8:	003fd406 	br	40afc <__alt_data_end+0xfffd99fc>
   40bac:	000b883a 	mov	r5,zero
   40bb0:	000d883a 	mov	r6,zero
   40bb4:	003fd106 	br	40afc <__alt_data_end+0xfffd99fc>
   40bb8:	11bffd44 	addi	r6,r2,-11
   40bbc:	8986983a 	sll	r3,r17,r6
   40bc0:	0023883a 	mov	r17,zero
   40bc4:	003fe606 	br	40b60 <__alt_data_end+0xfffd9a60>

00040bc8 <__truncdfsf2>:
   40bc8:	2810d53a 	srli	r8,r5,20
   40bcc:	01c00434 	movhi	r7,16
   40bd0:	39ffffc4 	addi	r7,r7,-1
   40bd4:	29ce703a 	and	r7,r5,r7
   40bd8:	4201ffcc 	andi	r8,r8,2047
   40bdc:	380e90fa 	slli	r7,r7,3
   40be0:	200cd77a 	srli	r6,r4,29
   40be4:	42400044 	addi	r9,r8,1
   40be8:	4a41ffcc 	andi	r9,r9,2047
   40bec:	00c00044 	movi	r3,1
   40bf0:	280ad7fa 	srli	r5,r5,31
   40bf4:	31ceb03a 	or	r7,r6,r7
   40bf8:	200490fa 	slli	r2,r4,3
   40bfc:	1a40230e 	bge	r3,r9,40c8c <__truncdfsf2+0xc4>
   40c00:	40ff2004 	addi	r3,r8,-896
   40c04:	01803f84 	movi	r6,254
   40c08:	30c01516 	blt	r6,r3,40c60 <__truncdfsf2+0x98>
   40c0c:	00c0380e 	bge	zero,r3,40cf0 <__truncdfsf2+0x128>
   40c10:	200c91ba 	slli	r6,r4,6
   40c14:	380e90fa 	slli	r7,r7,3
   40c18:	1004d77a 	srli	r2,r2,29
   40c1c:	300cc03a 	cmpne	r6,r6,zero
   40c20:	31ccb03a 	or	r6,r6,r7
   40c24:	308cb03a 	or	r6,r6,r2
   40c28:	308001cc 	andi	r2,r6,7
   40c2c:	10000426 	beq	r2,zero,40c40 <__truncdfsf2+0x78>
   40c30:	308003cc 	andi	r2,r6,15
   40c34:	01000104 	movi	r4,4
   40c38:	11000126 	beq	r2,r4,40c40 <__truncdfsf2+0x78>
   40c3c:	31800104 	addi	r6,r6,4
   40c40:	3081002c 	andhi	r2,r6,1024
   40c44:	10001626 	beq	r2,zero,40ca0 <__truncdfsf2+0xd8>
   40c48:	18c00044 	addi	r3,r3,1
   40c4c:	00803fc4 	movi	r2,255
   40c50:	18800326 	beq	r3,r2,40c60 <__truncdfsf2+0x98>
   40c54:	300c91ba 	slli	r6,r6,6
   40c58:	300cd27a 	srli	r6,r6,9
   40c5c:	00000206 	br	40c68 <__truncdfsf2+0xa0>
   40c60:	00ffffc4 	movi	r3,-1
   40c64:	000d883a 	mov	r6,zero
   40c68:	18c03fcc 	andi	r3,r3,255
   40c6c:	180895fa 	slli	r4,r3,23
   40c70:	00c02034 	movhi	r3,128
   40c74:	280a97fa 	slli	r5,r5,31
   40c78:	18ffffc4 	addi	r3,r3,-1
   40c7c:	30c6703a 	and	r3,r6,r3
   40c80:	1906b03a 	or	r3,r3,r4
   40c84:	1944b03a 	or	r2,r3,r5
   40c88:	f800283a 	ret
   40c8c:	40000b1e 	bne	r8,zero,40cbc <__truncdfsf2+0xf4>
   40c90:	388cb03a 	or	r6,r7,r2
   40c94:	0007883a 	mov	r3,zero
   40c98:	30000426 	beq	r6,zero,40cac <__truncdfsf2+0xe4>
   40c9c:	01800144 	movi	r6,5
   40ca0:	00803fc4 	movi	r2,255
   40ca4:	300cd0fa 	srli	r6,r6,3
   40ca8:	18800a26 	beq	r3,r2,40cd4 <__truncdfsf2+0x10c>
   40cac:	00802034 	movhi	r2,128
   40cb0:	10bfffc4 	addi	r2,r2,-1
   40cb4:	308c703a 	and	r6,r6,r2
   40cb8:	003feb06 	br	40c68 <__alt_data_end+0xfffd9b68>
   40cbc:	3888b03a 	or	r4,r7,r2
   40cc0:	203fe726 	beq	r4,zero,40c60 <__alt_data_end+0xfffd9b60>
   40cc4:	380c90fa 	slli	r6,r7,3
   40cc8:	00c03fc4 	movi	r3,255
   40ccc:	31808034 	orhi	r6,r6,512
   40cd0:	003fd506 	br	40c28 <__alt_data_end+0xfffd9b28>
   40cd4:	303fe226 	beq	r6,zero,40c60 <__alt_data_end+0xfffd9b60>
   40cd8:	00802034 	movhi	r2,128
   40cdc:	31801034 	orhi	r6,r6,64
   40ce0:	10bfffc4 	addi	r2,r2,-1
   40ce4:	00ffffc4 	movi	r3,-1
   40ce8:	308c703a 	and	r6,r6,r2
   40cec:	003fde06 	br	40c68 <__alt_data_end+0xfffd9b68>
   40cf0:	013ffa44 	movi	r4,-23
   40cf4:	19000e16 	blt	r3,r4,40d30 <__truncdfsf2+0x168>
   40cf8:	01000784 	movi	r4,30
   40cfc:	20c9c83a 	sub	r4,r4,r3
   40d00:	018007c4 	movi	r6,31
   40d04:	39c02034 	orhi	r7,r7,128
   40d08:	31000b16 	blt	r6,r4,40d38 <__truncdfsf2+0x170>
   40d0c:	423f2084 	addi	r8,r8,-894
   40d10:	120c983a 	sll	r6,r2,r8
   40d14:	3a0e983a 	sll	r7,r7,r8
   40d18:	1104d83a 	srl	r2,r2,r4
   40d1c:	300cc03a 	cmpne	r6,r6,zero
   40d20:	31ceb03a 	or	r7,r6,r7
   40d24:	388cb03a 	or	r6,r7,r2
   40d28:	0007883a 	mov	r3,zero
   40d2c:	003fbe06 	br	40c28 <__alt_data_end+0xfffd9b28>
   40d30:	0007883a 	mov	r3,zero
   40d34:	003fd906 	br	40c9c <__alt_data_end+0xfffd9b9c>
   40d38:	01bfff84 	movi	r6,-2
   40d3c:	30cdc83a 	sub	r6,r6,r3
   40d40:	00c00804 	movi	r3,32
   40d44:	398cd83a 	srl	r6,r7,r6
   40d48:	20c00726 	beq	r4,r3,40d68 <__truncdfsf2+0x1a0>
   40d4c:	423f2884 	addi	r8,r8,-862
   40d50:	3a0e983a 	sll	r7,r7,r8
   40d54:	3884b03a 	or	r2,r7,r2
   40d58:	1004c03a 	cmpne	r2,r2,zero
   40d5c:	118cb03a 	or	r6,r2,r6
   40d60:	0007883a 	mov	r3,zero
   40d64:	003fb006 	br	40c28 <__alt_data_end+0xfffd9b28>
   40d68:	000f883a 	mov	r7,zero
   40d6c:	003ff906 	br	40d54 <__alt_data_end+0xfffd9c54>

00040d70 <__clzsi2>:
   40d70:	00bfffd4 	movui	r2,65535
   40d74:	11000536 	bltu	r2,r4,40d8c <__clzsi2+0x1c>
   40d78:	00803fc4 	movi	r2,255
   40d7c:	11000f36 	bltu	r2,r4,40dbc <__clzsi2+0x4c>
   40d80:	00800804 	movi	r2,32
   40d84:	0007883a 	mov	r3,zero
   40d88:	00000506 	br	40da0 <__clzsi2+0x30>
   40d8c:	00804034 	movhi	r2,256
   40d90:	10bfffc4 	addi	r2,r2,-1
   40d94:	11000c2e 	bgeu	r2,r4,40dc8 <__clzsi2+0x58>
   40d98:	00800204 	movi	r2,8
   40d9c:	00c00604 	movi	r3,24
   40da0:	20c8d83a 	srl	r4,r4,r3
   40da4:	00c00174 	movhi	r3,5
   40da8:	18fdbdc4 	addi	r3,r3,-2313
   40dac:	1909883a 	add	r4,r3,r4
   40db0:	20c00003 	ldbu	r3,0(r4)
   40db4:	10c5c83a 	sub	r2,r2,r3
   40db8:	f800283a 	ret
   40dbc:	00800604 	movi	r2,24
   40dc0:	00c00204 	movi	r3,8
   40dc4:	003ff606 	br	40da0 <__alt_data_end+0xfffd9ca0>
   40dc8:	00800404 	movi	r2,16
   40dcc:	1007883a 	mov	r3,r2
   40dd0:	003ff306 	br	40da0 <__alt_data_end+0xfffd9ca0>

00040dd4 <_printf_r>:
   40dd4:	defffd04 	addi	sp,sp,-12
   40dd8:	2805883a 	mov	r2,r5
   40ddc:	dfc00015 	stw	ra,0(sp)
   40de0:	d9800115 	stw	r6,4(sp)
   40de4:	d9c00215 	stw	r7,8(sp)
   40de8:	21400217 	ldw	r5,8(r4)
   40dec:	d9c00104 	addi	r7,sp,4
   40df0:	100d883a 	mov	r6,r2
   40df4:	0040fac0 	call	40fac <___vfprintf_internal_r>
   40df8:	dfc00017 	ldw	ra,0(sp)
   40dfc:	dec00304 	addi	sp,sp,12
   40e00:	f800283a 	ret

00040e04 <printf>:
   40e04:	defffc04 	addi	sp,sp,-16
   40e08:	dfc00015 	stw	ra,0(sp)
   40e0c:	d9400115 	stw	r5,4(sp)
   40e10:	d9800215 	stw	r6,8(sp)
   40e14:	d9c00315 	stw	r7,12(sp)
   40e18:	00800174 	movhi	r2,5
   40e1c:	10852804 	addi	r2,r2,5280
   40e20:	10800017 	ldw	r2,0(r2)
   40e24:	200b883a 	mov	r5,r4
   40e28:	d9800104 	addi	r6,sp,4
   40e2c:	11000217 	ldw	r4,8(r2)
   40e30:	00431a40 	call	431a4 <__vfprintf_internal>
   40e34:	dfc00017 	ldw	ra,0(sp)
   40e38:	dec00404 	addi	sp,sp,16
   40e3c:	f800283a 	ret

00040e40 <_puts_r>:
   40e40:	defff604 	addi	sp,sp,-40
   40e44:	dc000715 	stw	r16,28(sp)
   40e48:	2021883a 	mov	r16,r4
   40e4c:	2809883a 	mov	r4,r5
   40e50:	dc400815 	stw	r17,32(sp)
   40e54:	dfc00915 	stw	ra,36(sp)
   40e58:	2823883a 	mov	r17,r5
   40e5c:	0040f140 	call	40f14 <strlen>
   40e60:	10c00044 	addi	r3,r2,1
   40e64:	d8800115 	stw	r2,4(sp)
   40e68:	00800174 	movhi	r2,5
   40e6c:	10bdfe04 	addi	r2,r2,-2056
   40e70:	d8800215 	stw	r2,8(sp)
   40e74:	00800044 	movi	r2,1
   40e78:	d8800315 	stw	r2,12(sp)
   40e7c:	00800084 	movi	r2,2
   40e80:	dc400015 	stw	r17,0(sp)
   40e84:	d8c00615 	stw	r3,24(sp)
   40e88:	dec00415 	stw	sp,16(sp)
   40e8c:	d8800515 	stw	r2,20(sp)
   40e90:	80000226 	beq	r16,zero,40e9c <_puts_r+0x5c>
   40e94:	80800e17 	ldw	r2,56(r16)
   40e98:	10001426 	beq	r2,zero,40eec <_puts_r+0xac>
   40e9c:	81400217 	ldw	r5,8(r16)
   40ea0:	2880030b 	ldhu	r2,12(r5)
   40ea4:	10c8000c 	andi	r3,r2,8192
   40ea8:	1800061e 	bne	r3,zero,40ec4 <_puts_r+0x84>
   40eac:	29001917 	ldw	r4,100(r5)
   40eb0:	00f7ffc4 	movi	r3,-8193
   40eb4:	10880014 	ori	r2,r2,8192
   40eb8:	20c6703a 	and	r3,r4,r3
   40ebc:	2880030d 	sth	r2,12(r5)
   40ec0:	28c01915 	stw	r3,100(r5)
   40ec4:	d9800404 	addi	r6,sp,16
   40ec8:	8009883a 	mov	r4,r16
   40ecc:	00456d40 	call	456d4 <__sfvwrite_r>
   40ed0:	1000091e 	bne	r2,zero,40ef8 <_puts_r+0xb8>
   40ed4:	00800284 	movi	r2,10
   40ed8:	dfc00917 	ldw	ra,36(sp)
   40edc:	dc400817 	ldw	r17,32(sp)
   40ee0:	dc000717 	ldw	r16,28(sp)
   40ee4:	dec00a04 	addi	sp,sp,40
   40ee8:	f800283a 	ret
   40eec:	8009883a 	mov	r4,r16
   40ef0:	00452500 	call	45250 <__sinit>
   40ef4:	003fe906 	br	40e9c <__alt_data_end+0xfffd9d9c>
   40ef8:	00bfffc4 	movi	r2,-1
   40efc:	003ff606 	br	40ed8 <__alt_data_end+0xfffd9dd8>

00040f00 <puts>:
   40f00:	00800174 	movhi	r2,5
   40f04:	10852804 	addi	r2,r2,5280
   40f08:	200b883a 	mov	r5,r4
   40f0c:	11000017 	ldw	r4,0(r2)
   40f10:	0040e401 	jmpi	40e40 <_puts_r>

00040f14 <strlen>:
   40f14:	208000cc 	andi	r2,r4,3
   40f18:	10002026 	beq	r2,zero,40f9c <strlen+0x88>
   40f1c:	20800007 	ldb	r2,0(r4)
   40f20:	10002026 	beq	r2,zero,40fa4 <strlen+0x90>
   40f24:	2005883a 	mov	r2,r4
   40f28:	00000206 	br	40f34 <strlen+0x20>
   40f2c:	10c00007 	ldb	r3,0(r2)
   40f30:	18001826 	beq	r3,zero,40f94 <strlen+0x80>
   40f34:	10800044 	addi	r2,r2,1
   40f38:	10c000cc 	andi	r3,r2,3
   40f3c:	183ffb1e 	bne	r3,zero,40f2c <__alt_data_end+0xfffd9e2c>
   40f40:	10c00017 	ldw	r3,0(r2)
   40f44:	01ffbff4 	movhi	r7,65279
   40f48:	39ffbfc4 	addi	r7,r7,-257
   40f4c:	00ca303a 	nor	r5,zero,r3
   40f50:	01a02074 	movhi	r6,32897
   40f54:	19c7883a 	add	r3,r3,r7
   40f58:	31a02004 	addi	r6,r6,-32640
   40f5c:	1946703a 	and	r3,r3,r5
   40f60:	1986703a 	and	r3,r3,r6
   40f64:	1800091e 	bne	r3,zero,40f8c <strlen+0x78>
   40f68:	10800104 	addi	r2,r2,4
   40f6c:	10c00017 	ldw	r3,0(r2)
   40f70:	19cb883a 	add	r5,r3,r7
   40f74:	00c6303a 	nor	r3,zero,r3
   40f78:	28c6703a 	and	r3,r5,r3
   40f7c:	1986703a 	and	r3,r3,r6
   40f80:	183ff926 	beq	r3,zero,40f68 <__alt_data_end+0xfffd9e68>
   40f84:	00000106 	br	40f8c <strlen+0x78>
   40f88:	10800044 	addi	r2,r2,1
   40f8c:	10c00007 	ldb	r3,0(r2)
   40f90:	183ffd1e 	bne	r3,zero,40f88 <__alt_data_end+0xfffd9e88>
   40f94:	1105c83a 	sub	r2,r2,r4
   40f98:	f800283a 	ret
   40f9c:	2005883a 	mov	r2,r4
   40fa0:	003fe706 	br	40f40 <__alt_data_end+0xfffd9e40>
   40fa4:	0005883a 	mov	r2,zero
   40fa8:	f800283a 	ret

00040fac <___vfprintf_internal_r>:
   40fac:	deffb804 	addi	sp,sp,-288
   40fb0:	dfc04715 	stw	ra,284(sp)
   40fb4:	ddc04515 	stw	r23,276(sp)
   40fb8:	dd404315 	stw	r21,268(sp)
   40fbc:	d9002c15 	stw	r4,176(sp)
   40fc0:	282f883a 	mov	r23,r5
   40fc4:	302b883a 	mov	r21,r6
   40fc8:	d9c02d15 	stw	r7,180(sp)
   40fcc:	df004615 	stw	fp,280(sp)
   40fd0:	dd804415 	stw	r22,272(sp)
   40fd4:	dd004215 	stw	r20,264(sp)
   40fd8:	dcc04115 	stw	r19,260(sp)
   40fdc:	dc804015 	stw	r18,256(sp)
   40fe0:	dc403f15 	stw	r17,252(sp)
   40fe4:	dc003e15 	stw	r16,248(sp)
   40fe8:	0045dc40 	call	45dc4 <_localeconv_r>
   40fec:	10800017 	ldw	r2,0(r2)
   40ff0:	1009883a 	mov	r4,r2
   40ff4:	d8803415 	stw	r2,208(sp)
   40ff8:	0040f140 	call	40f14 <strlen>
   40ffc:	d8803715 	stw	r2,220(sp)
   41000:	d8802c17 	ldw	r2,176(sp)
   41004:	10000226 	beq	r2,zero,41010 <___vfprintf_internal_r+0x64>
   41008:	10800e17 	ldw	r2,56(r2)
   4100c:	1000f926 	beq	r2,zero,413f4 <___vfprintf_internal_r+0x448>
   41010:	b880030b 	ldhu	r2,12(r23)
   41014:	10c8000c 	andi	r3,r2,8192
   41018:	1800061e 	bne	r3,zero,41034 <___vfprintf_internal_r+0x88>
   4101c:	b9001917 	ldw	r4,100(r23)
   41020:	00f7ffc4 	movi	r3,-8193
   41024:	10880014 	ori	r2,r2,8192
   41028:	20c6703a 	and	r3,r4,r3
   4102c:	b880030d 	sth	r2,12(r23)
   41030:	b8c01915 	stw	r3,100(r23)
   41034:	10c0020c 	andi	r3,r2,8
   41038:	1800c126 	beq	r3,zero,41340 <___vfprintf_internal_r+0x394>
   4103c:	b8c00417 	ldw	r3,16(r23)
   41040:	1800bf26 	beq	r3,zero,41340 <___vfprintf_internal_r+0x394>
   41044:	1080068c 	andi	r2,r2,26
   41048:	00c00284 	movi	r3,10
   4104c:	10c0c426 	beq	r2,r3,41360 <___vfprintf_internal_r+0x3b4>
   41050:	d8c00404 	addi	r3,sp,16
   41054:	05000174 	movhi	r20,5
   41058:	d9001e04 	addi	r4,sp,120
   4105c:	a53e0f84 	addi	r20,r20,-1986
   41060:	d8c01e15 	stw	r3,120(sp)
   41064:	d8002015 	stw	zero,128(sp)
   41068:	d8001f15 	stw	zero,124(sp)
   4106c:	d8003315 	stw	zero,204(sp)
   41070:	d8003615 	stw	zero,216(sp)
   41074:	d8003815 	stw	zero,224(sp)
   41078:	1811883a 	mov	r8,r3
   4107c:	d8003915 	stw	zero,228(sp)
   41080:	d8003a15 	stw	zero,232(sp)
   41084:	d8002f15 	stw	zero,188(sp)
   41088:	d9002815 	stw	r4,160(sp)
   4108c:	a8800007 	ldb	r2,0(r21)
   41090:	10027b26 	beq	r2,zero,41a80 <___vfprintf_internal_r+0xad4>
   41094:	00c00944 	movi	r3,37
   41098:	a821883a 	mov	r16,r21
   4109c:	10c0021e 	bne	r2,r3,410a8 <___vfprintf_internal_r+0xfc>
   410a0:	00001406 	br	410f4 <___vfprintf_internal_r+0x148>
   410a4:	10c00326 	beq	r2,r3,410b4 <___vfprintf_internal_r+0x108>
   410a8:	84000044 	addi	r16,r16,1
   410ac:	80800007 	ldb	r2,0(r16)
   410b0:	103ffc1e 	bne	r2,zero,410a4 <__alt_data_end+0xfffd9fa4>
   410b4:	8563c83a 	sub	r17,r16,r21
   410b8:	88000e26 	beq	r17,zero,410f4 <___vfprintf_internal_r+0x148>
   410bc:	d8c02017 	ldw	r3,128(sp)
   410c0:	d8801f17 	ldw	r2,124(sp)
   410c4:	45400015 	stw	r21,0(r8)
   410c8:	1c47883a 	add	r3,r3,r17
   410cc:	10800044 	addi	r2,r2,1
   410d0:	d8c02015 	stw	r3,128(sp)
   410d4:	44400115 	stw	r17,4(r8)
   410d8:	d8801f15 	stw	r2,124(sp)
   410dc:	00c001c4 	movi	r3,7
   410e0:	1880a716 	blt	r3,r2,41380 <___vfprintf_internal_r+0x3d4>
   410e4:	42000204 	addi	r8,r8,8
   410e8:	d9402f17 	ldw	r5,188(sp)
   410ec:	2c4b883a 	add	r5,r5,r17
   410f0:	d9402f15 	stw	r5,188(sp)
   410f4:	80800007 	ldb	r2,0(r16)
   410f8:	1000a826 	beq	r2,zero,4139c <___vfprintf_internal_r+0x3f0>
   410fc:	84400047 	ldb	r17,1(r16)
   41100:	00bfffc4 	movi	r2,-1
   41104:	85400044 	addi	r21,r16,1
   41108:	d8002785 	stb	zero,158(sp)
   4110c:	0007883a 	mov	r3,zero
   41110:	000f883a 	mov	r7,zero
   41114:	d8802915 	stw	r2,164(sp)
   41118:	d8003115 	stw	zero,196(sp)
   4111c:	0025883a 	mov	r18,zero
   41120:	01401604 	movi	r5,88
   41124:	01800244 	movi	r6,9
   41128:	02800a84 	movi	r10,42
   4112c:	02401b04 	movi	r9,108
   41130:	ad400044 	addi	r21,r21,1
   41134:	88bff804 	addi	r2,r17,-32
   41138:	28830436 	bltu	r5,r2,41d4c <___vfprintf_internal_r+0xda0>
   4113c:	100490ba 	slli	r2,r2,2
   41140:	01000134 	movhi	r4,4
   41144:	21045504 	addi	r4,r4,4436
   41148:	1105883a 	add	r2,r2,r4
   4114c:	10800017 	ldw	r2,0(r2)
   41150:	1000683a 	jmp	r2
   41154:	00041c6c 	andhi	zero,zero,4209
   41158:	00041d4c 	andi	zero,zero,4213
   4115c:	00041d4c 	andi	zero,zero,4213
   41160:	00041c8c 	andi	zero,zero,4210
   41164:	00041d4c 	andi	zero,zero,4213
   41168:	00041d4c 	andi	zero,zero,4213
   4116c:	00041d4c 	andi	zero,zero,4213
   41170:	00041d4c 	andi	zero,zero,4213
   41174:	00041d4c 	andi	zero,zero,4213
   41178:	00041d4c 	andi	zero,zero,4213
   4117c:	00041400 	call	4140 <__alt_mem_onchip_memory2-0x3bec0>
   41180:	00041ba8 	cmpgeui	zero,zero,4206
   41184:	00041d4c 	andi	zero,zero,4213
   41188:	000412c8 	cmpgei	zero,zero,4171
   4118c:	00041428 	cmpgeui	zero,zero,4176
   41190:	00041d4c 	andi	zero,zero,4213
   41194:	00041468 	cmpgeui	zero,zero,4177
   41198:	00041474 	movhi	zero,4177
   4119c:	00041474 	movhi	zero,4177
   411a0:	00041474 	movhi	zero,4177
   411a4:	00041474 	movhi	zero,4177
   411a8:	00041474 	movhi	zero,4177
   411ac:	00041474 	movhi	zero,4177
   411b0:	00041474 	movhi	zero,4177
   411b4:	00041474 	movhi	zero,4177
   411b8:	00041474 	movhi	zero,4177
   411bc:	00041d4c 	andi	zero,zero,4213
   411c0:	00041d4c 	andi	zero,zero,4213
   411c4:	00041d4c 	andi	zero,zero,4213
   411c8:	00041d4c 	andi	zero,zero,4213
   411cc:	00041d4c 	andi	zero,zero,4213
   411d0:	00041d4c 	andi	zero,zero,4213
   411d4:	00041d4c 	andi	zero,zero,4213
   411d8:	00041d4c 	andi	zero,zero,4213
   411dc:	00041d4c 	andi	zero,zero,4213
   411e0:	00041d4c 	andi	zero,zero,4213
   411e4:	000414a8 	cmpgeui	zero,zero,4178
   411e8:	00041564 	muli	zero,zero,4181
   411ec:	00041d4c 	andi	zero,zero,4213
   411f0:	00041564 	muli	zero,zero,4181
   411f4:	00041d4c 	andi	zero,zero,4213
   411f8:	00041d4c 	andi	zero,zero,4213
   411fc:	00041d4c 	andi	zero,zero,4213
   41200:	00041d4c 	andi	zero,zero,4213
   41204:	00041604 	movi	zero,4184
   41208:	00041d4c 	andi	zero,zero,4213
   4120c:	00041d4c 	andi	zero,zero,4213
   41210:	00041610 	cmplti	zero,zero,4184
   41214:	00041d4c 	andi	zero,zero,4213
   41218:	00041d4c 	andi	zero,zero,4213
   4121c:	00041d4c 	andi	zero,zero,4213
   41220:	00041d4c 	andi	zero,zero,4213
   41224:	00041d4c 	andi	zero,zero,4213
   41228:	00041a88 	cmpgei	zero,zero,4202
   4122c:	00041d4c 	andi	zero,zero,4213
   41230:	00041d4c 	andi	zero,zero,4213
   41234:	00041ae8 	cmpgeui	zero,zero,4203
   41238:	00041d4c 	andi	zero,zero,4213
   4123c:	00041d4c 	andi	zero,zero,4213
   41240:	00041d4c 	andi	zero,zero,4213
   41244:	00041d4c 	andi	zero,zero,4213
   41248:	00041d4c 	andi	zero,zero,4213
   4124c:	00041d4c 	andi	zero,zero,4213
   41250:	00041d4c 	andi	zero,zero,4213
   41254:	00041d4c 	andi	zero,zero,4213
   41258:	00041d4c 	andi	zero,zero,4213
   4125c:	00041d4c 	andi	zero,zero,4213
   41260:	00041cf8 	rdprs	zero,zero,4211
   41264:	00041c98 	cmpnei	zero,zero,4210
   41268:	00041564 	muli	zero,zero,4181
   4126c:	00041564 	muli	zero,zero,4181
   41270:	00041564 	muli	zero,zero,4181
   41274:	00041ca8 	cmpgeui	zero,zero,4210
   41278:	00041c98 	cmpnei	zero,zero,4210
   4127c:	00041d4c 	andi	zero,zero,4213
   41280:	00041d4c 	andi	zero,zero,4213
   41284:	00041cb4 	movhi	zero,4210
   41288:	00041d4c 	andi	zero,zero,4213
   4128c:	00041cc4 	movi	zero,4211
   41290:	00041b98 	cmpnei	zero,zero,4206
   41294:	000412d4 	movui	zero,4171
   41298:	00041bb8 	rdprs	zero,zero,4206
   4129c:	00041d4c 	andi	zero,zero,4213
   412a0:	00041bc4 	movi	zero,4207
   412a4:	00041d4c 	andi	zero,zero,4213
   412a8:	00041c20 	cmpeqi	zero,zero,4208
   412ac:	00041d4c 	andi	zero,zero,4213
   412b0:	00041d4c 	andi	zero,zero,4213
   412b4:	00041c30 	cmpltui	zero,zero,4208
   412b8:	d9003117 	ldw	r4,196(sp)
   412bc:	d8802d15 	stw	r2,180(sp)
   412c0:	0109c83a 	sub	r4,zero,r4
   412c4:	d9003115 	stw	r4,196(sp)
   412c8:	94800114 	ori	r18,r18,4
   412cc:	ac400007 	ldb	r17,0(r21)
   412d0:	003f9706 	br	41130 <__alt_data_end+0xfffda030>
   412d4:	00800c04 	movi	r2,48
   412d8:	d9002d17 	ldw	r4,180(sp)
   412dc:	d9402917 	ldw	r5,164(sp)
   412e0:	d8802705 	stb	r2,156(sp)
   412e4:	00801e04 	movi	r2,120
   412e8:	d8802745 	stb	r2,157(sp)
   412ec:	d8002785 	stb	zero,158(sp)
   412f0:	20c00104 	addi	r3,r4,4
   412f4:	24c00017 	ldw	r19,0(r4)
   412f8:	002d883a 	mov	r22,zero
   412fc:	90800094 	ori	r2,r18,2
   41300:	28029a16 	blt	r5,zero,41d6c <___vfprintf_internal_r+0xdc0>
   41304:	00bfdfc4 	movi	r2,-129
   41308:	90a4703a 	and	r18,r18,r2
   4130c:	d8c02d15 	stw	r3,180(sp)
   41310:	94800094 	ori	r18,r18,2
   41314:	9802871e 	bne	r19,zero,41d34 <___vfprintf_internal_r+0xd88>
   41318:	00800174 	movhi	r2,5
   4131c:	10be0804 	addi	r2,r2,-2016
   41320:	d8803915 	stw	r2,228(sp)
   41324:	04401e04 	movi	r17,120
   41328:	d8802917 	ldw	r2,164(sp)
   4132c:	0039883a 	mov	fp,zero
   41330:	1001e926 	beq	r2,zero,41ad8 <___vfprintf_internal_r+0xb2c>
   41334:	0027883a 	mov	r19,zero
   41338:	002d883a 	mov	r22,zero
   4133c:	00020506 	br	41b54 <___vfprintf_internal_r+0xba8>
   41340:	d9002c17 	ldw	r4,176(sp)
   41344:	b80b883a 	mov	r5,r23
   41348:	004327c0 	call	4327c <__swsetup_r>
   4134c:	1005ac1e 	bne	r2,zero,42a00 <___vfprintf_internal_r+0x1a54>
   41350:	b880030b 	ldhu	r2,12(r23)
   41354:	00c00284 	movi	r3,10
   41358:	1080068c 	andi	r2,r2,26
   4135c:	10ff3c1e 	bne	r2,r3,41050 <__alt_data_end+0xfffd9f50>
   41360:	b880038f 	ldh	r2,14(r23)
   41364:	103f3a16 	blt	r2,zero,41050 <__alt_data_end+0xfffd9f50>
   41368:	d9c02d17 	ldw	r7,180(sp)
   4136c:	d9002c17 	ldw	r4,176(sp)
   41370:	a80d883a 	mov	r6,r21
   41374:	b80b883a 	mov	r5,r23
   41378:	00431c00 	call	431c0 <__sbprintf>
   4137c:	00001106 	br	413c4 <___vfprintf_internal_r+0x418>
   41380:	d9002c17 	ldw	r4,176(sp)
   41384:	d9801e04 	addi	r6,sp,120
   41388:	b80b883a 	mov	r5,r23
   4138c:	00485a80 	call	485a8 <__sprint_r>
   41390:	1000081e 	bne	r2,zero,413b4 <___vfprintf_internal_r+0x408>
   41394:	da000404 	addi	r8,sp,16
   41398:	003f5306 	br	410e8 <__alt_data_end+0xfffd9fe8>
   4139c:	d8802017 	ldw	r2,128(sp)
   413a0:	10000426 	beq	r2,zero,413b4 <___vfprintf_internal_r+0x408>
   413a4:	d9002c17 	ldw	r4,176(sp)
   413a8:	d9801e04 	addi	r6,sp,120
   413ac:	b80b883a 	mov	r5,r23
   413b0:	00485a80 	call	485a8 <__sprint_r>
   413b4:	b880030b 	ldhu	r2,12(r23)
   413b8:	1080100c 	andi	r2,r2,64
   413bc:	1005901e 	bne	r2,zero,42a00 <___vfprintf_internal_r+0x1a54>
   413c0:	d8802f17 	ldw	r2,188(sp)
   413c4:	dfc04717 	ldw	ra,284(sp)
   413c8:	df004617 	ldw	fp,280(sp)
   413cc:	ddc04517 	ldw	r23,276(sp)
   413d0:	dd804417 	ldw	r22,272(sp)
   413d4:	dd404317 	ldw	r21,268(sp)
   413d8:	dd004217 	ldw	r20,264(sp)
   413dc:	dcc04117 	ldw	r19,260(sp)
   413e0:	dc804017 	ldw	r18,256(sp)
   413e4:	dc403f17 	ldw	r17,252(sp)
   413e8:	dc003e17 	ldw	r16,248(sp)
   413ec:	dec04804 	addi	sp,sp,288
   413f0:	f800283a 	ret
   413f4:	d9002c17 	ldw	r4,176(sp)
   413f8:	00452500 	call	45250 <__sinit>
   413fc:	003f0406 	br	41010 <__alt_data_end+0xfffd9f10>
   41400:	d8802d17 	ldw	r2,180(sp)
   41404:	d9002d17 	ldw	r4,180(sp)
   41408:	10800017 	ldw	r2,0(r2)
   4140c:	d8803115 	stw	r2,196(sp)
   41410:	20800104 	addi	r2,r4,4
   41414:	d9003117 	ldw	r4,196(sp)
   41418:	203fa716 	blt	r4,zero,412b8 <__alt_data_end+0xfffda1b8>
   4141c:	d8802d15 	stw	r2,180(sp)
   41420:	ac400007 	ldb	r17,0(r21)
   41424:	003f4206 	br	41130 <__alt_data_end+0xfffda030>
   41428:	ac400007 	ldb	r17,0(r21)
   4142c:	aac00044 	addi	r11,r21,1
   41430:	8a872826 	beq	r17,r10,430d4 <___vfprintf_internal_r+0x2128>
   41434:	88bff404 	addi	r2,r17,-48
   41438:	0009883a 	mov	r4,zero
   4143c:	30867d36 	bltu	r6,r2,42e34 <___vfprintf_internal_r+0x1e88>
   41440:	5c400007 	ldb	r17,0(r11)
   41444:	210002a4 	muli	r4,r4,10
   41448:	5d400044 	addi	r21,r11,1
   4144c:	a817883a 	mov	r11,r21
   41450:	2089883a 	add	r4,r4,r2
   41454:	88bff404 	addi	r2,r17,-48
   41458:	30bff92e 	bgeu	r6,r2,41440 <__alt_data_end+0xfffda340>
   4145c:	2005c916 	blt	r4,zero,42b84 <___vfprintf_internal_r+0x1bd8>
   41460:	d9002915 	stw	r4,164(sp)
   41464:	003f3306 	br	41134 <__alt_data_end+0xfffda034>
   41468:	94802014 	ori	r18,r18,128
   4146c:	ac400007 	ldb	r17,0(r21)
   41470:	003f2f06 	br	41130 <__alt_data_end+0xfffda030>
   41474:	a809883a 	mov	r4,r21
   41478:	d8003115 	stw	zero,196(sp)
   4147c:	88bff404 	addi	r2,r17,-48
   41480:	0017883a 	mov	r11,zero
   41484:	24400007 	ldb	r17,0(r4)
   41488:	5ac002a4 	muli	r11,r11,10
   4148c:	ad400044 	addi	r21,r21,1
   41490:	a809883a 	mov	r4,r21
   41494:	12d7883a 	add	r11,r2,r11
   41498:	88bff404 	addi	r2,r17,-48
   4149c:	30bff92e 	bgeu	r6,r2,41484 <__alt_data_end+0xfffda384>
   414a0:	dac03115 	stw	r11,196(sp)
   414a4:	003f2306 	br	41134 <__alt_data_end+0xfffda034>
   414a8:	18c03fcc 	andi	r3,r3,255
   414ac:	18072b1e 	bne	r3,zero,4315c <___vfprintf_internal_r+0x21b0>
   414b0:	94800414 	ori	r18,r18,16
   414b4:	9080080c 	andi	r2,r18,32
   414b8:	10037b26 	beq	r2,zero,422a8 <___vfprintf_internal_r+0x12fc>
   414bc:	d9402d17 	ldw	r5,180(sp)
   414c0:	28800117 	ldw	r2,4(r5)
   414c4:	2cc00017 	ldw	r19,0(r5)
   414c8:	29400204 	addi	r5,r5,8
   414cc:	d9402d15 	stw	r5,180(sp)
   414d0:	102d883a 	mov	r22,r2
   414d4:	10044b16 	blt	r2,zero,42604 <___vfprintf_internal_r+0x1658>
   414d8:	d9402917 	ldw	r5,164(sp)
   414dc:	df002783 	ldbu	fp,158(sp)
   414e0:	2803bc16 	blt	r5,zero,423d4 <___vfprintf_internal_r+0x1428>
   414e4:	00ffdfc4 	movi	r3,-129
   414e8:	9d84b03a 	or	r2,r19,r22
   414ec:	90e4703a 	and	r18,r18,r3
   414f0:	10017726 	beq	r2,zero,41ad0 <___vfprintf_internal_r+0xb24>
   414f4:	b0038326 	beq	r22,zero,42304 <___vfprintf_internal_r+0x1358>
   414f8:	dc402a15 	stw	r17,168(sp)
   414fc:	dc001e04 	addi	r16,sp,120
   41500:	b023883a 	mov	r17,r22
   41504:	402d883a 	mov	r22,r8
   41508:	9809883a 	mov	r4,r19
   4150c:	880b883a 	mov	r5,r17
   41510:	01800284 	movi	r6,10
   41514:	000f883a 	mov	r7,zero
   41518:	004a9a00 	call	4a9a0 <__umoddi3>
   4151c:	10800c04 	addi	r2,r2,48
   41520:	843fffc4 	addi	r16,r16,-1
   41524:	9809883a 	mov	r4,r19
   41528:	880b883a 	mov	r5,r17
   4152c:	80800005 	stb	r2,0(r16)
   41530:	01800284 	movi	r6,10
   41534:	000f883a 	mov	r7,zero
   41538:	004a4280 	call	4a428 <__udivdi3>
   4153c:	1027883a 	mov	r19,r2
   41540:	10c4b03a 	or	r2,r2,r3
   41544:	1823883a 	mov	r17,r3
   41548:	103fef1e 	bne	r2,zero,41508 <__alt_data_end+0xfffda408>
   4154c:	d8c02817 	ldw	r3,160(sp)
   41550:	dc402a17 	ldw	r17,168(sp)
   41554:	b011883a 	mov	r8,r22
   41558:	1c07c83a 	sub	r3,r3,r16
   4155c:	d8c02e15 	stw	r3,184(sp)
   41560:	00005906 	br	416c8 <___vfprintf_internal_r+0x71c>
   41564:	18c03fcc 	andi	r3,r3,255
   41568:	1806fa1e 	bne	r3,zero,43154 <___vfprintf_internal_r+0x21a8>
   4156c:	9080020c 	andi	r2,r18,8
   41570:	10048a26 	beq	r2,zero,4279c <___vfprintf_internal_r+0x17f0>
   41574:	d8c02d17 	ldw	r3,180(sp)
   41578:	d9002d17 	ldw	r4,180(sp)
   4157c:	d9402d17 	ldw	r5,180(sp)
   41580:	18c00017 	ldw	r3,0(r3)
   41584:	21000117 	ldw	r4,4(r4)
   41588:	29400204 	addi	r5,r5,8
   4158c:	d8c03615 	stw	r3,216(sp)
   41590:	d9003815 	stw	r4,224(sp)
   41594:	d9402d15 	stw	r5,180(sp)
   41598:	d9003617 	ldw	r4,216(sp)
   4159c:	d9403817 	ldw	r5,224(sp)
   415a0:	da003d15 	stw	r8,244(sp)
   415a4:	04000044 	movi	r16,1
   415a8:	00481cc0 	call	481cc <__fpclassifyd>
   415ac:	da003d17 	ldw	r8,244(sp)
   415b0:	14041f1e 	bne	r2,r16,42630 <___vfprintf_internal_r+0x1684>
   415b4:	d9003617 	ldw	r4,216(sp)
   415b8:	d9403817 	ldw	r5,224(sp)
   415bc:	000d883a 	mov	r6,zero
   415c0:	000f883a 	mov	r7,zero
   415c4:	004c3840 	call	4c384 <__ledf2>
   415c8:	da003d17 	ldw	r8,244(sp)
   415cc:	1005be16 	blt	r2,zero,42cc8 <___vfprintf_internal_r+0x1d1c>
   415d0:	df002783 	ldbu	fp,158(sp)
   415d4:	008011c4 	movi	r2,71
   415d8:	1445330e 	bge	r2,r17,42aa8 <___vfprintf_internal_r+0x1afc>
   415dc:	04000174 	movhi	r16,5
   415e0:	843e0004 	addi	r16,r16,-2048
   415e4:	00c000c4 	movi	r3,3
   415e8:	00bfdfc4 	movi	r2,-129
   415ec:	d8c02a15 	stw	r3,168(sp)
   415f0:	90a4703a 	and	r18,r18,r2
   415f4:	d8c02e15 	stw	r3,184(sp)
   415f8:	d8002915 	stw	zero,164(sp)
   415fc:	d8003215 	stw	zero,200(sp)
   41600:	00003706 	br	416e0 <___vfprintf_internal_r+0x734>
   41604:	94800214 	ori	r18,r18,8
   41608:	ac400007 	ldb	r17,0(r21)
   4160c:	003ec806 	br	41130 <__alt_data_end+0xfffda030>
   41610:	18c03fcc 	andi	r3,r3,255
   41614:	1806db1e 	bne	r3,zero,43184 <___vfprintf_internal_r+0x21d8>
   41618:	94800414 	ori	r18,r18,16
   4161c:	9080080c 	andi	r2,r18,32
   41620:	1002d826 	beq	r2,zero,42184 <___vfprintf_internal_r+0x11d8>
   41624:	d9402d17 	ldw	r5,180(sp)
   41628:	d8c02917 	ldw	r3,164(sp)
   4162c:	d8002785 	stb	zero,158(sp)
   41630:	28800204 	addi	r2,r5,8
   41634:	2cc00017 	ldw	r19,0(r5)
   41638:	2d800117 	ldw	r22,4(r5)
   4163c:	18048f16 	blt	r3,zero,4287c <___vfprintf_internal_r+0x18d0>
   41640:	013fdfc4 	movi	r4,-129
   41644:	9d86b03a 	or	r3,r19,r22
   41648:	d8802d15 	stw	r2,180(sp)
   4164c:	9124703a 	and	r18,r18,r4
   41650:	1802d91e 	bne	r3,zero,421b8 <___vfprintf_internal_r+0x120c>
   41654:	d8c02917 	ldw	r3,164(sp)
   41658:	0039883a 	mov	fp,zero
   4165c:	1805c326 	beq	r3,zero,42d6c <___vfprintf_internal_r+0x1dc0>
   41660:	0027883a 	mov	r19,zero
   41664:	002d883a 	mov	r22,zero
   41668:	dc001e04 	addi	r16,sp,120
   4166c:	9806d0fa 	srli	r3,r19,3
   41670:	b008977a 	slli	r4,r22,29
   41674:	b02cd0fa 	srli	r22,r22,3
   41678:	9cc001cc 	andi	r19,r19,7
   4167c:	98800c04 	addi	r2,r19,48
   41680:	843fffc4 	addi	r16,r16,-1
   41684:	20e6b03a 	or	r19,r4,r3
   41688:	80800005 	stb	r2,0(r16)
   4168c:	9d86b03a 	or	r3,r19,r22
   41690:	183ff61e 	bne	r3,zero,4166c <__alt_data_end+0xfffda56c>
   41694:	90c0004c 	andi	r3,r18,1
   41698:	18013b26 	beq	r3,zero,41b88 <___vfprintf_internal_r+0xbdc>
   4169c:	10803fcc 	andi	r2,r2,255
   416a0:	1080201c 	xori	r2,r2,128
   416a4:	10bfe004 	addi	r2,r2,-128
   416a8:	00c00c04 	movi	r3,48
   416ac:	10c13626 	beq	r2,r3,41b88 <___vfprintf_internal_r+0xbdc>
   416b0:	80ffffc5 	stb	r3,-1(r16)
   416b4:	d8c02817 	ldw	r3,160(sp)
   416b8:	80bfffc4 	addi	r2,r16,-1
   416bc:	1021883a 	mov	r16,r2
   416c0:	1887c83a 	sub	r3,r3,r2
   416c4:	d8c02e15 	stw	r3,184(sp)
   416c8:	d8802e17 	ldw	r2,184(sp)
   416cc:	d9002917 	ldw	r4,164(sp)
   416d0:	1100010e 	bge	r2,r4,416d8 <___vfprintf_internal_r+0x72c>
   416d4:	2005883a 	mov	r2,r4
   416d8:	d8802a15 	stw	r2,168(sp)
   416dc:	d8003215 	stw	zero,200(sp)
   416e0:	e7003fcc 	andi	fp,fp,255
   416e4:	e700201c 	xori	fp,fp,128
   416e8:	e73fe004 	addi	fp,fp,-128
   416ec:	e0000326 	beq	fp,zero,416fc <___vfprintf_internal_r+0x750>
   416f0:	d8c02a17 	ldw	r3,168(sp)
   416f4:	18c00044 	addi	r3,r3,1
   416f8:	d8c02a15 	stw	r3,168(sp)
   416fc:	90c0008c 	andi	r3,r18,2
   41700:	d8c02b15 	stw	r3,172(sp)
   41704:	18000326 	beq	r3,zero,41714 <___vfprintf_internal_r+0x768>
   41708:	d8c02a17 	ldw	r3,168(sp)
   4170c:	18c00084 	addi	r3,r3,2
   41710:	d8c02a15 	stw	r3,168(sp)
   41714:	90c0210c 	andi	r3,r18,132
   41718:	d8c03015 	stw	r3,192(sp)
   4171c:	1801a31e 	bne	r3,zero,41dac <___vfprintf_internal_r+0xe00>
   41720:	d9003117 	ldw	r4,196(sp)
   41724:	d8c02a17 	ldw	r3,168(sp)
   41728:	20e7c83a 	sub	r19,r4,r3
   4172c:	04c19f0e 	bge	zero,r19,41dac <___vfprintf_internal_r+0xe00>
   41730:	02400404 	movi	r9,16
   41734:	d8c02017 	ldw	r3,128(sp)
   41738:	d8801f17 	ldw	r2,124(sp)
   4173c:	4cc50d0e 	bge	r9,r19,42b74 <___vfprintf_internal_r+0x1bc8>
   41740:	01400174 	movhi	r5,5
   41744:	297e1384 	addi	r5,r5,-1970
   41748:	dc403b15 	stw	r17,236(sp)
   4174c:	d9403515 	stw	r5,212(sp)
   41750:	9823883a 	mov	r17,r19
   41754:	482d883a 	mov	r22,r9
   41758:	9027883a 	mov	r19,r18
   4175c:	070001c4 	movi	fp,7
   41760:	8025883a 	mov	r18,r16
   41764:	dc002c17 	ldw	r16,176(sp)
   41768:	00000306 	br	41778 <___vfprintf_internal_r+0x7cc>
   4176c:	8c7ffc04 	addi	r17,r17,-16
   41770:	42000204 	addi	r8,r8,8
   41774:	b440130e 	bge	r22,r17,417c4 <___vfprintf_internal_r+0x818>
   41778:	01000174 	movhi	r4,5
   4177c:	18c00404 	addi	r3,r3,16
   41780:	10800044 	addi	r2,r2,1
   41784:	213e1384 	addi	r4,r4,-1970
   41788:	41000015 	stw	r4,0(r8)
   4178c:	45800115 	stw	r22,4(r8)
   41790:	d8c02015 	stw	r3,128(sp)
   41794:	d8801f15 	stw	r2,124(sp)
   41798:	e0bff40e 	bge	fp,r2,4176c <__alt_data_end+0xfffda66c>
   4179c:	d9801e04 	addi	r6,sp,120
   417a0:	b80b883a 	mov	r5,r23
   417a4:	8009883a 	mov	r4,r16
   417a8:	00485a80 	call	485a8 <__sprint_r>
   417ac:	103f011e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   417b0:	8c7ffc04 	addi	r17,r17,-16
   417b4:	d8c02017 	ldw	r3,128(sp)
   417b8:	d8801f17 	ldw	r2,124(sp)
   417bc:	da000404 	addi	r8,sp,16
   417c0:	b47fed16 	blt	r22,r17,41778 <__alt_data_end+0xfffda678>
   417c4:	9021883a 	mov	r16,r18
   417c8:	9825883a 	mov	r18,r19
   417cc:	8827883a 	mov	r19,r17
   417d0:	dc403b17 	ldw	r17,236(sp)
   417d4:	d9403517 	ldw	r5,212(sp)
   417d8:	98c7883a 	add	r3,r19,r3
   417dc:	10800044 	addi	r2,r2,1
   417e0:	41400015 	stw	r5,0(r8)
   417e4:	44c00115 	stw	r19,4(r8)
   417e8:	d8c02015 	stw	r3,128(sp)
   417ec:	d8801f15 	stw	r2,124(sp)
   417f0:	010001c4 	movi	r4,7
   417f4:	2082a316 	blt	r4,r2,42284 <___vfprintf_internal_r+0x12d8>
   417f8:	df002787 	ldb	fp,158(sp)
   417fc:	42000204 	addi	r8,r8,8
   41800:	e0000c26 	beq	fp,zero,41834 <___vfprintf_internal_r+0x888>
   41804:	d8801f17 	ldw	r2,124(sp)
   41808:	d9002784 	addi	r4,sp,158
   4180c:	18c00044 	addi	r3,r3,1
   41810:	10800044 	addi	r2,r2,1
   41814:	41000015 	stw	r4,0(r8)
   41818:	01000044 	movi	r4,1
   4181c:	41000115 	stw	r4,4(r8)
   41820:	d8c02015 	stw	r3,128(sp)
   41824:	d8801f15 	stw	r2,124(sp)
   41828:	010001c4 	movi	r4,7
   4182c:	20823c16 	blt	r4,r2,42120 <___vfprintf_internal_r+0x1174>
   41830:	42000204 	addi	r8,r8,8
   41834:	d8802b17 	ldw	r2,172(sp)
   41838:	10000c26 	beq	r2,zero,4186c <___vfprintf_internal_r+0x8c0>
   4183c:	d8801f17 	ldw	r2,124(sp)
   41840:	d9002704 	addi	r4,sp,156
   41844:	18c00084 	addi	r3,r3,2
   41848:	10800044 	addi	r2,r2,1
   4184c:	41000015 	stw	r4,0(r8)
   41850:	01000084 	movi	r4,2
   41854:	41000115 	stw	r4,4(r8)
   41858:	d8c02015 	stw	r3,128(sp)
   4185c:	d8801f15 	stw	r2,124(sp)
   41860:	010001c4 	movi	r4,7
   41864:	20823616 	blt	r4,r2,42140 <___vfprintf_internal_r+0x1194>
   41868:	42000204 	addi	r8,r8,8
   4186c:	d9003017 	ldw	r4,192(sp)
   41870:	00802004 	movi	r2,128
   41874:	20819926 	beq	r4,r2,41edc <___vfprintf_internal_r+0xf30>
   41878:	d9402917 	ldw	r5,164(sp)
   4187c:	d8802e17 	ldw	r2,184(sp)
   41880:	28adc83a 	sub	r22,r5,r2
   41884:	0580310e 	bge	zero,r22,4194c <___vfprintf_internal_r+0x9a0>
   41888:	07000404 	movi	fp,16
   4188c:	d8801f17 	ldw	r2,124(sp)
   41890:	e584140e 	bge	fp,r22,428e4 <___vfprintf_internal_r+0x1938>
   41894:	01400174 	movhi	r5,5
   41898:	297e0f84 	addi	r5,r5,-1986
   4189c:	dc402915 	stw	r17,164(sp)
   418a0:	d9402b15 	stw	r5,172(sp)
   418a4:	b023883a 	mov	r17,r22
   418a8:	04c001c4 	movi	r19,7
   418ac:	a82d883a 	mov	r22,r21
   418b0:	902b883a 	mov	r21,r18
   418b4:	8025883a 	mov	r18,r16
   418b8:	dc002c17 	ldw	r16,176(sp)
   418bc:	00000306 	br	418cc <___vfprintf_internal_r+0x920>
   418c0:	8c7ffc04 	addi	r17,r17,-16
   418c4:	42000204 	addi	r8,r8,8
   418c8:	e440110e 	bge	fp,r17,41910 <___vfprintf_internal_r+0x964>
   418cc:	18c00404 	addi	r3,r3,16
   418d0:	10800044 	addi	r2,r2,1
   418d4:	45000015 	stw	r20,0(r8)
   418d8:	47000115 	stw	fp,4(r8)
   418dc:	d8c02015 	stw	r3,128(sp)
   418e0:	d8801f15 	stw	r2,124(sp)
   418e4:	98bff60e 	bge	r19,r2,418c0 <__alt_data_end+0xfffda7c0>
   418e8:	d9801e04 	addi	r6,sp,120
   418ec:	b80b883a 	mov	r5,r23
   418f0:	8009883a 	mov	r4,r16
   418f4:	00485a80 	call	485a8 <__sprint_r>
   418f8:	103eae1e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   418fc:	8c7ffc04 	addi	r17,r17,-16
   41900:	d8c02017 	ldw	r3,128(sp)
   41904:	d8801f17 	ldw	r2,124(sp)
   41908:	da000404 	addi	r8,sp,16
   4190c:	e47fef16 	blt	fp,r17,418cc <__alt_data_end+0xfffda7cc>
   41910:	9021883a 	mov	r16,r18
   41914:	a825883a 	mov	r18,r21
   41918:	b02b883a 	mov	r21,r22
   4191c:	882d883a 	mov	r22,r17
   41920:	dc402917 	ldw	r17,164(sp)
   41924:	d9002b17 	ldw	r4,172(sp)
   41928:	1d87883a 	add	r3,r3,r22
   4192c:	10800044 	addi	r2,r2,1
   41930:	41000015 	stw	r4,0(r8)
   41934:	45800115 	stw	r22,4(r8)
   41938:	d8c02015 	stw	r3,128(sp)
   4193c:	d8801f15 	stw	r2,124(sp)
   41940:	010001c4 	movi	r4,7
   41944:	2081ee16 	blt	r4,r2,42100 <___vfprintf_internal_r+0x1154>
   41948:	42000204 	addi	r8,r8,8
   4194c:	9080400c 	andi	r2,r18,256
   41950:	1001181e 	bne	r2,zero,41db4 <___vfprintf_internal_r+0xe08>
   41954:	d9402e17 	ldw	r5,184(sp)
   41958:	d8801f17 	ldw	r2,124(sp)
   4195c:	44000015 	stw	r16,0(r8)
   41960:	1947883a 	add	r3,r3,r5
   41964:	10800044 	addi	r2,r2,1
   41968:	41400115 	stw	r5,4(r8)
   4196c:	d8c02015 	stw	r3,128(sp)
   41970:	d8801f15 	stw	r2,124(sp)
   41974:	010001c4 	movi	r4,7
   41978:	2081d316 	blt	r4,r2,420c8 <___vfprintf_internal_r+0x111c>
   4197c:	42000204 	addi	r8,r8,8
   41980:	9480010c 	andi	r18,r18,4
   41984:	90003226 	beq	r18,zero,41a50 <___vfprintf_internal_r+0xaa4>
   41988:	d9403117 	ldw	r5,196(sp)
   4198c:	d8802a17 	ldw	r2,168(sp)
   41990:	28a1c83a 	sub	r16,r5,r2
   41994:	04002e0e 	bge	zero,r16,41a50 <___vfprintf_internal_r+0xaa4>
   41998:	04400404 	movi	r17,16
   4199c:	d8801f17 	ldw	r2,124(sp)
   419a0:	8c04a20e 	bge	r17,r16,42c2c <___vfprintf_internal_r+0x1c80>
   419a4:	01400174 	movhi	r5,5
   419a8:	297e1384 	addi	r5,r5,-1970
   419ac:	d9403515 	stw	r5,212(sp)
   419b0:	048001c4 	movi	r18,7
   419b4:	dcc02c17 	ldw	r19,176(sp)
   419b8:	00000306 	br	419c8 <___vfprintf_internal_r+0xa1c>
   419bc:	843ffc04 	addi	r16,r16,-16
   419c0:	42000204 	addi	r8,r8,8
   419c4:	8c00130e 	bge	r17,r16,41a14 <___vfprintf_internal_r+0xa68>
   419c8:	01000174 	movhi	r4,5
   419cc:	18c00404 	addi	r3,r3,16
   419d0:	10800044 	addi	r2,r2,1
   419d4:	213e1384 	addi	r4,r4,-1970
   419d8:	41000015 	stw	r4,0(r8)
   419dc:	44400115 	stw	r17,4(r8)
   419e0:	d8c02015 	stw	r3,128(sp)
   419e4:	d8801f15 	stw	r2,124(sp)
   419e8:	90bff40e 	bge	r18,r2,419bc <__alt_data_end+0xfffda8bc>
   419ec:	d9801e04 	addi	r6,sp,120
   419f0:	b80b883a 	mov	r5,r23
   419f4:	9809883a 	mov	r4,r19
   419f8:	00485a80 	call	485a8 <__sprint_r>
   419fc:	103e6d1e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   41a00:	843ffc04 	addi	r16,r16,-16
   41a04:	d8c02017 	ldw	r3,128(sp)
   41a08:	d8801f17 	ldw	r2,124(sp)
   41a0c:	da000404 	addi	r8,sp,16
   41a10:	8c3fed16 	blt	r17,r16,419c8 <__alt_data_end+0xfffda8c8>
   41a14:	d9403517 	ldw	r5,212(sp)
   41a18:	1c07883a 	add	r3,r3,r16
   41a1c:	10800044 	addi	r2,r2,1
   41a20:	41400015 	stw	r5,0(r8)
   41a24:	44000115 	stw	r16,4(r8)
   41a28:	d8c02015 	stw	r3,128(sp)
   41a2c:	d8801f15 	stw	r2,124(sp)
   41a30:	010001c4 	movi	r4,7
   41a34:	2080060e 	bge	r4,r2,41a50 <___vfprintf_internal_r+0xaa4>
   41a38:	d9002c17 	ldw	r4,176(sp)
   41a3c:	d9801e04 	addi	r6,sp,120
   41a40:	b80b883a 	mov	r5,r23
   41a44:	00485a80 	call	485a8 <__sprint_r>
   41a48:	103e5a1e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   41a4c:	d8c02017 	ldw	r3,128(sp)
   41a50:	d8803117 	ldw	r2,196(sp)
   41a54:	d9002a17 	ldw	r4,168(sp)
   41a58:	1100010e 	bge	r2,r4,41a60 <___vfprintf_internal_r+0xab4>
   41a5c:	2005883a 	mov	r2,r4
   41a60:	d9402f17 	ldw	r5,188(sp)
   41a64:	288b883a 	add	r5,r5,r2
   41a68:	d9402f15 	stw	r5,188(sp)
   41a6c:	18019e1e 	bne	r3,zero,420e8 <___vfprintf_internal_r+0x113c>
   41a70:	a8800007 	ldb	r2,0(r21)
   41a74:	d8001f15 	stw	zero,124(sp)
   41a78:	da000404 	addi	r8,sp,16
   41a7c:	103d851e 	bne	r2,zero,41094 <__alt_data_end+0xfffd9f94>
   41a80:	a821883a 	mov	r16,r21
   41a84:	003d9b06 	br	410f4 <__alt_data_end+0xfffd9ff4>
   41a88:	18c03fcc 	andi	r3,r3,255
   41a8c:	1805c11e 	bne	r3,zero,43194 <___vfprintf_internal_r+0x21e8>
   41a90:	94800414 	ori	r18,r18,16
   41a94:	9080080c 	andi	r2,r18,32
   41a98:	10020c26 	beq	r2,zero,422cc <___vfprintf_internal_r+0x1320>
   41a9c:	d8802d17 	ldw	r2,180(sp)
   41aa0:	d9002917 	ldw	r4,164(sp)
   41aa4:	d8002785 	stb	zero,158(sp)
   41aa8:	10c00204 	addi	r3,r2,8
   41aac:	14c00017 	ldw	r19,0(r2)
   41ab0:	15800117 	ldw	r22,4(r2)
   41ab4:	20040f16 	blt	r4,zero,42af4 <___vfprintf_internal_r+0x1b48>
   41ab8:	013fdfc4 	movi	r4,-129
   41abc:	9d84b03a 	or	r2,r19,r22
   41ac0:	d8c02d15 	stw	r3,180(sp)
   41ac4:	9124703a 	and	r18,r18,r4
   41ac8:	0039883a 	mov	fp,zero
   41acc:	103e891e 	bne	r2,zero,414f4 <__alt_data_end+0xfffda3f4>
   41ad0:	d9002917 	ldw	r4,164(sp)
   41ad4:	2002c11e 	bne	r4,zero,425dc <___vfprintf_internal_r+0x1630>
   41ad8:	d8002915 	stw	zero,164(sp)
   41adc:	d8002e15 	stw	zero,184(sp)
   41ae0:	dc001e04 	addi	r16,sp,120
   41ae4:	003ef806 	br	416c8 <__alt_data_end+0xfffda5c8>
   41ae8:	18c03fcc 	andi	r3,r3,255
   41aec:	18059d1e 	bne	r3,zero,43164 <___vfprintf_internal_r+0x21b8>
   41af0:	01400174 	movhi	r5,5
   41af4:	297e0304 	addi	r5,r5,-2036
   41af8:	d9403915 	stw	r5,228(sp)
   41afc:	9080080c 	andi	r2,r18,32
   41b00:	10005226 	beq	r2,zero,41c4c <___vfprintf_internal_r+0xca0>
   41b04:	d8802d17 	ldw	r2,180(sp)
   41b08:	14c00017 	ldw	r19,0(r2)
   41b0c:	15800117 	ldw	r22,4(r2)
   41b10:	10800204 	addi	r2,r2,8
   41b14:	d8802d15 	stw	r2,180(sp)
   41b18:	9080004c 	andi	r2,r18,1
   41b1c:	10019026 	beq	r2,zero,42160 <___vfprintf_internal_r+0x11b4>
   41b20:	9d84b03a 	or	r2,r19,r22
   41b24:	10036926 	beq	r2,zero,428cc <___vfprintf_internal_r+0x1920>
   41b28:	d8c02917 	ldw	r3,164(sp)
   41b2c:	00800c04 	movi	r2,48
   41b30:	d8802705 	stb	r2,156(sp)
   41b34:	dc402745 	stb	r17,157(sp)
   41b38:	d8002785 	stb	zero,158(sp)
   41b3c:	90800094 	ori	r2,r18,2
   41b40:	18045d16 	blt	r3,zero,42cb8 <___vfprintf_internal_r+0x1d0c>
   41b44:	00bfdfc4 	movi	r2,-129
   41b48:	90a4703a 	and	r18,r18,r2
   41b4c:	94800094 	ori	r18,r18,2
   41b50:	0039883a 	mov	fp,zero
   41b54:	d9003917 	ldw	r4,228(sp)
   41b58:	dc001e04 	addi	r16,sp,120
   41b5c:	988003cc 	andi	r2,r19,15
   41b60:	b006973a 	slli	r3,r22,28
   41b64:	2085883a 	add	r2,r4,r2
   41b68:	9826d13a 	srli	r19,r19,4
   41b6c:	10800003 	ldbu	r2,0(r2)
   41b70:	b02cd13a 	srli	r22,r22,4
   41b74:	843fffc4 	addi	r16,r16,-1
   41b78:	1ce6b03a 	or	r19,r3,r19
   41b7c:	80800005 	stb	r2,0(r16)
   41b80:	9d84b03a 	or	r2,r19,r22
   41b84:	103ff51e 	bne	r2,zero,41b5c <__alt_data_end+0xfffdaa5c>
   41b88:	d8c02817 	ldw	r3,160(sp)
   41b8c:	1c07c83a 	sub	r3,r3,r16
   41b90:	d8c02e15 	stw	r3,184(sp)
   41b94:	003ecc06 	br	416c8 <__alt_data_end+0xfffda5c8>
   41b98:	18c03fcc 	andi	r3,r3,255
   41b9c:	183e9f26 	beq	r3,zero,4161c <__alt_data_end+0xfffda51c>
   41ba0:	d9c02785 	stb	r7,158(sp)
   41ba4:	003e9d06 	br	4161c <__alt_data_end+0xfffda51c>
   41ba8:	00c00044 	movi	r3,1
   41bac:	01c00ac4 	movi	r7,43
   41bb0:	ac400007 	ldb	r17,0(r21)
   41bb4:	003d5e06 	br	41130 <__alt_data_end+0xfffda030>
   41bb8:	94800814 	ori	r18,r18,32
   41bbc:	ac400007 	ldb	r17,0(r21)
   41bc0:	003d5b06 	br	41130 <__alt_data_end+0xfffda030>
   41bc4:	d8c02d17 	ldw	r3,180(sp)
   41bc8:	d8002785 	stb	zero,158(sp)
   41bcc:	1c000017 	ldw	r16,0(r3)
   41bd0:	1cc00104 	addi	r19,r3,4
   41bd4:	80041926 	beq	r16,zero,42c3c <___vfprintf_internal_r+0x1c90>
   41bd8:	d9002917 	ldw	r4,164(sp)
   41bdc:	2003d016 	blt	r4,zero,42b20 <___vfprintf_internal_r+0x1b74>
   41be0:	200d883a 	mov	r6,r4
   41be4:	000b883a 	mov	r5,zero
   41be8:	8009883a 	mov	r4,r16
   41bec:	da003d15 	stw	r8,244(sp)
   41bf0:	00467bc0 	call	467bc <memchr>
   41bf4:	da003d17 	ldw	r8,244(sp)
   41bf8:	10045426 	beq	r2,zero,42d4c <___vfprintf_internal_r+0x1da0>
   41bfc:	1405c83a 	sub	r2,r2,r16
   41c00:	d8802e15 	stw	r2,184(sp)
   41c04:	1003cc16 	blt	r2,zero,42b38 <___vfprintf_internal_r+0x1b8c>
   41c08:	df002783 	ldbu	fp,158(sp)
   41c0c:	d8802a15 	stw	r2,168(sp)
   41c10:	dcc02d15 	stw	r19,180(sp)
   41c14:	d8002915 	stw	zero,164(sp)
   41c18:	d8003215 	stw	zero,200(sp)
   41c1c:	003eb006 	br	416e0 <__alt_data_end+0xfffda5e0>
   41c20:	18c03fcc 	andi	r3,r3,255
   41c24:	183f9b26 	beq	r3,zero,41a94 <__alt_data_end+0xfffda994>
   41c28:	d9c02785 	stb	r7,158(sp)
   41c2c:	003f9906 	br	41a94 <__alt_data_end+0xfffda994>
   41c30:	18c03fcc 	andi	r3,r3,255
   41c34:	1805551e 	bne	r3,zero,4318c <___vfprintf_internal_r+0x21e0>
   41c38:	01400174 	movhi	r5,5
   41c3c:	297e0804 	addi	r5,r5,-2016
   41c40:	d9403915 	stw	r5,228(sp)
   41c44:	9080080c 	andi	r2,r18,32
   41c48:	103fae1e 	bne	r2,zero,41b04 <__alt_data_end+0xfffdaa04>
   41c4c:	9080040c 	andi	r2,r18,16
   41c50:	1002de26 	beq	r2,zero,427cc <___vfprintf_internal_r+0x1820>
   41c54:	d8c02d17 	ldw	r3,180(sp)
   41c58:	002d883a 	mov	r22,zero
   41c5c:	1cc00017 	ldw	r19,0(r3)
   41c60:	18c00104 	addi	r3,r3,4
   41c64:	d8c02d15 	stw	r3,180(sp)
   41c68:	003fab06 	br	41b18 <__alt_data_end+0xfffdaa18>
   41c6c:	38803fcc 	andi	r2,r7,255
   41c70:	1080201c 	xori	r2,r2,128
   41c74:	10bfe004 	addi	r2,r2,-128
   41c78:	1002d21e 	bne	r2,zero,427c4 <___vfprintf_internal_r+0x1818>
   41c7c:	00c00044 	movi	r3,1
   41c80:	01c00804 	movi	r7,32
   41c84:	ac400007 	ldb	r17,0(r21)
   41c88:	003d2906 	br	41130 <__alt_data_end+0xfffda030>
   41c8c:	94800054 	ori	r18,r18,1
   41c90:	ac400007 	ldb	r17,0(r21)
   41c94:	003d2606 	br	41130 <__alt_data_end+0xfffda030>
   41c98:	18c03fcc 	andi	r3,r3,255
   41c9c:	183e0526 	beq	r3,zero,414b4 <__alt_data_end+0xfffda3b4>
   41ca0:	d9c02785 	stb	r7,158(sp)
   41ca4:	003e0306 	br	414b4 <__alt_data_end+0xfffda3b4>
   41ca8:	94801014 	ori	r18,r18,64
   41cac:	ac400007 	ldb	r17,0(r21)
   41cb0:	003d1f06 	br	41130 <__alt_data_end+0xfffda030>
   41cb4:	ac400007 	ldb	r17,0(r21)
   41cb8:	8a438726 	beq	r17,r9,42ad8 <___vfprintf_internal_r+0x1b2c>
   41cbc:	94800414 	ori	r18,r18,16
   41cc0:	003d1b06 	br	41130 <__alt_data_end+0xfffda030>
   41cc4:	18c03fcc 	andi	r3,r3,255
   41cc8:	1805341e 	bne	r3,zero,4319c <___vfprintf_internal_r+0x21f0>
   41ccc:	9080080c 	andi	r2,r18,32
   41cd0:	1002cd26 	beq	r2,zero,42808 <___vfprintf_internal_r+0x185c>
   41cd4:	d9402d17 	ldw	r5,180(sp)
   41cd8:	d9002f17 	ldw	r4,188(sp)
   41cdc:	28800017 	ldw	r2,0(r5)
   41ce0:	2007d7fa 	srai	r3,r4,31
   41ce4:	29400104 	addi	r5,r5,4
   41ce8:	d9402d15 	stw	r5,180(sp)
   41cec:	11000015 	stw	r4,0(r2)
   41cf0:	10c00115 	stw	r3,4(r2)
   41cf4:	003ce506 	br	4108c <__alt_data_end+0xfffd9f8c>
   41cf8:	d8c02d17 	ldw	r3,180(sp)
   41cfc:	d9002d17 	ldw	r4,180(sp)
   41d00:	d8002785 	stb	zero,158(sp)
   41d04:	18800017 	ldw	r2,0(r3)
   41d08:	21000104 	addi	r4,r4,4
   41d0c:	00c00044 	movi	r3,1
   41d10:	d8c02a15 	stw	r3,168(sp)
   41d14:	d8801405 	stb	r2,80(sp)
   41d18:	d9002d15 	stw	r4,180(sp)
   41d1c:	d8c02e15 	stw	r3,184(sp)
   41d20:	d8002915 	stw	zero,164(sp)
   41d24:	d8003215 	stw	zero,200(sp)
   41d28:	dc001404 	addi	r16,sp,80
   41d2c:	0039883a 	mov	fp,zero
   41d30:	003e7206 	br	416fc <__alt_data_end+0xfffda5fc>
   41d34:	01000174 	movhi	r4,5
   41d38:	213e0804 	addi	r4,r4,-2016
   41d3c:	0039883a 	mov	fp,zero
   41d40:	d9003915 	stw	r4,228(sp)
   41d44:	04401e04 	movi	r17,120
   41d48:	003f8206 	br	41b54 <__alt_data_end+0xfffdaa54>
   41d4c:	18c03fcc 	andi	r3,r3,255
   41d50:	1805061e 	bne	r3,zero,4316c <___vfprintf_internal_r+0x21c0>
   41d54:	883d9126 	beq	r17,zero,4139c <__alt_data_end+0xfffda29c>
   41d58:	00c00044 	movi	r3,1
   41d5c:	d8c02a15 	stw	r3,168(sp)
   41d60:	dc401405 	stb	r17,80(sp)
   41d64:	d8002785 	stb	zero,158(sp)
   41d68:	003fec06 	br	41d1c <__alt_data_end+0xfffdac1c>
   41d6c:	01400174 	movhi	r5,5
   41d70:	297e0804 	addi	r5,r5,-2016
   41d74:	d9403915 	stw	r5,228(sp)
   41d78:	d8c02d15 	stw	r3,180(sp)
   41d7c:	1025883a 	mov	r18,r2
   41d80:	04401e04 	movi	r17,120
   41d84:	9d84b03a 	or	r2,r19,r22
   41d88:	1000fc1e 	bne	r2,zero,4217c <___vfprintf_internal_r+0x11d0>
   41d8c:	0039883a 	mov	fp,zero
   41d90:	00800084 	movi	r2,2
   41d94:	10803fcc 	andi	r2,r2,255
   41d98:	00c00044 	movi	r3,1
   41d9c:	10c20f26 	beq	r2,r3,425dc <___vfprintf_internal_r+0x1630>
   41da0:	00c00084 	movi	r3,2
   41da4:	10fd6326 	beq	r2,r3,41334 <__alt_data_end+0xfffda234>
   41da8:	003e2d06 	br	41660 <__alt_data_end+0xfffda560>
   41dac:	d8c02017 	ldw	r3,128(sp)
   41db0:	003e9306 	br	41800 <__alt_data_end+0xfffda700>
   41db4:	00801944 	movi	r2,101
   41db8:	14407e0e 	bge	r2,r17,41fb4 <___vfprintf_internal_r+0x1008>
   41dbc:	d9003617 	ldw	r4,216(sp)
   41dc0:	d9403817 	ldw	r5,224(sp)
   41dc4:	000d883a 	mov	r6,zero
   41dc8:	000f883a 	mov	r7,zero
   41dcc:	d8c03c15 	stw	r3,240(sp)
   41dd0:	da003d15 	stw	r8,244(sp)
   41dd4:	004c2200 	call	4c220 <__eqdf2>
   41dd8:	d8c03c17 	ldw	r3,240(sp)
   41ddc:	da003d17 	ldw	r8,244(sp)
   41de0:	1000f71e 	bne	r2,zero,421c0 <___vfprintf_internal_r+0x1214>
   41de4:	d8801f17 	ldw	r2,124(sp)
   41de8:	01000174 	movhi	r4,5
   41dec:	213e0f04 	addi	r4,r4,-1988
   41df0:	18c00044 	addi	r3,r3,1
   41df4:	10800044 	addi	r2,r2,1
   41df8:	41000015 	stw	r4,0(r8)
   41dfc:	01000044 	movi	r4,1
   41e00:	41000115 	stw	r4,4(r8)
   41e04:	d8c02015 	stw	r3,128(sp)
   41e08:	d8801f15 	stw	r2,124(sp)
   41e0c:	010001c4 	movi	r4,7
   41e10:	2082b816 	blt	r4,r2,428f4 <___vfprintf_internal_r+0x1948>
   41e14:	42000204 	addi	r8,r8,8
   41e18:	d8802617 	ldw	r2,152(sp)
   41e1c:	d9403317 	ldw	r5,204(sp)
   41e20:	11400216 	blt	r2,r5,41e2c <___vfprintf_internal_r+0xe80>
   41e24:	9080004c 	andi	r2,r18,1
   41e28:	103ed526 	beq	r2,zero,41980 <__alt_data_end+0xfffda880>
   41e2c:	d8803717 	ldw	r2,220(sp)
   41e30:	d9003417 	ldw	r4,208(sp)
   41e34:	d9403717 	ldw	r5,220(sp)
   41e38:	1887883a 	add	r3,r3,r2
   41e3c:	d8801f17 	ldw	r2,124(sp)
   41e40:	41000015 	stw	r4,0(r8)
   41e44:	41400115 	stw	r5,4(r8)
   41e48:	10800044 	addi	r2,r2,1
   41e4c:	d8c02015 	stw	r3,128(sp)
   41e50:	d8801f15 	stw	r2,124(sp)
   41e54:	010001c4 	movi	r4,7
   41e58:	20832916 	blt	r4,r2,42b00 <___vfprintf_internal_r+0x1b54>
   41e5c:	42000204 	addi	r8,r8,8
   41e60:	d8803317 	ldw	r2,204(sp)
   41e64:	143fffc4 	addi	r16,r2,-1
   41e68:	043ec50e 	bge	zero,r16,41980 <__alt_data_end+0xfffda880>
   41e6c:	04400404 	movi	r17,16
   41e70:	d8801f17 	ldw	r2,124(sp)
   41e74:	8c00880e 	bge	r17,r16,42098 <___vfprintf_internal_r+0x10ec>
   41e78:	01400174 	movhi	r5,5
   41e7c:	297e0f84 	addi	r5,r5,-1986
   41e80:	d9402b15 	stw	r5,172(sp)
   41e84:	058001c4 	movi	r22,7
   41e88:	dcc02c17 	ldw	r19,176(sp)
   41e8c:	00000306 	br	41e9c <___vfprintf_internal_r+0xef0>
   41e90:	42000204 	addi	r8,r8,8
   41e94:	843ffc04 	addi	r16,r16,-16
   41e98:	8c00820e 	bge	r17,r16,420a4 <___vfprintf_internal_r+0x10f8>
   41e9c:	18c00404 	addi	r3,r3,16
   41ea0:	10800044 	addi	r2,r2,1
   41ea4:	45000015 	stw	r20,0(r8)
   41ea8:	44400115 	stw	r17,4(r8)
   41eac:	d8c02015 	stw	r3,128(sp)
   41eb0:	d8801f15 	stw	r2,124(sp)
   41eb4:	b0bff60e 	bge	r22,r2,41e90 <__alt_data_end+0xfffdad90>
   41eb8:	d9801e04 	addi	r6,sp,120
   41ebc:	b80b883a 	mov	r5,r23
   41ec0:	9809883a 	mov	r4,r19
   41ec4:	00485a80 	call	485a8 <__sprint_r>
   41ec8:	103d3a1e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   41ecc:	d8c02017 	ldw	r3,128(sp)
   41ed0:	d8801f17 	ldw	r2,124(sp)
   41ed4:	da000404 	addi	r8,sp,16
   41ed8:	003fee06 	br	41e94 <__alt_data_end+0xfffdad94>
   41edc:	d9403117 	ldw	r5,196(sp)
   41ee0:	d8802a17 	ldw	r2,168(sp)
   41ee4:	28adc83a 	sub	r22,r5,r2
   41ee8:	05be630e 	bge	zero,r22,41878 <__alt_data_end+0xfffda778>
   41eec:	07000404 	movi	fp,16
   41ef0:	d8801f17 	ldw	r2,124(sp)
   41ef4:	e5838f0e 	bge	fp,r22,42d34 <___vfprintf_internal_r+0x1d88>
   41ef8:	01400174 	movhi	r5,5
   41efc:	297e0f84 	addi	r5,r5,-1986
   41f00:	dc403015 	stw	r17,192(sp)
   41f04:	d9402b15 	stw	r5,172(sp)
   41f08:	b023883a 	mov	r17,r22
   41f0c:	04c001c4 	movi	r19,7
   41f10:	a82d883a 	mov	r22,r21
   41f14:	902b883a 	mov	r21,r18
   41f18:	8025883a 	mov	r18,r16
   41f1c:	dc002c17 	ldw	r16,176(sp)
   41f20:	00000306 	br	41f30 <___vfprintf_internal_r+0xf84>
   41f24:	8c7ffc04 	addi	r17,r17,-16
   41f28:	42000204 	addi	r8,r8,8
   41f2c:	e440110e 	bge	fp,r17,41f74 <___vfprintf_internal_r+0xfc8>
   41f30:	18c00404 	addi	r3,r3,16
   41f34:	10800044 	addi	r2,r2,1
   41f38:	45000015 	stw	r20,0(r8)
   41f3c:	47000115 	stw	fp,4(r8)
   41f40:	d8c02015 	stw	r3,128(sp)
   41f44:	d8801f15 	stw	r2,124(sp)
   41f48:	98bff60e 	bge	r19,r2,41f24 <__alt_data_end+0xfffdae24>
   41f4c:	d9801e04 	addi	r6,sp,120
   41f50:	b80b883a 	mov	r5,r23
   41f54:	8009883a 	mov	r4,r16
   41f58:	00485a80 	call	485a8 <__sprint_r>
   41f5c:	103d151e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   41f60:	8c7ffc04 	addi	r17,r17,-16
   41f64:	d8c02017 	ldw	r3,128(sp)
   41f68:	d8801f17 	ldw	r2,124(sp)
   41f6c:	da000404 	addi	r8,sp,16
   41f70:	e47fef16 	blt	fp,r17,41f30 <__alt_data_end+0xfffdae30>
   41f74:	9021883a 	mov	r16,r18
   41f78:	a825883a 	mov	r18,r21
   41f7c:	b02b883a 	mov	r21,r22
   41f80:	882d883a 	mov	r22,r17
   41f84:	dc403017 	ldw	r17,192(sp)
   41f88:	d9002b17 	ldw	r4,172(sp)
   41f8c:	1d87883a 	add	r3,r3,r22
   41f90:	10800044 	addi	r2,r2,1
   41f94:	41000015 	stw	r4,0(r8)
   41f98:	45800115 	stw	r22,4(r8)
   41f9c:	d8c02015 	stw	r3,128(sp)
   41fa0:	d8801f15 	stw	r2,124(sp)
   41fa4:	010001c4 	movi	r4,7
   41fa8:	20818e16 	blt	r4,r2,425e4 <___vfprintf_internal_r+0x1638>
   41fac:	42000204 	addi	r8,r8,8
   41fb0:	003e3106 	br	41878 <__alt_data_end+0xfffda778>
   41fb4:	d9403317 	ldw	r5,204(sp)
   41fb8:	00800044 	movi	r2,1
   41fbc:	18c00044 	addi	r3,r3,1
   41fc0:	1141530e 	bge	r2,r5,42510 <___vfprintf_internal_r+0x1564>
   41fc4:	dc401f17 	ldw	r17,124(sp)
   41fc8:	00800044 	movi	r2,1
   41fcc:	40800115 	stw	r2,4(r8)
   41fd0:	8c400044 	addi	r17,r17,1
   41fd4:	44000015 	stw	r16,0(r8)
   41fd8:	d8c02015 	stw	r3,128(sp)
   41fdc:	dc401f15 	stw	r17,124(sp)
   41fe0:	008001c4 	movi	r2,7
   41fe4:	14416b16 	blt	r2,r17,42594 <___vfprintf_internal_r+0x15e8>
   41fe8:	42000204 	addi	r8,r8,8
   41fec:	d8803717 	ldw	r2,220(sp)
   41ff0:	d9003417 	ldw	r4,208(sp)
   41ff4:	8c400044 	addi	r17,r17,1
   41ff8:	10c7883a 	add	r3,r2,r3
   41ffc:	40800115 	stw	r2,4(r8)
   42000:	41000015 	stw	r4,0(r8)
   42004:	d8c02015 	stw	r3,128(sp)
   42008:	dc401f15 	stw	r17,124(sp)
   4200c:	008001c4 	movi	r2,7
   42010:	14416916 	blt	r2,r17,425b8 <___vfprintf_internal_r+0x160c>
   42014:	45800204 	addi	r22,r8,8
   42018:	d9003617 	ldw	r4,216(sp)
   4201c:	d9403817 	ldw	r5,224(sp)
   42020:	000d883a 	mov	r6,zero
   42024:	000f883a 	mov	r7,zero
   42028:	d8c03c15 	stw	r3,240(sp)
   4202c:	004c2200 	call	4c220 <__eqdf2>
   42030:	d8c03c17 	ldw	r3,240(sp)
   42034:	1000bc26 	beq	r2,zero,42328 <___vfprintf_internal_r+0x137c>
   42038:	d9403317 	ldw	r5,204(sp)
   4203c:	84000044 	addi	r16,r16,1
   42040:	8c400044 	addi	r17,r17,1
   42044:	28bfffc4 	addi	r2,r5,-1
   42048:	1887883a 	add	r3,r3,r2
   4204c:	b0800115 	stw	r2,4(r22)
   42050:	b4000015 	stw	r16,0(r22)
   42054:	d8c02015 	stw	r3,128(sp)
   42058:	dc401f15 	stw	r17,124(sp)
   4205c:	008001c4 	movi	r2,7
   42060:	14414316 	blt	r2,r17,42570 <___vfprintf_internal_r+0x15c4>
   42064:	b5800204 	addi	r22,r22,8
   42068:	d9003a17 	ldw	r4,232(sp)
   4206c:	df0022c4 	addi	fp,sp,139
   42070:	8c400044 	addi	r17,r17,1
   42074:	20c7883a 	add	r3,r4,r3
   42078:	b7000015 	stw	fp,0(r22)
   4207c:	b1000115 	stw	r4,4(r22)
   42080:	d8c02015 	stw	r3,128(sp)
   42084:	dc401f15 	stw	r17,124(sp)
   42088:	008001c4 	movi	r2,7
   4208c:	14400e16 	blt	r2,r17,420c8 <___vfprintf_internal_r+0x111c>
   42090:	b2000204 	addi	r8,r22,8
   42094:	003e3a06 	br	41980 <__alt_data_end+0xfffda880>
   42098:	01000174 	movhi	r4,5
   4209c:	213e0f84 	addi	r4,r4,-1986
   420a0:	d9002b15 	stw	r4,172(sp)
   420a4:	d9002b17 	ldw	r4,172(sp)
   420a8:	1c07883a 	add	r3,r3,r16
   420ac:	44000115 	stw	r16,4(r8)
   420b0:	41000015 	stw	r4,0(r8)
   420b4:	10800044 	addi	r2,r2,1
   420b8:	d8c02015 	stw	r3,128(sp)
   420bc:	d8801f15 	stw	r2,124(sp)
   420c0:	010001c4 	movi	r4,7
   420c4:	20be2d0e 	bge	r4,r2,4197c <__alt_data_end+0xfffda87c>
   420c8:	d9002c17 	ldw	r4,176(sp)
   420cc:	d9801e04 	addi	r6,sp,120
   420d0:	b80b883a 	mov	r5,r23
   420d4:	00485a80 	call	485a8 <__sprint_r>
   420d8:	103cb61e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   420dc:	d8c02017 	ldw	r3,128(sp)
   420e0:	da000404 	addi	r8,sp,16
   420e4:	003e2606 	br	41980 <__alt_data_end+0xfffda880>
   420e8:	d9002c17 	ldw	r4,176(sp)
   420ec:	d9801e04 	addi	r6,sp,120
   420f0:	b80b883a 	mov	r5,r23
   420f4:	00485a80 	call	485a8 <__sprint_r>
   420f8:	103e5d26 	beq	r2,zero,41a70 <__alt_data_end+0xfffda970>
   420fc:	003cad06 	br	413b4 <__alt_data_end+0xfffda2b4>
   42100:	d9002c17 	ldw	r4,176(sp)
   42104:	d9801e04 	addi	r6,sp,120
   42108:	b80b883a 	mov	r5,r23
   4210c:	00485a80 	call	485a8 <__sprint_r>
   42110:	103ca81e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42114:	d8c02017 	ldw	r3,128(sp)
   42118:	da000404 	addi	r8,sp,16
   4211c:	003e0b06 	br	4194c <__alt_data_end+0xfffda84c>
   42120:	d9002c17 	ldw	r4,176(sp)
   42124:	d9801e04 	addi	r6,sp,120
   42128:	b80b883a 	mov	r5,r23
   4212c:	00485a80 	call	485a8 <__sprint_r>
   42130:	103ca01e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42134:	d8c02017 	ldw	r3,128(sp)
   42138:	da000404 	addi	r8,sp,16
   4213c:	003dbd06 	br	41834 <__alt_data_end+0xfffda734>
   42140:	d9002c17 	ldw	r4,176(sp)
   42144:	d9801e04 	addi	r6,sp,120
   42148:	b80b883a 	mov	r5,r23
   4214c:	00485a80 	call	485a8 <__sprint_r>
   42150:	103c981e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42154:	d8c02017 	ldw	r3,128(sp)
   42158:	da000404 	addi	r8,sp,16
   4215c:	003dc306 	br	4186c <__alt_data_end+0xfffda76c>
   42160:	d8802917 	ldw	r2,164(sp)
   42164:	d8002785 	stb	zero,158(sp)
   42168:	103f0616 	blt	r2,zero,41d84 <__alt_data_end+0xfffdac84>
   4216c:	00ffdfc4 	movi	r3,-129
   42170:	9d84b03a 	or	r2,r19,r22
   42174:	90e4703a 	and	r18,r18,r3
   42178:	103c6b26 	beq	r2,zero,41328 <__alt_data_end+0xfffda228>
   4217c:	0039883a 	mov	fp,zero
   42180:	003e7406 	br	41b54 <__alt_data_end+0xfffdaa54>
   42184:	9080040c 	andi	r2,r18,16
   42188:	1001b326 	beq	r2,zero,42858 <___vfprintf_internal_r+0x18ac>
   4218c:	d9002d17 	ldw	r4,180(sp)
   42190:	d9402917 	ldw	r5,164(sp)
   42194:	d8002785 	stb	zero,158(sp)
   42198:	20800104 	addi	r2,r4,4
   4219c:	24c00017 	ldw	r19,0(r4)
   421a0:	002d883a 	mov	r22,zero
   421a4:	2801b516 	blt	r5,zero,4287c <___vfprintf_internal_r+0x18d0>
   421a8:	00ffdfc4 	movi	r3,-129
   421ac:	d8802d15 	stw	r2,180(sp)
   421b0:	90e4703a 	and	r18,r18,r3
   421b4:	983d2726 	beq	r19,zero,41654 <__alt_data_end+0xfffda554>
   421b8:	0039883a 	mov	fp,zero
   421bc:	003d2a06 	br	41668 <__alt_data_end+0xfffda568>
   421c0:	dc402617 	ldw	r17,152(sp)
   421c4:	0441d30e 	bge	zero,r17,42914 <___vfprintf_internal_r+0x1968>
   421c8:	dc403217 	ldw	r17,200(sp)
   421cc:	d8803317 	ldw	r2,204(sp)
   421d0:	1440010e 	bge	r2,r17,421d8 <___vfprintf_internal_r+0x122c>
   421d4:	1023883a 	mov	r17,r2
   421d8:	04400a0e 	bge	zero,r17,42204 <___vfprintf_internal_r+0x1258>
   421dc:	d8801f17 	ldw	r2,124(sp)
   421e0:	1c47883a 	add	r3,r3,r17
   421e4:	44000015 	stw	r16,0(r8)
   421e8:	10800044 	addi	r2,r2,1
   421ec:	44400115 	stw	r17,4(r8)
   421f0:	d8c02015 	stw	r3,128(sp)
   421f4:	d8801f15 	stw	r2,124(sp)
   421f8:	010001c4 	movi	r4,7
   421fc:	20826516 	blt	r4,r2,42b94 <___vfprintf_internal_r+0x1be8>
   42200:	42000204 	addi	r8,r8,8
   42204:	88026116 	blt	r17,zero,42b8c <___vfprintf_internal_r+0x1be0>
   42208:	d9003217 	ldw	r4,200(sp)
   4220c:	2463c83a 	sub	r17,r4,r17
   42210:	04407b0e 	bge	zero,r17,42400 <___vfprintf_internal_r+0x1454>
   42214:	05800404 	movi	r22,16
   42218:	d8801f17 	ldw	r2,124(sp)
   4221c:	b4419d0e 	bge	r22,r17,42894 <___vfprintf_internal_r+0x18e8>
   42220:	01000174 	movhi	r4,5
   42224:	213e0f84 	addi	r4,r4,-1986
   42228:	d9002b15 	stw	r4,172(sp)
   4222c:	070001c4 	movi	fp,7
   42230:	dcc02c17 	ldw	r19,176(sp)
   42234:	00000306 	br	42244 <___vfprintf_internal_r+0x1298>
   42238:	42000204 	addi	r8,r8,8
   4223c:	8c7ffc04 	addi	r17,r17,-16
   42240:	b441970e 	bge	r22,r17,428a0 <___vfprintf_internal_r+0x18f4>
   42244:	18c00404 	addi	r3,r3,16
   42248:	10800044 	addi	r2,r2,1
   4224c:	45000015 	stw	r20,0(r8)
   42250:	45800115 	stw	r22,4(r8)
   42254:	d8c02015 	stw	r3,128(sp)
   42258:	d8801f15 	stw	r2,124(sp)
   4225c:	e0bff60e 	bge	fp,r2,42238 <__alt_data_end+0xfffdb138>
   42260:	d9801e04 	addi	r6,sp,120
   42264:	b80b883a 	mov	r5,r23
   42268:	9809883a 	mov	r4,r19
   4226c:	00485a80 	call	485a8 <__sprint_r>
   42270:	103c501e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42274:	d8c02017 	ldw	r3,128(sp)
   42278:	d8801f17 	ldw	r2,124(sp)
   4227c:	da000404 	addi	r8,sp,16
   42280:	003fee06 	br	4223c <__alt_data_end+0xfffdb13c>
   42284:	d9002c17 	ldw	r4,176(sp)
   42288:	d9801e04 	addi	r6,sp,120
   4228c:	b80b883a 	mov	r5,r23
   42290:	00485a80 	call	485a8 <__sprint_r>
   42294:	103c471e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42298:	d8c02017 	ldw	r3,128(sp)
   4229c:	df002787 	ldb	fp,158(sp)
   422a0:	da000404 	addi	r8,sp,16
   422a4:	003d5606 	br	41800 <__alt_data_end+0xfffda700>
   422a8:	9080040c 	andi	r2,r18,16
   422ac:	10016126 	beq	r2,zero,42834 <___vfprintf_internal_r+0x1888>
   422b0:	d8802d17 	ldw	r2,180(sp)
   422b4:	14c00017 	ldw	r19,0(r2)
   422b8:	10800104 	addi	r2,r2,4
   422bc:	d8802d15 	stw	r2,180(sp)
   422c0:	982dd7fa 	srai	r22,r19,31
   422c4:	b005883a 	mov	r2,r22
   422c8:	003c8206 	br	414d4 <__alt_data_end+0xfffda3d4>
   422cc:	9080040c 	andi	r2,r18,16
   422d0:	10003526 	beq	r2,zero,423a8 <___vfprintf_internal_r+0x13fc>
   422d4:	d9402d17 	ldw	r5,180(sp)
   422d8:	d8c02917 	ldw	r3,164(sp)
   422dc:	d8002785 	stb	zero,158(sp)
   422e0:	28800104 	addi	r2,r5,4
   422e4:	2cc00017 	ldw	r19,0(r5)
   422e8:	002d883a 	mov	r22,zero
   422ec:	18003716 	blt	r3,zero,423cc <___vfprintf_internal_r+0x1420>
   422f0:	00ffdfc4 	movi	r3,-129
   422f4:	d8802d15 	stw	r2,180(sp)
   422f8:	90e4703a 	and	r18,r18,r3
   422fc:	0039883a 	mov	fp,zero
   42300:	983df326 	beq	r19,zero,41ad0 <__alt_data_end+0xfffda9d0>
   42304:	00800244 	movi	r2,9
   42308:	14fc7b36 	bltu	r2,r19,414f8 <__alt_data_end+0xfffda3f8>
   4230c:	d8c02817 	ldw	r3,160(sp)
   42310:	dc001dc4 	addi	r16,sp,119
   42314:	9cc00c04 	addi	r19,r19,48
   42318:	1c07c83a 	sub	r3,r3,r16
   4231c:	dcc01dc5 	stb	r19,119(sp)
   42320:	d8c02e15 	stw	r3,184(sp)
   42324:	003ce806 	br	416c8 <__alt_data_end+0xfffda5c8>
   42328:	d8803317 	ldw	r2,204(sp)
   4232c:	143fffc4 	addi	r16,r2,-1
   42330:	043f4d0e 	bge	zero,r16,42068 <__alt_data_end+0xfffdaf68>
   42334:	07000404 	movi	fp,16
   42338:	e400810e 	bge	fp,r16,42540 <___vfprintf_internal_r+0x1594>
   4233c:	01400174 	movhi	r5,5
   42340:	297e0f84 	addi	r5,r5,-1986
   42344:	d9402b15 	stw	r5,172(sp)
   42348:	01c001c4 	movi	r7,7
   4234c:	dcc02c17 	ldw	r19,176(sp)
   42350:	00000306 	br	42360 <___vfprintf_internal_r+0x13b4>
   42354:	b5800204 	addi	r22,r22,8
   42358:	843ffc04 	addi	r16,r16,-16
   4235c:	e4007b0e 	bge	fp,r16,4254c <___vfprintf_internal_r+0x15a0>
   42360:	18c00404 	addi	r3,r3,16
   42364:	8c400044 	addi	r17,r17,1
   42368:	b5000015 	stw	r20,0(r22)
   4236c:	b7000115 	stw	fp,4(r22)
   42370:	d8c02015 	stw	r3,128(sp)
   42374:	dc401f15 	stw	r17,124(sp)
   42378:	3c7ff60e 	bge	r7,r17,42354 <__alt_data_end+0xfffdb254>
   4237c:	d9801e04 	addi	r6,sp,120
   42380:	b80b883a 	mov	r5,r23
   42384:	9809883a 	mov	r4,r19
   42388:	d9c03c15 	stw	r7,240(sp)
   4238c:	00485a80 	call	485a8 <__sprint_r>
   42390:	d9c03c17 	ldw	r7,240(sp)
   42394:	103c071e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42398:	d8c02017 	ldw	r3,128(sp)
   4239c:	dc401f17 	ldw	r17,124(sp)
   423a0:	dd800404 	addi	r22,sp,16
   423a4:	003fec06 	br	42358 <__alt_data_end+0xfffdb258>
   423a8:	9080100c 	andi	r2,r18,64
   423ac:	d8002785 	stb	zero,158(sp)
   423b0:	10010e26 	beq	r2,zero,427ec <___vfprintf_internal_r+0x1840>
   423b4:	d9002d17 	ldw	r4,180(sp)
   423b8:	d9402917 	ldw	r5,164(sp)
   423bc:	002d883a 	mov	r22,zero
   423c0:	20800104 	addi	r2,r4,4
   423c4:	24c0000b 	ldhu	r19,0(r4)
   423c8:	283fc90e 	bge	r5,zero,422f0 <__alt_data_end+0xfffdb1f0>
   423cc:	d8802d15 	stw	r2,180(sp)
   423d0:	0039883a 	mov	fp,zero
   423d4:	9d84b03a 	or	r2,r19,r22
   423d8:	103c461e 	bne	r2,zero,414f4 <__alt_data_end+0xfffda3f4>
   423dc:	00800044 	movi	r2,1
   423e0:	003e6c06 	br	41d94 <__alt_data_end+0xfffdac94>
   423e4:	d9002c17 	ldw	r4,176(sp)
   423e8:	d9801e04 	addi	r6,sp,120
   423ec:	b80b883a 	mov	r5,r23
   423f0:	00485a80 	call	485a8 <__sprint_r>
   423f4:	103bef1e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   423f8:	d8c02017 	ldw	r3,128(sp)
   423fc:	da000404 	addi	r8,sp,16
   42400:	d9003217 	ldw	r4,200(sp)
   42404:	d8802617 	ldw	r2,152(sp)
   42408:	d9403317 	ldw	r5,204(sp)
   4240c:	8123883a 	add	r17,r16,r4
   42410:	11400216 	blt	r2,r5,4241c <___vfprintf_internal_r+0x1470>
   42414:	9100004c 	andi	r4,r18,1
   42418:	20000d26 	beq	r4,zero,42450 <___vfprintf_internal_r+0x14a4>
   4241c:	d9003717 	ldw	r4,220(sp)
   42420:	d9403417 	ldw	r5,208(sp)
   42424:	1907883a 	add	r3,r3,r4
   42428:	d9001f17 	ldw	r4,124(sp)
   4242c:	41400015 	stw	r5,0(r8)
   42430:	d9403717 	ldw	r5,220(sp)
   42434:	21000044 	addi	r4,r4,1
   42438:	d8c02015 	stw	r3,128(sp)
   4243c:	41400115 	stw	r5,4(r8)
   42440:	d9001f15 	stw	r4,124(sp)
   42444:	014001c4 	movi	r5,7
   42448:	2901e816 	blt	r5,r4,42bec <___vfprintf_internal_r+0x1c40>
   4244c:	42000204 	addi	r8,r8,8
   42450:	d9003317 	ldw	r4,204(sp)
   42454:	8121883a 	add	r16,r16,r4
   42458:	2085c83a 	sub	r2,r4,r2
   4245c:	8461c83a 	sub	r16,r16,r17
   42460:	1400010e 	bge	r2,r16,42468 <___vfprintf_internal_r+0x14bc>
   42464:	1021883a 	mov	r16,r2
   42468:	04000a0e 	bge	zero,r16,42494 <___vfprintf_internal_r+0x14e8>
   4246c:	d9001f17 	ldw	r4,124(sp)
   42470:	1c07883a 	add	r3,r3,r16
   42474:	44400015 	stw	r17,0(r8)
   42478:	21000044 	addi	r4,r4,1
   4247c:	44000115 	stw	r16,4(r8)
   42480:	d8c02015 	stw	r3,128(sp)
   42484:	d9001f15 	stw	r4,124(sp)
   42488:	014001c4 	movi	r5,7
   4248c:	2901fb16 	blt	r5,r4,42c7c <___vfprintf_internal_r+0x1cd0>
   42490:	42000204 	addi	r8,r8,8
   42494:	8001f716 	blt	r16,zero,42c74 <___vfprintf_internal_r+0x1cc8>
   42498:	1421c83a 	sub	r16,r2,r16
   4249c:	043d380e 	bge	zero,r16,41980 <__alt_data_end+0xfffda880>
   424a0:	04400404 	movi	r17,16
   424a4:	d8801f17 	ldw	r2,124(sp)
   424a8:	8c3efb0e 	bge	r17,r16,42098 <__alt_data_end+0xfffdaf98>
   424ac:	01400174 	movhi	r5,5
   424b0:	297e0f84 	addi	r5,r5,-1986
   424b4:	d9402b15 	stw	r5,172(sp)
   424b8:	058001c4 	movi	r22,7
   424bc:	dcc02c17 	ldw	r19,176(sp)
   424c0:	00000306 	br	424d0 <___vfprintf_internal_r+0x1524>
   424c4:	42000204 	addi	r8,r8,8
   424c8:	843ffc04 	addi	r16,r16,-16
   424cc:	8c3ef50e 	bge	r17,r16,420a4 <__alt_data_end+0xfffdafa4>
   424d0:	18c00404 	addi	r3,r3,16
   424d4:	10800044 	addi	r2,r2,1
   424d8:	45000015 	stw	r20,0(r8)
   424dc:	44400115 	stw	r17,4(r8)
   424e0:	d8c02015 	stw	r3,128(sp)
   424e4:	d8801f15 	stw	r2,124(sp)
   424e8:	b0bff60e 	bge	r22,r2,424c4 <__alt_data_end+0xfffdb3c4>
   424ec:	d9801e04 	addi	r6,sp,120
   424f0:	b80b883a 	mov	r5,r23
   424f4:	9809883a 	mov	r4,r19
   424f8:	00485a80 	call	485a8 <__sprint_r>
   424fc:	103bad1e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42500:	d8c02017 	ldw	r3,128(sp)
   42504:	d8801f17 	ldw	r2,124(sp)
   42508:	da000404 	addi	r8,sp,16
   4250c:	003fee06 	br	424c8 <__alt_data_end+0xfffdb3c8>
   42510:	9088703a 	and	r4,r18,r2
   42514:	203eab1e 	bne	r4,zero,41fc4 <__alt_data_end+0xfffdaec4>
   42518:	dc401f17 	ldw	r17,124(sp)
   4251c:	40800115 	stw	r2,4(r8)
   42520:	44000015 	stw	r16,0(r8)
   42524:	8c400044 	addi	r17,r17,1
   42528:	d8c02015 	stw	r3,128(sp)
   4252c:	dc401f15 	stw	r17,124(sp)
   42530:	008001c4 	movi	r2,7
   42534:	14400e16 	blt	r2,r17,42570 <___vfprintf_internal_r+0x15c4>
   42538:	45800204 	addi	r22,r8,8
   4253c:	003eca06 	br	42068 <__alt_data_end+0xfffdaf68>
   42540:	01000174 	movhi	r4,5
   42544:	213e0f84 	addi	r4,r4,-1986
   42548:	d9002b15 	stw	r4,172(sp)
   4254c:	d8802b17 	ldw	r2,172(sp)
   42550:	1c07883a 	add	r3,r3,r16
   42554:	8c400044 	addi	r17,r17,1
   42558:	b0800015 	stw	r2,0(r22)
   4255c:	b4000115 	stw	r16,4(r22)
   42560:	d8c02015 	stw	r3,128(sp)
   42564:	dc401f15 	stw	r17,124(sp)
   42568:	008001c4 	movi	r2,7
   4256c:	147ebd0e 	bge	r2,r17,42064 <__alt_data_end+0xfffdaf64>
   42570:	d9002c17 	ldw	r4,176(sp)
   42574:	d9801e04 	addi	r6,sp,120
   42578:	b80b883a 	mov	r5,r23
   4257c:	00485a80 	call	485a8 <__sprint_r>
   42580:	103b8c1e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42584:	d8c02017 	ldw	r3,128(sp)
   42588:	dc401f17 	ldw	r17,124(sp)
   4258c:	dd800404 	addi	r22,sp,16
   42590:	003eb506 	br	42068 <__alt_data_end+0xfffdaf68>
   42594:	d9002c17 	ldw	r4,176(sp)
   42598:	d9801e04 	addi	r6,sp,120
   4259c:	b80b883a 	mov	r5,r23
   425a0:	00485a80 	call	485a8 <__sprint_r>
   425a4:	103b831e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   425a8:	d8c02017 	ldw	r3,128(sp)
   425ac:	dc401f17 	ldw	r17,124(sp)
   425b0:	da000404 	addi	r8,sp,16
   425b4:	003e8d06 	br	41fec <__alt_data_end+0xfffdaeec>
   425b8:	d9002c17 	ldw	r4,176(sp)
   425bc:	d9801e04 	addi	r6,sp,120
   425c0:	b80b883a 	mov	r5,r23
   425c4:	00485a80 	call	485a8 <__sprint_r>
   425c8:	103b7a1e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   425cc:	d8c02017 	ldw	r3,128(sp)
   425d0:	dc401f17 	ldw	r17,124(sp)
   425d4:	dd800404 	addi	r22,sp,16
   425d8:	003e8f06 	br	42018 <__alt_data_end+0xfffdaf18>
   425dc:	0027883a 	mov	r19,zero
   425e0:	003f4a06 	br	4230c <__alt_data_end+0xfffdb20c>
   425e4:	d9002c17 	ldw	r4,176(sp)
   425e8:	d9801e04 	addi	r6,sp,120
   425ec:	b80b883a 	mov	r5,r23
   425f0:	00485a80 	call	485a8 <__sprint_r>
   425f4:	103b6f1e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   425f8:	d8c02017 	ldw	r3,128(sp)
   425fc:	da000404 	addi	r8,sp,16
   42600:	003c9d06 	br	41878 <__alt_data_end+0xfffda778>
   42604:	04e7c83a 	sub	r19,zero,r19
   42608:	9804c03a 	cmpne	r2,r19,zero
   4260c:	05adc83a 	sub	r22,zero,r22
   42610:	b0adc83a 	sub	r22,r22,r2
   42614:	d8802917 	ldw	r2,164(sp)
   42618:	07000b44 	movi	fp,45
   4261c:	df002785 	stb	fp,158(sp)
   42620:	10017b16 	blt	r2,zero,42c10 <___vfprintf_internal_r+0x1c64>
   42624:	00bfdfc4 	movi	r2,-129
   42628:	90a4703a 	and	r18,r18,r2
   4262c:	003bb106 	br	414f4 <__alt_data_end+0xfffda3f4>
   42630:	d9003617 	ldw	r4,216(sp)
   42634:	d9403817 	ldw	r5,224(sp)
   42638:	da003d15 	stw	r8,244(sp)
   4263c:	00481cc0 	call	481cc <__fpclassifyd>
   42640:	da003d17 	ldw	r8,244(sp)
   42644:	1000f026 	beq	r2,zero,42a08 <___vfprintf_internal_r+0x1a5c>
   42648:	d9002917 	ldw	r4,164(sp)
   4264c:	05bff7c4 	movi	r22,-33
   42650:	00bfffc4 	movi	r2,-1
   42654:	8dac703a 	and	r22,r17,r22
   42658:	20820026 	beq	r4,r2,42e5c <___vfprintf_internal_r+0x1eb0>
   4265c:	008011c4 	movi	r2,71
   42660:	b081f726 	beq	r22,r2,42e40 <___vfprintf_internal_r+0x1e94>
   42664:	d9003817 	ldw	r4,224(sp)
   42668:	90c04014 	ori	r3,r18,256
   4266c:	d8c02b15 	stw	r3,172(sp)
   42670:	20021516 	blt	r4,zero,42ec8 <___vfprintf_internal_r+0x1f1c>
   42674:	dcc03817 	ldw	r19,224(sp)
   42678:	d8002a05 	stb	zero,168(sp)
   4267c:	00801984 	movi	r2,102
   42680:	8881f926 	beq	r17,r2,42e68 <___vfprintf_internal_r+0x1ebc>
   42684:	00801184 	movi	r2,70
   42688:	88821c26 	beq	r17,r2,42efc <___vfprintf_internal_r+0x1f50>
   4268c:	00801144 	movi	r2,69
   42690:	b081ef26 	beq	r22,r2,42e50 <___vfprintf_internal_r+0x1ea4>
   42694:	d8c02917 	ldw	r3,164(sp)
   42698:	d8802104 	addi	r2,sp,132
   4269c:	d8800315 	stw	r2,12(sp)
   426a0:	d9403617 	ldw	r5,216(sp)
   426a4:	d8802504 	addi	r2,sp,148
   426a8:	d9002c17 	ldw	r4,176(sp)
   426ac:	d8800215 	stw	r2,8(sp)
   426b0:	d8802604 	addi	r2,sp,152
   426b4:	d8c00015 	stw	r3,0(sp)
   426b8:	d8800115 	stw	r2,4(sp)
   426bc:	01c00084 	movi	r7,2
   426c0:	980d883a 	mov	r6,r19
   426c4:	d8c03c15 	stw	r3,240(sp)
   426c8:	da003d15 	stw	r8,244(sp)
   426cc:	00435d00 	call	435d0 <_dtoa_r>
   426d0:	1021883a 	mov	r16,r2
   426d4:	008019c4 	movi	r2,103
   426d8:	d8c03c17 	ldw	r3,240(sp)
   426dc:	da003d17 	ldw	r8,244(sp)
   426e0:	88817126 	beq	r17,r2,42ca8 <___vfprintf_internal_r+0x1cfc>
   426e4:	008011c4 	movi	r2,71
   426e8:	88829226 	beq	r17,r2,43134 <___vfprintf_internal_r+0x2188>
   426ec:	80f9883a 	add	fp,r16,r3
   426f0:	d9003617 	ldw	r4,216(sp)
   426f4:	000d883a 	mov	r6,zero
   426f8:	000f883a 	mov	r7,zero
   426fc:	980b883a 	mov	r5,r19
   42700:	da003d15 	stw	r8,244(sp)
   42704:	004c2200 	call	4c220 <__eqdf2>
   42708:	da003d17 	ldw	r8,244(sp)
   4270c:	10018d26 	beq	r2,zero,42d44 <___vfprintf_internal_r+0x1d98>
   42710:	d8802117 	ldw	r2,132(sp)
   42714:	1700062e 	bgeu	r2,fp,42730 <___vfprintf_internal_r+0x1784>
   42718:	01000c04 	movi	r4,48
   4271c:	10c00044 	addi	r3,r2,1
   42720:	d8c02115 	stw	r3,132(sp)
   42724:	11000005 	stb	r4,0(r2)
   42728:	d8802117 	ldw	r2,132(sp)
   4272c:	173ffb36 	bltu	r2,fp,4271c <__alt_data_end+0xfffdb61c>
   42730:	1405c83a 	sub	r2,r2,r16
   42734:	d8803315 	stw	r2,204(sp)
   42738:	008011c4 	movi	r2,71
   4273c:	b0817626 	beq	r22,r2,42d18 <___vfprintf_internal_r+0x1d6c>
   42740:	00801944 	movi	r2,101
   42744:	1442810e 	bge	r2,r17,4314c <___vfprintf_internal_r+0x21a0>
   42748:	d8c02617 	ldw	r3,152(sp)
   4274c:	00801984 	movi	r2,102
   42750:	d8c03215 	stw	r3,200(sp)
   42754:	8881fe26 	beq	r17,r2,42f50 <___vfprintf_internal_r+0x1fa4>
   42758:	d8c03217 	ldw	r3,200(sp)
   4275c:	d9003317 	ldw	r4,204(sp)
   42760:	1901dd16 	blt	r3,r4,42ed8 <___vfprintf_internal_r+0x1f2c>
   42764:	9480004c 	andi	r18,r18,1
   42768:	90022b1e 	bne	r18,zero,43018 <___vfprintf_internal_r+0x206c>
   4276c:	1805883a 	mov	r2,r3
   42770:	18028016 	blt	r3,zero,43174 <___vfprintf_internal_r+0x21c8>
   42774:	d8c03217 	ldw	r3,200(sp)
   42778:	044019c4 	movi	r17,103
   4277c:	d8c02e15 	stw	r3,184(sp)
   42780:	df002a07 	ldb	fp,168(sp)
   42784:	e001531e 	bne	fp,zero,42cd4 <___vfprintf_internal_r+0x1d28>
   42788:	df002783 	ldbu	fp,158(sp)
   4278c:	d8802a15 	stw	r2,168(sp)
   42790:	dc802b17 	ldw	r18,172(sp)
   42794:	d8002915 	stw	zero,164(sp)
   42798:	003bd106 	br	416e0 <__alt_data_end+0xfffda5e0>
   4279c:	d8802d17 	ldw	r2,180(sp)
   427a0:	d8c02d17 	ldw	r3,180(sp)
   427a4:	d9002d17 	ldw	r4,180(sp)
   427a8:	10800017 	ldw	r2,0(r2)
   427ac:	18c00117 	ldw	r3,4(r3)
   427b0:	21000204 	addi	r4,r4,8
   427b4:	d8803615 	stw	r2,216(sp)
   427b8:	d8c03815 	stw	r3,224(sp)
   427bc:	d9002d15 	stw	r4,180(sp)
   427c0:	003b7506 	br	41598 <__alt_data_end+0xfffda498>
   427c4:	ac400007 	ldb	r17,0(r21)
   427c8:	003a5906 	br	41130 <__alt_data_end+0xfffda030>
   427cc:	9080100c 	andi	r2,r18,64
   427d0:	1000a826 	beq	r2,zero,42a74 <___vfprintf_internal_r+0x1ac8>
   427d4:	d9002d17 	ldw	r4,180(sp)
   427d8:	002d883a 	mov	r22,zero
   427dc:	24c0000b 	ldhu	r19,0(r4)
   427e0:	21000104 	addi	r4,r4,4
   427e4:	d9002d15 	stw	r4,180(sp)
   427e8:	003ccb06 	br	41b18 <__alt_data_end+0xfffdaa18>
   427ec:	d8c02d17 	ldw	r3,180(sp)
   427f0:	d9002917 	ldw	r4,164(sp)
   427f4:	002d883a 	mov	r22,zero
   427f8:	18800104 	addi	r2,r3,4
   427fc:	1cc00017 	ldw	r19,0(r3)
   42800:	203ebb0e 	bge	r4,zero,422f0 <__alt_data_end+0xfffdb1f0>
   42804:	003ef106 	br	423cc <__alt_data_end+0xfffdb2cc>
   42808:	9080040c 	andi	r2,r18,16
   4280c:	1000921e 	bne	r2,zero,42a58 <___vfprintf_internal_r+0x1aac>
   42810:	9480100c 	andi	r18,r18,64
   42814:	90013926 	beq	r18,zero,42cfc <___vfprintf_internal_r+0x1d50>
   42818:	d9002d17 	ldw	r4,180(sp)
   4281c:	d9402f17 	ldw	r5,188(sp)
   42820:	20800017 	ldw	r2,0(r4)
   42824:	21000104 	addi	r4,r4,4
   42828:	d9002d15 	stw	r4,180(sp)
   4282c:	1140000d 	sth	r5,0(r2)
   42830:	003a1606 	br	4108c <__alt_data_end+0xfffd9f8c>
   42834:	9080100c 	andi	r2,r18,64
   42838:	10008026 	beq	r2,zero,42a3c <___vfprintf_internal_r+0x1a90>
   4283c:	d8c02d17 	ldw	r3,180(sp)
   42840:	1cc0000f 	ldh	r19,0(r3)
   42844:	18c00104 	addi	r3,r3,4
   42848:	d8c02d15 	stw	r3,180(sp)
   4284c:	982dd7fa 	srai	r22,r19,31
   42850:	b005883a 	mov	r2,r22
   42854:	003b1f06 	br	414d4 <__alt_data_end+0xfffda3d4>
   42858:	9080100c 	andi	r2,r18,64
   4285c:	d8002785 	stb	zero,158(sp)
   42860:	10008a1e 	bne	r2,zero,42a8c <___vfprintf_internal_r+0x1ae0>
   42864:	d9402d17 	ldw	r5,180(sp)
   42868:	d8c02917 	ldw	r3,164(sp)
   4286c:	002d883a 	mov	r22,zero
   42870:	28800104 	addi	r2,r5,4
   42874:	2cc00017 	ldw	r19,0(r5)
   42878:	183e4b0e 	bge	r3,zero,421a8 <__alt_data_end+0xfffdb0a8>
   4287c:	9d86b03a 	or	r3,r19,r22
   42880:	d8802d15 	stw	r2,180(sp)
   42884:	183e4c1e 	bne	r3,zero,421b8 <__alt_data_end+0xfffdb0b8>
   42888:	0039883a 	mov	fp,zero
   4288c:	0005883a 	mov	r2,zero
   42890:	003d4006 	br	41d94 <__alt_data_end+0xfffdac94>
   42894:	01400174 	movhi	r5,5
   42898:	297e0f84 	addi	r5,r5,-1986
   4289c:	d9402b15 	stw	r5,172(sp)
   428a0:	d9402b17 	ldw	r5,172(sp)
   428a4:	1c47883a 	add	r3,r3,r17
   428a8:	10800044 	addi	r2,r2,1
   428ac:	41400015 	stw	r5,0(r8)
   428b0:	44400115 	stw	r17,4(r8)
   428b4:	d8c02015 	stw	r3,128(sp)
   428b8:	d8801f15 	stw	r2,124(sp)
   428bc:	010001c4 	movi	r4,7
   428c0:	20bec816 	blt	r4,r2,423e4 <__alt_data_end+0xfffdb2e4>
   428c4:	42000204 	addi	r8,r8,8
   428c8:	003ecd06 	br	42400 <__alt_data_end+0xfffdb300>
   428cc:	d9002917 	ldw	r4,164(sp)
   428d0:	d8002785 	stb	zero,158(sp)
   428d4:	203d2d16 	blt	r4,zero,41d8c <__alt_data_end+0xfffdac8c>
   428d8:	00bfdfc4 	movi	r2,-129
   428dc:	90a4703a 	and	r18,r18,r2
   428e0:	003a9106 	br	41328 <__alt_data_end+0xfffda228>
   428e4:	01000174 	movhi	r4,5
   428e8:	213e0f84 	addi	r4,r4,-1986
   428ec:	d9002b15 	stw	r4,172(sp)
   428f0:	003c0c06 	br	41924 <__alt_data_end+0xfffda824>
   428f4:	d9002c17 	ldw	r4,176(sp)
   428f8:	d9801e04 	addi	r6,sp,120
   428fc:	b80b883a 	mov	r5,r23
   42900:	00485a80 	call	485a8 <__sprint_r>
   42904:	103aab1e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42908:	d8c02017 	ldw	r3,128(sp)
   4290c:	da000404 	addi	r8,sp,16
   42910:	003d4106 	br	41e18 <__alt_data_end+0xfffdad18>
   42914:	d8801f17 	ldw	r2,124(sp)
   42918:	01400174 	movhi	r5,5
   4291c:	01000044 	movi	r4,1
   42920:	18c00044 	addi	r3,r3,1
   42924:	10800044 	addi	r2,r2,1
   42928:	297e0f04 	addi	r5,r5,-1988
   4292c:	41000115 	stw	r4,4(r8)
   42930:	41400015 	stw	r5,0(r8)
   42934:	d8c02015 	stw	r3,128(sp)
   42938:	d8801f15 	stw	r2,124(sp)
   4293c:	010001c4 	movi	r4,7
   42940:	20805c16 	blt	r4,r2,42ab4 <___vfprintf_internal_r+0x1b08>
   42944:	42000204 	addi	r8,r8,8
   42948:	8800041e 	bne	r17,zero,4295c <___vfprintf_internal_r+0x19b0>
   4294c:	d8803317 	ldw	r2,204(sp)
   42950:	1000021e 	bne	r2,zero,4295c <___vfprintf_internal_r+0x19b0>
   42954:	9080004c 	andi	r2,r18,1
   42958:	103c0926 	beq	r2,zero,41980 <__alt_data_end+0xfffda880>
   4295c:	d9003717 	ldw	r4,220(sp)
   42960:	d8801f17 	ldw	r2,124(sp)
   42964:	d9403417 	ldw	r5,208(sp)
   42968:	20c7883a 	add	r3,r4,r3
   4296c:	10800044 	addi	r2,r2,1
   42970:	41000115 	stw	r4,4(r8)
   42974:	41400015 	stw	r5,0(r8)
   42978:	d8c02015 	stw	r3,128(sp)
   4297c:	d8801f15 	stw	r2,124(sp)
   42980:	010001c4 	movi	r4,7
   42984:	20812116 	blt	r4,r2,42e0c <___vfprintf_internal_r+0x1e60>
   42988:	42000204 	addi	r8,r8,8
   4298c:	0463c83a 	sub	r17,zero,r17
   42990:	0440730e 	bge	zero,r17,42b60 <___vfprintf_internal_r+0x1bb4>
   42994:	05800404 	movi	r22,16
   42998:	b440860e 	bge	r22,r17,42bb4 <___vfprintf_internal_r+0x1c08>
   4299c:	01400174 	movhi	r5,5
   429a0:	297e0f84 	addi	r5,r5,-1986
   429a4:	d9402b15 	stw	r5,172(sp)
   429a8:	070001c4 	movi	fp,7
   429ac:	dcc02c17 	ldw	r19,176(sp)
   429b0:	00000306 	br	429c0 <___vfprintf_internal_r+0x1a14>
   429b4:	42000204 	addi	r8,r8,8
   429b8:	8c7ffc04 	addi	r17,r17,-16
   429bc:	b440800e 	bge	r22,r17,42bc0 <___vfprintf_internal_r+0x1c14>
   429c0:	18c00404 	addi	r3,r3,16
   429c4:	10800044 	addi	r2,r2,1
   429c8:	45000015 	stw	r20,0(r8)
   429cc:	45800115 	stw	r22,4(r8)
   429d0:	d8c02015 	stw	r3,128(sp)
   429d4:	d8801f15 	stw	r2,124(sp)
   429d8:	e0bff60e 	bge	fp,r2,429b4 <__alt_data_end+0xfffdb8b4>
   429dc:	d9801e04 	addi	r6,sp,120
   429e0:	b80b883a 	mov	r5,r23
   429e4:	9809883a 	mov	r4,r19
   429e8:	00485a80 	call	485a8 <__sprint_r>
   429ec:	103a711e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   429f0:	d8c02017 	ldw	r3,128(sp)
   429f4:	d8801f17 	ldw	r2,124(sp)
   429f8:	da000404 	addi	r8,sp,16
   429fc:	003fee06 	br	429b8 <__alt_data_end+0xfffdb8b8>
   42a00:	00bfffc4 	movi	r2,-1
   42a04:	003a6f06 	br	413c4 <__alt_data_end+0xfffda2c4>
   42a08:	008011c4 	movi	r2,71
   42a0c:	1440b816 	blt	r2,r17,42cf0 <___vfprintf_internal_r+0x1d44>
   42a10:	04000174 	movhi	r16,5
   42a14:	843e0104 	addi	r16,r16,-2044
   42a18:	00c000c4 	movi	r3,3
   42a1c:	00bfdfc4 	movi	r2,-129
   42a20:	d8c02a15 	stw	r3,168(sp)
   42a24:	90a4703a 	and	r18,r18,r2
   42a28:	df002783 	ldbu	fp,158(sp)
   42a2c:	d8c02e15 	stw	r3,184(sp)
   42a30:	d8002915 	stw	zero,164(sp)
   42a34:	d8003215 	stw	zero,200(sp)
   42a38:	003b2906 	br	416e0 <__alt_data_end+0xfffda5e0>
   42a3c:	d9002d17 	ldw	r4,180(sp)
   42a40:	24c00017 	ldw	r19,0(r4)
   42a44:	21000104 	addi	r4,r4,4
   42a48:	d9002d15 	stw	r4,180(sp)
   42a4c:	982dd7fa 	srai	r22,r19,31
   42a50:	b005883a 	mov	r2,r22
   42a54:	003a9f06 	br	414d4 <__alt_data_end+0xfffda3d4>
   42a58:	d9402d17 	ldw	r5,180(sp)
   42a5c:	d8c02f17 	ldw	r3,188(sp)
   42a60:	28800017 	ldw	r2,0(r5)
   42a64:	29400104 	addi	r5,r5,4
   42a68:	d9402d15 	stw	r5,180(sp)
   42a6c:	10c00015 	stw	r3,0(r2)
   42a70:	00398606 	br	4108c <__alt_data_end+0xfffd9f8c>
   42a74:	d9402d17 	ldw	r5,180(sp)
   42a78:	002d883a 	mov	r22,zero
   42a7c:	2cc00017 	ldw	r19,0(r5)
   42a80:	29400104 	addi	r5,r5,4
   42a84:	d9402d15 	stw	r5,180(sp)
   42a88:	003c2306 	br	41b18 <__alt_data_end+0xfffdaa18>
   42a8c:	d8c02d17 	ldw	r3,180(sp)
   42a90:	d9002917 	ldw	r4,164(sp)
   42a94:	002d883a 	mov	r22,zero
   42a98:	18800104 	addi	r2,r3,4
   42a9c:	1cc0000b 	ldhu	r19,0(r3)
   42aa0:	203dc10e 	bge	r4,zero,421a8 <__alt_data_end+0xfffdb0a8>
   42aa4:	003f7506 	br	4287c <__alt_data_end+0xfffdb77c>
   42aa8:	04000174 	movhi	r16,5
   42aac:	843dff04 	addi	r16,r16,-2052
   42ab0:	003acc06 	br	415e4 <__alt_data_end+0xfffda4e4>
   42ab4:	d9002c17 	ldw	r4,176(sp)
   42ab8:	d9801e04 	addi	r6,sp,120
   42abc:	b80b883a 	mov	r5,r23
   42ac0:	00485a80 	call	485a8 <__sprint_r>
   42ac4:	103a3b1e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42ac8:	dc402617 	ldw	r17,152(sp)
   42acc:	d8c02017 	ldw	r3,128(sp)
   42ad0:	da000404 	addi	r8,sp,16
   42ad4:	003f9c06 	br	42948 <__alt_data_end+0xfffdb848>
   42ad8:	ac400043 	ldbu	r17,1(r21)
   42adc:	94800814 	ori	r18,r18,32
   42ae0:	ad400044 	addi	r21,r21,1
   42ae4:	8c403fcc 	andi	r17,r17,255
   42ae8:	8c40201c 	xori	r17,r17,128
   42aec:	8c7fe004 	addi	r17,r17,-128
   42af0:	00398f06 	br	41130 <__alt_data_end+0xfffda030>
   42af4:	d8c02d15 	stw	r3,180(sp)
   42af8:	0039883a 	mov	fp,zero
   42afc:	003e3506 	br	423d4 <__alt_data_end+0xfffdb2d4>
   42b00:	d9002c17 	ldw	r4,176(sp)
   42b04:	d9801e04 	addi	r6,sp,120
   42b08:	b80b883a 	mov	r5,r23
   42b0c:	00485a80 	call	485a8 <__sprint_r>
   42b10:	103a281e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42b14:	d8c02017 	ldw	r3,128(sp)
   42b18:	da000404 	addi	r8,sp,16
   42b1c:	003cd006 	br	41e60 <__alt_data_end+0xfffdad60>
   42b20:	8009883a 	mov	r4,r16
   42b24:	da003d15 	stw	r8,244(sp)
   42b28:	0040f140 	call	40f14 <strlen>
   42b2c:	d8802e15 	stw	r2,184(sp)
   42b30:	da003d17 	ldw	r8,244(sp)
   42b34:	103c340e 	bge	r2,zero,41c08 <__alt_data_end+0xfffdab08>
   42b38:	0005883a 	mov	r2,zero
   42b3c:	003c3206 	br	41c08 <__alt_data_end+0xfffdab08>
   42b40:	d9002c17 	ldw	r4,176(sp)
   42b44:	d9801e04 	addi	r6,sp,120
   42b48:	b80b883a 	mov	r5,r23
   42b4c:	00485a80 	call	485a8 <__sprint_r>
   42b50:	103a181e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42b54:	d8c02017 	ldw	r3,128(sp)
   42b58:	d8801f17 	ldw	r2,124(sp)
   42b5c:	da000404 	addi	r8,sp,16
   42b60:	d9403317 	ldw	r5,204(sp)
   42b64:	10800044 	addi	r2,r2,1
   42b68:	44000015 	stw	r16,0(r8)
   42b6c:	28c7883a 	add	r3,r5,r3
   42b70:	003b7d06 	br	41968 <__alt_data_end+0xfffda868>
   42b74:	01000174 	movhi	r4,5
   42b78:	213e1384 	addi	r4,r4,-1970
   42b7c:	d9003515 	stw	r4,212(sp)
   42b80:	003b1406 	br	417d4 <__alt_data_end+0xfffda6d4>
   42b84:	013fffc4 	movi	r4,-1
   42b88:	003a3506 	br	41460 <__alt_data_end+0xfffda360>
   42b8c:	0023883a 	mov	r17,zero
   42b90:	003d9d06 	br	42208 <__alt_data_end+0xfffdb108>
   42b94:	d9002c17 	ldw	r4,176(sp)
   42b98:	d9801e04 	addi	r6,sp,120
   42b9c:	b80b883a 	mov	r5,r23
   42ba0:	00485a80 	call	485a8 <__sprint_r>
   42ba4:	103a031e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42ba8:	d8c02017 	ldw	r3,128(sp)
   42bac:	da000404 	addi	r8,sp,16
   42bb0:	003d9406 	br	42204 <__alt_data_end+0xfffdb104>
   42bb4:	01000174 	movhi	r4,5
   42bb8:	213e0f84 	addi	r4,r4,-1986
   42bbc:	d9002b15 	stw	r4,172(sp)
   42bc0:	d9002b17 	ldw	r4,172(sp)
   42bc4:	1c47883a 	add	r3,r3,r17
   42bc8:	10800044 	addi	r2,r2,1
   42bcc:	41000015 	stw	r4,0(r8)
   42bd0:	44400115 	stw	r17,4(r8)
   42bd4:	d8c02015 	stw	r3,128(sp)
   42bd8:	d8801f15 	stw	r2,124(sp)
   42bdc:	010001c4 	movi	r4,7
   42be0:	20bfd716 	blt	r4,r2,42b40 <__alt_data_end+0xfffdba40>
   42be4:	42000204 	addi	r8,r8,8
   42be8:	003fdd06 	br	42b60 <__alt_data_end+0xfffdba60>
   42bec:	d9002c17 	ldw	r4,176(sp)
   42bf0:	d9801e04 	addi	r6,sp,120
   42bf4:	b80b883a 	mov	r5,r23
   42bf8:	00485a80 	call	485a8 <__sprint_r>
   42bfc:	1039ed1e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42c00:	d8802617 	ldw	r2,152(sp)
   42c04:	d8c02017 	ldw	r3,128(sp)
   42c08:	da000404 	addi	r8,sp,16
   42c0c:	003e1006 	br	42450 <__alt_data_end+0xfffdb350>
   42c10:	00800044 	movi	r2,1
   42c14:	10803fcc 	andi	r2,r2,255
   42c18:	00c00044 	movi	r3,1
   42c1c:	10fa3526 	beq	r2,r3,414f4 <__alt_data_end+0xfffda3f4>
   42c20:	00c00084 	movi	r3,2
   42c24:	10fbcb26 	beq	r2,r3,41b54 <__alt_data_end+0xfffdaa54>
   42c28:	003a8f06 	br	41668 <__alt_data_end+0xfffda568>
   42c2c:	01000174 	movhi	r4,5
   42c30:	213e1384 	addi	r4,r4,-1970
   42c34:	d9003515 	stw	r4,212(sp)
   42c38:	003b7606 	br	41a14 <__alt_data_end+0xfffda914>
   42c3c:	d8802917 	ldw	r2,164(sp)
   42c40:	00c00184 	movi	r3,6
   42c44:	1880012e 	bgeu	r3,r2,42c4c <___vfprintf_internal_r+0x1ca0>
   42c48:	1805883a 	mov	r2,r3
   42c4c:	d8802e15 	stw	r2,184(sp)
   42c50:	1000ef16 	blt	r2,zero,43010 <___vfprintf_internal_r+0x2064>
   42c54:	04000174 	movhi	r16,5
   42c58:	d8802a15 	stw	r2,168(sp)
   42c5c:	dcc02d15 	stw	r19,180(sp)
   42c60:	d8002915 	stw	zero,164(sp)
   42c64:	d8003215 	stw	zero,200(sp)
   42c68:	843e0d04 	addi	r16,r16,-1996
   42c6c:	0039883a 	mov	fp,zero
   42c70:	003aa206 	br	416fc <__alt_data_end+0xfffda5fc>
   42c74:	0021883a 	mov	r16,zero
   42c78:	003e0706 	br	42498 <__alt_data_end+0xfffdb398>
   42c7c:	d9002c17 	ldw	r4,176(sp)
   42c80:	d9801e04 	addi	r6,sp,120
   42c84:	b80b883a 	mov	r5,r23
   42c88:	00485a80 	call	485a8 <__sprint_r>
   42c8c:	1039c91e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42c90:	d8802617 	ldw	r2,152(sp)
   42c94:	d9403317 	ldw	r5,204(sp)
   42c98:	d8c02017 	ldw	r3,128(sp)
   42c9c:	da000404 	addi	r8,sp,16
   42ca0:	2885c83a 	sub	r2,r5,r2
   42ca4:	003dfb06 	br	42494 <__alt_data_end+0xfffdb394>
   42ca8:	9080004c 	andi	r2,r18,1
   42cac:	103e8f1e 	bne	r2,zero,426ec <__alt_data_end+0xfffdb5ec>
   42cb0:	d8802117 	ldw	r2,132(sp)
   42cb4:	003e9e06 	br	42730 <__alt_data_end+0xfffdb630>
   42cb8:	1025883a 	mov	r18,r2
   42cbc:	0039883a 	mov	fp,zero
   42cc0:	00800084 	movi	r2,2
   42cc4:	003fd306 	br	42c14 <__alt_data_end+0xfffdbb14>
   42cc8:	07000b44 	movi	fp,45
   42ccc:	df002785 	stb	fp,158(sp)
   42cd0:	003a4006 	br	415d4 <__alt_data_end+0xfffda4d4>
   42cd4:	00c00b44 	movi	r3,45
   42cd8:	d8c02785 	stb	r3,158(sp)
   42cdc:	d8802a15 	stw	r2,168(sp)
   42ce0:	dc802b17 	ldw	r18,172(sp)
   42ce4:	d8002915 	stw	zero,164(sp)
   42ce8:	07000b44 	movi	fp,45
   42cec:	003a8006 	br	416f0 <__alt_data_end+0xfffda5f0>
   42cf0:	04000174 	movhi	r16,5
   42cf4:	843e0204 	addi	r16,r16,-2040
   42cf8:	003f4706 	br	42a18 <__alt_data_end+0xfffdb918>
   42cfc:	d8c02d17 	ldw	r3,180(sp)
   42d00:	d9002f17 	ldw	r4,188(sp)
   42d04:	18800017 	ldw	r2,0(r3)
   42d08:	18c00104 	addi	r3,r3,4
   42d0c:	d8c02d15 	stw	r3,180(sp)
   42d10:	11000015 	stw	r4,0(r2)
   42d14:	0038dd06 	br	4108c <__alt_data_end+0xfffd9f8c>
   42d18:	dd802617 	ldw	r22,152(sp)
   42d1c:	00bfff44 	movi	r2,-3
   42d20:	b0801c16 	blt	r22,r2,42d94 <___vfprintf_internal_r+0x1de8>
   42d24:	d9402917 	ldw	r5,164(sp)
   42d28:	2d801a16 	blt	r5,r22,42d94 <___vfprintf_internal_r+0x1de8>
   42d2c:	dd803215 	stw	r22,200(sp)
   42d30:	003e8906 	br	42758 <__alt_data_end+0xfffdb658>
   42d34:	01000174 	movhi	r4,5
   42d38:	213e0f84 	addi	r4,r4,-1986
   42d3c:	d9002b15 	stw	r4,172(sp)
   42d40:	003c9106 	br	41f88 <__alt_data_end+0xfffdae88>
   42d44:	e005883a 	mov	r2,fp
   42d48:	003e7906 	br	42730 <__alt_data_end+0xfffdb630>
   42d4c:	d9402917 	ldw	r5,164(sp)
   42d50:	df002783 	ldbu	fp,158(sp)
   42d54:	dcc02d15 	stw	r19,180(sp)
   42d58:	d9402a15 	stw	r5,168(sp)
   42d5c:	d9402e15 	stw	r5,184(sp)
   42d60:	d8002915 	stw	zero,164(sp)
   42d64:	d8003215 	stw	zero,200(sp)
   42d68:	003a5d06 	br	416e0 <__alt_data_end+0xfffda5e0>
   42d6c:	9080004c 	andi	r2,r18,1
   42d70:	0039883a 	mov	fp,zero
   42d74:	10000426 	beq	r2,zero,42d88 <___vfprintf_internal_r+0x1ddc>
   42d78:	00800c04 	movi	r2,48
   42d7c:	dc001dc4 	addi	r16,sp,119
   42d80:	d8801dc5 	stb	r2,119(sp)
   42d84:	003b8006 	br	41b88 <__alt_data_end+0xfffdaa88>
   42d88:	d8002e15 	stw	zero,184(sp)
   42d8c:	dc001e04 	addi	r16,sp,120
   42d90:	003a4d06 	br	416c8 <__alt_data_end+0xfffda5c8>
   42d94:	8c7fff84 	addi	r17,r17,-2
   42d98:	b5bfffc4 	addi	r22,r22,-1
   42d9c:	dd802615 	stw	r22,152(sp)
   42da0:	dc4022c5 	stb	r17,139(sp)
   42da4:	b000bf16 	blt	r22,zero,430a4 <___vfprintf_internal_r+0x20f8>
   42da8:	00800ac4 	movi	r2,43
   42dac:	d8802305 	stb	r2,140(sp)
   42db0:	00800244 	movi	r2,9
   42db4:	15807016 	blt	r2,r22,42f78 <___vfprintf_internal_r+0x1fcc>
   42db8:	00800c04 	movi	r2,48
   42dbc:	b5800c04 	addi	r22,r22,48
   42dc0:	d8802345 	stb	r2,141(sp)
   42dc4:	dd802385 	stb	r22,142(sp)
   42dc8:	d88023c4 	addi	r2,sp,143
   42dcc:	df0022c4 	addi	fp,sp,139
   42dd0:	d8c03317 	ldw	r3,204(sp)
   42dd4:	1739c83a 	sub	fp,r2,fp
   42dd8:	d9003317 	ldw	r4,204(sp)
   42ddc:	e0c7883a 	add	r3,fp,r3
   42de0:	df003a15 	stw	fp,232(sp)
   42de4:	d8c02e15 	stw	r3,184(sp)
   42de8:	00800044 	movi	r2,1
   42dec:	1100b30e 	bge	r2,r4,430bc <___vfprintf_internal_r+0x2110>
   42df0:	d8c02e17 	ldw	r3,184(sp)
   42df4:	18c00044 	addi	r3,r3,1
   42df8:	d8c02e15 	stw	r3,184(sp)
   42dfc:	1805883a 	mov	r2,r3
   42e00:	1800ac16 	blt	r3,zero,430b4 <___vfprintf_internal_r+0x2108>
   42e04:	d8003215 	stw	zero,200(sp)
   42e08:	003e5d06 	br	42780 <__alt_data_end+0xfffdb680>
   42e0c:	d9002c17 	ldw	r4,176(sp)
   42e10:	d9801e04 	addi	r6,sp,120
   42e14:	b80b883a 	mov	r5,r23
   42e18:	00485a80 	call	485a8 <__sprint_r>
   42e1c:	1039651e 	bne	r2,zero,413b4 <__alt_data_end+0xfffda2b4>
   42e20:	dc402617 	ldw	r17,152(sp)
   42e24:	d8c02017 	ldw	r3,128(sp)
   42e28:	d8801f17 	ldw	r2,124(sp)
   42e2c:	da000404 	addi	r8,sp,16
   42e30:	003ed606 	br	4298c <__alt_data_end+0xfffdb88c>
   42e34:	582b883a 	mov	r21,r11
   42e38:	d8002915 	stw	zero,164(sp)
   42e3c:	0038bd06 	br	41134 <__alt_data_end+0xfffda034>
   42e40:	d8802917 	ldw	r2,164(sp)
   42e44:	103e071e 	bne	r2,zero,42664 <__alt_data_end+0xfffdb564>
   42e48:	dc002915 	stw	r16,164(sp)
   42e4c:	003e0506 	br	42664 <__alt_data_end+0xfffdb564>
   42e50:	d9002917 	ldw	r4,164(sp)
   42e54:	20c00044 	addi	r3,r4,1
   42e58:	003e0f06 	br	42698 <__alt_data_end+0xfffdb598>
   42e5c:	01400184 	movi	r5,6
   42e60:	d9402915 	stw	r5,164(sp)
   42e64:	003dff06 	br	42664 <__alt_data_end+0xfffdb564>
   42e68:	d8802104 	addi	r2,sp,132
   42e6c:	d8800315 	stw	r2,12(sp)
   42e70:	d8802504 	addi	r2,sp,148
   42e74:	d8800215 	stw	r2,8(sp)
   42e78:	d8802604 	addi	r2,sp,152
   42e7c:	d8800115 	stw	r2,4(sp)
   42e80:	d8802917 	ldw	r2,164(sp)
   42e84:	d9403617 	ldw	r5,216(sp)
   42e88:	d9002c17 	ldw	r4,176(sp)
   42e8c:	d8800015 	stw	r2,0(sp)
   42e90:	01c000c4 	movi	r7,3
   42e94:	980d883a 	mov	r6,r19
   42e98:	da003d15 	stw	r8,244(sp)
   42e9c:	00435d00 	call	435d0 <_dtoa_r>
   42ea0:	d8c02917 	ldw	r3,164(sp)
   42ea4:	da003d17 	ldw	r8,244(sp)
   42ea8:	1021883a 	mov	r16,r2
   42eac:	10f9883a 	add	fp,r2,r3
   42eb0:	81000007 	ldb	r4,0(r16)
   42eb4:	00800c04 	movi	r2,48
   42eb8:	20805e26 	beq	r4,r2,43034 <___vfprintf_internal_r+0x2088>
   42ebc:	d8c02617 	ldw	r3,152(sp)
   42ec0:	e0f9883a 	add	fp,fp,r3
   42ec4:	003e0a06 	br	426f0 <__alt_data_end+0xfffdb5f0>
   42ec8:	00c00b44 	movi	r3,45
   42ecc:	24e0003c 	xorhi	r19,r4,32768
   42ed0:	d8c02a05 	stb	r3,168(sp)
   42ed4:	003de906 	br	4267c <__alt_data_end+0xfffdb57c>
   42ed8:	d8c03217 	ldw	r3,200(sp)
   42edc:	00c07a0e 	bge	zero,r3,430c8 <___vfprintf_internal_r+0x211c>
   42ee0:	00800044 	movi	r2,1
   42ee4:	d9003317 	ldw	r4,204(sp)
   42ee8:	1105883a 	add	r2,r2,r4
   42eec:	d8802e15 	stw	r2,184(sp)
   42ef0:	10004e16 	blt	r2,zero,4302c <___vfprintf_internal_r+0x2080>
   42ef4:	044019c4 	movi	r17,103
   42ef8:	003e2106 	br	42780 <__alt_data_end+0xfffdb680>
   42efc:	d9002917 	ldw	r4,164(sp)
   42f00:	d8802104 	addi	r2,sp,132
   42f04:	d8800315 	stw	r2,12(sp)
   42f08:	d9000015 	stw	r4,0(sp)
   42f0c:	d8802504 	addi	r2,sp,148
   42f10:	d9403617 	ldw	r5,216(sp)
   42f14:	d9002c17 	ldw	r4,176(sp)
   42f18:	d8800215 	stw	r2,8(sp)
   42f1c:	d8802604 	addi	r2,sp,152
   42f20:	d8800115 	stw	r2,4(sp)
   42f24:	01c000c4 	movi	r7,3
   42f28:	980d883a 	mov	r6,r19
   42f2c:	da003d15 	stw	r8,244(sp)
   42f30:	00435d00 	call	435d0 <_dtoa_r>
   42f34:	d8c02917 	ldw	r3,164(sp)
   42f38:	da003d17 	ldw	r8,244(sp)
   42f3c:	1021883a 	mov	r16,r2
   42f40:	00801184 	movi	r2,70
   42f44:	80f9883a 	add	fp,r16,r3
   42f48:	88bfd926 	beq	r17,r2,42eb0 <__alt_data_end+0xfffdbdb0>
   42f4c:	003de806 	br	426f0 <__alt_data_end+0xfffdb5f0>
   42f50:	d9002917 	ldw	r4,164(sp)
   42f54:	00c04d0e 	bge	zero,r3,4308c <___vfprintf_internal_r+0x20e0>
   42f58:	2000441e 	bne	r4,zero,4306c <___vfprintf_internal_r+0x20c0>
   42f5c:	9480004c 	andi	r18,r18,1
   42f60:	9000421e 	bne	r18,zero,4306c <___vfprintf_internal_r+0x20c0>
   42f64:	1805883a 	mov	r2,r3
   42f68:	18007016 	blt	r3,zero,4312c <___vfprintf_internal_r+0x2180>
   42f6c:	d8c03217 	ldw	r3,200(sp)
   42f70:	d8c02e15 	stw	r3,184(sp)
   42f74:	003e0206 	br	42780 <__alt_data_end+0xfffdb680>
   42f78:	df0022c4 	addi	fp,sp,139
   42f7c:	dc002915 	stw	r16,164(sp)
   42f80:	4027883a 	mov	r19,r8
   42f84:	e021883a 	mov	r16,fp
   42f88:	b009883a 	mov	r4,r22
   42f8c:	01400284 	movi	r5,10
   42f90:	004af5c0 	call	4af5c <__modsi3>
   42f94:	10800c04 	addi	r2,r2,48
   42f98:	843fffc4 	addi	r16,r16,-1
   42f9c:	b009883a 	mov	r4,r22
   42fa0:	01400284 	movi	r5,10
   42fa4:	80800005 	stb	r2,0(r16)
   42fa8:	004aed80 	call	4aed8 <__divsi3>
   42fac:	102d883a 	mov	r22,r2
   42fb0:	00800244 	movi	r2,9
   42fb4:	15bff416 	blt	r2,r22,42f88 <__alt_data_end+0xfffdbe88>
   42fb8:	9811883a 	mov	r8,r19
   42fbc:	b0800c04 	addi	r2,r22,48
   42fc0:	8027883a 	mov	r19,r16
   42fc4:	997fffc4 	addi	r5,r19,-1
   42fc8:	98bfffc5 	stb	r2,-1(r19)
   42fcc:	dc002917 	ldw	r16,164(sp)
   42fd0:	2f006a2e 	bgeu	r5,fp,4317c <___vfprintf_internal_r+0x21d0>
   42fd4:	d9c02384 	addi	r7,sp,142
   42fd8:	3ccfc83a 	sub	r7,r7,r19
   42fdc:	d9002344 	addi	r4,sp,141
   42fe0:	e1cf883a 	add	r7,fp,r7
   42fe4:	00000106 	br	42fec <___vfprintf_internal_r+0x2040>
   42fe8:	28800003 	ldbu	r2,0(r5)
   42fec:	20800005 	stb	r2,0(r4)
   42ff0:	21000044 	addi	r4,r4,1
   42ff4:	29400044 	addi	r5,r5,1
   42ff8:	393ffb1e 	bne	r7,r4,42fe8 <__alt_data_end+0xfffdbee8>
   42ffc:	d8802304 	addi	r2,sp,140
   43000:	14c5c83a 	sub	r2,r2,r19
   43004:	d8c02344 	addi	r3,sp,141
   43008:	1885883a 	add	r2,r3,r2
   4300c:	003f7006 	br	42dd0 <__alt_data_end+0xfffdbcd0>
   43010:	0005883a 	mov	r2,zero
   43014:	003f0f06 	br	42c54 <__alt_data_end+0xfffdbb54>
   43018:	d8c03217 	ldw	r3,200(sp)
   4301c:	18c00044 	addi	r3,r3,1
   43020:	d8c02e15 	stw	r3,184(sp)
   43024:	1805883a 	mov	r2,r3
   43028:	183fb20e 	bge	r3,zero,42ef4 <__alt_data_end+0xfffdbdf4>
   4302c:	0005883a 	mov	r2,zero
   43030:	003fb006 	br	42ef4 <__alt_data_end+0xfffdbdf4>
   43034:	d9003617 	ldw	r4,216(sp)
   43038:	000d883a 	mov	r6,zero
   4303c:	000f883a 	mov	r7,zero
   43040:	980b883a 	mov	r5,r19
   43044:	d8c03c15 	stw	r3,240(sp)
   43048:	da003d15 	stw	r8,244(sp)
   4304c:	004c2200 	call	4c220 <__eqdf2>
   43050:	d8c03c17 	ldw	r3,240(sp)
   43054:	da003d17 	ldw	r8,244(sp)
   43058:	103f9826 	beq	r2,zero,42ebc <__alt_data_end+0xfffdbdbc>
   4305c:	00800044 	movi	r2,1
   43060:	10c7c83a 	sub	r3,r2,r3
   43064:	d8c02615 	stw	r3,152(sp)
   43068:	003f9506 	br	42ec0 <__alt_data_end+0xfffdbdc0>
   4306c:	d9002917 	ldw	r4,164(sp)
   43070:	d8c03217 	ldw	r3,200(sp)
   43074:	20800044 	addi	r2,r4,1
   43078:	1885883a 	add	r2,r3,r2
   4307c:	d8802e15 	stw	r2,184(sp)
   43080:	103dbf0e 	bge	r2,zero,42780 <__alt_data_end+0xfffdb680>
   43084:	0005883a 	mov	r2,zero
   43088:	003dbd06 	br	42780 <__alt_data_end+0xfffdb680>
   4308c:	2000211e 	bne	r4,zero,43114 <___vfprintf_internal_r+0x2168>
   43090:	9480004c 	andi	r18,r18,1
   43094:	90001f1e 	bne	r18,zero,43114 <___vfprintf_internal_r+0x2168>
   43098:	00800044 	movi	r2,1
   4309c:	d8802e15 	stw	r2,184(sp)
   430a0:	003db706 	br	42780 <__alt_data_end+0xfffdb680>
   430a4:	00800b44 	movi	r2,45
   430a8:	05adc83a 	sub	r22,zero,r22
   430ac:	d8802305 	stb	r2,140(sp)
   430b0:	003f3f06 	br	42db0 <__alt_data_end+0xfffdbcb0>
   430b4:	0005883a 	mov	r2,zero
   430b8:	003f5206 	br	42e04 <__alt_data_end+0xfffdbd04>
   430bc:	90a4703a 	and	r18,r18,r2
   430c0:	903f4e26 	beq	r18,zero,42dfc <__alt_data_end+0xfffdbcfc>
   430c4:	003f4a06 	br	42df0 <__alt_data_end+0xfffdbcf0>
   430c8:	00800084 	movi	r2,2
   430cc:	10c5c83a 	sub	r2,r2,r3
   430d0:	003f8406 	br	42ee4 <__alt_data_end+0xfffdbde4>
   430d4:	d8802d17 	ldw	r2,180(sp)
   430d8:	d9002d17 	ldw	r4,180(sp)
   430dc:	ac400043 	ldbu	r17,1(r21)
   430e0:	10800017 	ldw	r2,0(r2)
   430e4:	582b883a 	mov	r21,r11
   430e8:	d8802915 	stw	r2,164(sp)
   430ec:	20800104 	addi	r2,r4,4
   430f0:	d9002917 	ldw	r4,164(sp)
   430f4:	d8802d15 	stw	r2,180(sp)
   430f8:	203e7a0e 	bge	r4,zero,42ae4 <__alt_data_end+0xfffdb9e4>
   430fc:	8c403fcc 	andi	r17,r17,255
   43100:	00bfffc4 	movi	r2,-1
   43104:	8c40201c 	xori	r17,r17,128
   43108:	d8802915 	stw	r2,164(sp)
   4310c:	8c7fe004 	addi	r17,r17,-128
   43110:	00380706 	br	41130 <__alt_data_end+0xfffda030>
   43114:	d8c02917 	ldw	r3,164(sp)
   43118:	18c00084 	addi	r3,r3,2
   4311c:	d8c02e15 	stw	r3,184(sp)
   43120:	1805883a 	mov	r2,r3
   43124:	183d960e 	bge	r3,zero,42780 <__alt_data_end+0xfffdb680>
   43128:	003fd606 	br	43084 <__alt_data_end+0xfffdbf84>
   4312c:	0005883a 	mov	r2,zero
   43130:	003f8e06 	br	42f6c <__alt_data_end+0xfffdbe6c>
   43134:	9080004c 	andi	r2,r18,1
   43138:	103f811e 	bne	r2,zero,42f40 <__alt_data_end+0xfffdbe40>
   4313c:	d8802117 	ldw	r2,132(sp)
   43140:	1405c83a 	sub	r2,r2,r16
   43144:	d8803315 	stw	r2,204(sp)
   43148:	b47ef326 	beq	r22,r17,42d18 <__alt_data_end+0xfffdbc18>
   4314c:	dd802617 	ldw	r22,152(sp)
   43150:	003f1106 	br	42d98 <__alt_data_end+0xfffdbc98>
   43154:	d9c02785 	stb	r7,158(sp)
   43158:	00390406 	br	4156c <__alt_data_end+0xfffda46c>
   4315c:	d9c02785 	stb	r7,158(sp)
   43160:	0038d306 	br	414b0 <__alt_data_end+0xfffda3b0>
   43164:	d9c02785 	stb	r7,158(sp)
   43168:	003a6106 	br	41af0 <__alt_data_end+0xfffda9f0>
   4316c:	d9c02785 	stb	r7,158(sp)
   43170:	003af806 	br	41d54 <__alt_data_end+0xfffdac54>
   43174:	0005883a 	mov	r2,zero
   43178:	003d7e06 	br	42774 <__alt_data_end+0xfffdb674>
   4317c:	d8802344 	addi	r2,sp,141
   43180:	003f1306 	br	42dd0 <__alt_data_end+0xfffdbcd0>
   43184:	d9c02785 	stb	r7,158(sp)
   43188:	00392306 	br	41618 <__alt_data_end+0xfffda518>
   4318c:	d9c02785 	stb	r7,158(sp)
   43190:	003aa906 	br	41c38 <__alt_data_end+0xfffdab38>
   43194:	d9c02785 	stb	r7,158(sp)
   43198:	003a3d06 	br	41a90 <__alt_data_end+0xfffda990>
   4319c:	d9c02785 	stb	r7,158(sp)
   431a0:	003aca06 	br	41ccc <__alt_data_end+0xfffdabcc>

000431a4 <__vfprintf_internal>:
   431a4:	00800174 	movhi	r2,5
   431a8:	10852804 	addi	r2,r2,5280
   431ac:	300f883a 	mov	r7,r6
   431b0:	280d883a 	mov	r6,r5
   431b4:	200b883a 	mov	r5,r4
   431b8:	11000017 	ldw	r4,0(r2)
   431bc:	0040fac1 	jmpi	40fac <___vfprintf_internal_r>

000431c0 <__sbprintf>:
   431c0:	2880030b 	ldhu	r2,12(r5)
   431c4:	2ac01917 	ldw	r11,100(r5)
   431c8:	2a80038b 	ldhu	r10,14(r5)
   431cc:	2a400717 	ldw	r9,28(r5)
   431d0:	2a000917 	ldw	r8,36(r5)
   431d4:	defee204 	addi	sp,sp,-1144
   431d8:	00c10004 	movi	r3,1024
   431dc:	dc011a15 	stw	r16,1128(sp)
   431e0:	10bfff4c 	andi	r2,r2,65533
   431e4:	2821883a 	mov	r16,r5
   431e8:	d8cb883a 	add	r5,sp,r3
   431ec:	dc811c15 	stw	r18,1136(sp)
   431f0:	dc411b15 	stw	r17,1132(sp)
   431f4:	dfc11d15 	stw	ra,1140(sp)
   431f8:	2025883a 	mov	r18,r4
   431fc:	d881030d 	sth	r2,1036(sp)
   43200:	dac11915 	stw	r11,1124(sp)
   43204:	da81038d 	sth	r10,1038(sp)
   43208:	da410715 	stw	r9,1052(sp)
   4320c:	da010915 	stw	r8,1060(sp)
   43210:	dec10015 	stw	sp,1024(sp)
   43214:	dec10415 	stw	sp,1040(sp)
   43218:	d8c10215 	stw	r3,1032(sp)
   4321c:	d8c10515 	stw	r3,1044(sp)
   43220:	d8010615 	stw	zero,1048(sp)
   43224:	0040fac0 	call	40fac <___vfprintf_internal_r>
   43228:	1023883a 	mov	r17,r2
   4322c:	10000416 	blt	r2,zero,43240 <__sbprintf+0x80>
   43230:	d9410004 	addi	r5,sp,1024
   43234:	9009883a 	mov	r4,r18
   43238:	0044e740 	call	44e74 <_fflush_r>
   4323c:	10000d1e 	bne	r2,zero,43274 <__sbprintf+0xb4>
   43240:	d881030b 	ldhu	r2,1036(sp)
   43244:	1080100c 	andi	r2,r2,64
   43248:	10000326 	beq	r2,zero,43258 <__sbprintf+0x98>
   4324c:	8080030b 	ldhu	r2,12(r16)
   43250:	10801014 	ori	r2,r2,64
   43254:	8080030d 	sth	r2,12(r16)
   43258:	8805883a 	mov	r2,r17
   4325c:	dfc11d17 	ldw	ra,1140(sp)
   43260:	dc811c17 	ldw	r18,1136(sp)
   43264:	dc411b17 	ldw	r17,1132(sp)
   43268:	dc011a17 	ldw	r16,1128(sp)
   4326c:	dec11e04 	addi	sp,sp,1144
   43270:	f800283a 	ret
   43274:	047fffc4 	movi	r17,-1
   43278:	003ff106 	br	43240 <__alt_data_end+0xfffdc140>

0004327c <__swsetup_r>:
   4327c:	00800174 	movhi	r2,5
   43280:	defffd04 	addi	sp,sp,-12
   43284:	10852804 	addi	r2,r2,5280
   43288:	dc400115 	stw	r17,4(sp)
   4328c:	2023883a 	mov	r17,r4
   43290:	11000017 	ldw	r4,0(r2)
   43294:	dc000015 	stw	r16,0(sp)
   43298:	dfc00215 	stw	ra,8(sp)
   4329c:	2821883a 	mov	r16,r5
   432a0:	20000226 	beq	r4,zero,432ac <__swsetup_r+0x30>
   432a4:	20800e17 	ldw	r2,56(r4)
   432a8:	10003126 	beq	r2,zero,43370 <__swsetup_r+0xf4>
   432ac:	8080030b 	ldhu	r2,12(r16)
   432b0:	10c0020c 	andi	r3,r2,8
   432b4:	1009883a 	mov	r4,r2
   432b8:	18000f26 	beq	r3,zero,432f8 <__swsetup_r+0x7c>
   432bc:	80c00417 	ldw	r3,16(r16)
   432c0:	18001526 	beq	r3,zero,43318 <__swsetup_r+0x9c>
   432c4:	1100004c 	andi	r4,r2,1
   432c8:	20001c1e 	bne	r4,zero,4333c <__swsetup_r+0xc0>
   432cc:	1080008c 	andi	r2,r2,2
   432d0:	1000291e 	bne	r2,zero,43378 <__swsetup_r+0xfc>
   432d4:	80800517 	ldw	r2,20(r16)
   432d8:	80800215 	stw	r2,8(r16)
   432dc:	18001c26 	beq	r3,zero,43350 <__swsetup_r+0xd4>
   432e0:	0005883a 	mov	r2,zero
   432e4:	dfc00217 	ldw	ra,8(sp)
   432e8:	dc400117 	ldw	r17,4(sp)
   432ec:	dc000017 	ldw	r16,0(sp)
   432f0:	dec00304 	addi	sp,sp,12
   432f4:	f800283a 	ret
   432f8:	2080040c 	andi	r2,r4,16
   432fc:	10002e26 	beq	r2,zero,433b8 <__swsetup_r+0x13c>
   43300:	2080010c 	andi	r2,r4,4
   43304:	10001e1e 	bne	r2,zero,43380 <__swsetup_r+0x104>
   43308:	80c00417 	ldw	r3,16(r16)
   4330c:	20800214 	ori	r2,r4,8
   43310:	8080030d 	sth	r2,12(r16)
   43314:	183feb1e 	bne	r3,zero,432c4 <__alt_data_end+0xfffdc1c4>
   43318:	1100a00c 	andi	r4,r2,640
   4331c:	01408004 	movi	r5,512
   43320:	217fe826 	beq	r4,r5,432c4 <__alt_data_end+0xfffdc1c4>
   43324:	800b883a 	mov	r5,r16
   43328:	8809883a 	mov	r4,r17
   4332c:	0045df40 	call	45df4 <__smakebuf_r>
   43330:	8080030b 	ldhu	r2,12(r16)
   43334:	80c00417 	ldw	r3,16(r16)
   43338:	003fe206 	br	432c4 <__alt_data_end+0xfffdc1c4>
   4333c:	80800517 	ldw	r2,20(r16)
   43340:	80000215 	stw	zero,8(r16)
   43344:	0085c83a 	sub	r2,zero,r2
   43348:	80800615 	stw	r2,24(r16)
   4334c:	183fe41e 	bne	r3,zero,432e0 <__alt_data_end+0xfffdc1e0>
   43350:	80c0030b 	ldhu	r3,12(r16)
   43354:	0005883a 	mov	r2,zero
   43358:	1900200c 	andi	r4,r3,128
   4335c:	203fe126 	beq	r4,zero,432e4 <__alt_data_end+0xfffdc1e4>
   43360:	18c01014 	ori	r3,r3,64
   43364:	80c0030d 	sth	r3,12(r16)
   43368:	00bfffc4 	movi	r2,-1
   4336c:	003fdd06 	br	432e4 <__alt_data_end+0xfffdc1e4>
   43370:	00452500 	call	45250 <__sinit>
   43374:	003fcd06 	br	432ac <__alt_data_end+0xfffdc1ac>
   43378:	0005883a 	mov	r2,zero
   4337c:	003fd606 	br	432d8 <__alt_data_end+0xfffdc1d8>
   43380:	81400c17 	ldw	r5,48(r16)
   43384:	28000626 	beq	r5,zero,433a0 <__swsetup_r+0x124>
   43388:	80801004 	addi	r2,r16,64
   4338c:	28800326 	beq	r5,r2,4339c <__swsetup_r+0x120>
   43390:	8809883a 	mov	r4,r17
   43394:	00453c40 	call	453c4 <_free_r>
   43398:	8100030b 	ldhu	r4,12(r16)
   4339c:	80000c15 	stw	zero,48(r16)
   433a0:	80c00417 	ldw	r3,16(r16)
   433a4:	00bff6c4 	movi	r2,-37
   433a8:	1108703a 	and	r4,r2,r4
   433ac:	80000115 	stw	zero,4(r16)
   433b0:	80c00015 	stw	r3,0(r16)
   433b4:	003fd506 	br	4330c <__alt_data_end+0xfffdc20c>
   433b8:	00800244 	movi	r2,9
   433bc:	88800015 	stw	r2,0(r17)
   433c0:	20801014 	ori	r2,r4,64
   433c4:	8080030d 	sth	r2,12(r16)
   433c8:	00bfffc4 	movi	r2,-1
   433cc:	003fc506 	br	432e4 <__alt_data_end+0xfffdc1e4>

000433d0 <quorem>:
   433d0:	defff704 	addi	sp,sp,-36
   433d4:	dc800215 	stw	r18,8(sp)
   433d8:	20800417 	ldw	r2,16(r4)
   433dc:	2c800417 	ldw	r18,16(r5)
   433e0:	dfc00815 	stw	ra,32(sp)
   433e4:	ddc00715 	stw	r23,28(sp)
   433e8:	dd800615 	stw	r22,24(sp)
   433ec:	dd400515 	stw	r21,20(sp)
   433f0:	dd000415 	stw	r20,16(sp)
   433f4:	dcc00315 	stw	r19,12(sp)
   433f8:	dc400115 	stw	r17,4(sp)
   433fc:	dc000015 	stw	r16,0(sp)
   43400:	14807116 	blt	r2,r18,435c8 <quorem+0x1f8>
   43404:	94bfffc4 	addi	r18,r18,-1
   43408:	94ad883a 	add	r22,r18,r18
   4340c:	b5ad883a 	add	r22,r22,r22
   43410:	2c400504 	addi	r17,r5,20
   43414:	8da9883a 	add	r20,r17,r22
   43418:	25400504 	addi	r21,r4,20
   4341c:	282f883a 	mov	r23,r5
   43420:	adad883a 	add	r22,r21,r22
   43424:	a1400017 	ldw	r5,0(r20)
   43428:	2021883a 	mov	r16,r4
   4342c:	b1000017 	ldw	r4,0(r22)
   43430:	29400044 	addi	r5,r5,1
   43434:	004afd00 	call	4afd0 <__udivsi3>
   43438:	1027883a 	mov	r19,r2
   4343c:	10002c26 	beq	r2,zero,434f0 <quorem+0x120>
   43440:	a813883a 	mov	r9,r21
   43444:	880b883a 	mov	r5,r17
   43448:	0009883a 	mov	r4,zero
   4344c:	000d883a 	mov	r6,zero
   43450:	2a000017 	ldw	r8,0(r5)
   43454:	49c00017 	ldw	r7,0(r9)
   43458:	29400104 	addi	r5,r5,4
   4345c:	40bfffcc 	andi	r2,r8,65535
   43460:	14c5383a 	mul	r2,r2,r19
   43464:	4010d43a 	srli	r8,r8,16
   43468:	38ffffcc 	andi	r3,r7,65535
   4346c:	1105883a 	add	r2,r2,r4
   43470:	1008d43a 	srli	r4,r2,16
   43474:	44d1383a 	mul	r8,r8,r19
   43478:	198d883a 	add	r6,r3,r6
   4347c:	10ffffcc 	andi	r3,r2,65535
   43480:	30c7c83a 	sub	r3,r6,r3
   43484:	380ed43a 	srli	r7,r7,16
   43488:	4105883a 	add	r2,r8,r4
   4348c:	180dd43a 	srai	r6,r3,16
   43490:	113fffcc 	andi	r4,r2,65535
   43494:	390fc83a 	sub	r7,r7,r4
   43498:	398d883a 	add	r6,r7,r6
   4349c:	300e943a 	slli	r7,r6,16
   434a0:	18ffffcc 	andi	r3,r3,65535
   434a4:	1008d43a 	srli	r4,r2,16
   434a8:	38ceb03a 	or	r7,r7,r3
   434ac:	49c00015 	stw	r7,0(r9)
   434b0:	300dd43a 	srai	r6,r6,16
   434b4:	4a400104 	addi	r9,r9,4
   434b8:	a17fe52e 	bgeu	r20,r5,43450 <__alt_data_end+0xfffdc350>
   434bc:	b0800017 	ldw	r2,0(r22)
   434c0:	10000b1e 	bne	r2,zero,434f0 <quorem+0x120>
   434c4:	b0bfff04 	addi	r2,r22,-4
   434c8:	a880082e 	bgeu	r21,r2,434ec <quorem+0x11c>
   434cc:	b0ffff17 	ldw	r3,-4(r22)
   434d0:	18000326 	beq	r3,zero,434e0 <quorem+0x110>
   434d4:	00000506 	br	434ec <quorem+0x11c>
   434d8:	10c00017 	ldw	r3,0(r2)
   434dc:	1800031e 	bne	r3,zero,434ec <quorem+0x11c>
   434e0:	10bfff04 	addi	r2,r2,-4
   434e4:	94bfffc4 	addi	r18,r18,-1
   434e8:	a8bffb36 	bltu	r21,r2,434d8 <__alt_data_end+0xfffdc3d8>
   434ec:	84800415 	stw	r18,16(r16)
   434f0:	b80b883a 	mov	r5,r23
   434f4:	8009883a 	mov	r4,r16
   434f8:	00475340 	call	47534 <__mcmp>
   434fc:	10002616 	blt	r2,zero,43598 <quorem+0x1c8>
   43500:	9cc00044 	addi	r19,r19,1
   43504:	a805883a 	mov	r2,r21
   43508:	000b883a 	mov	r5,zero
   4350c:	11000017 	ldw	r4,0(r2)
   43510:	89800017 	ldw	r6,0(r17)
   43514:	10800104 	addi	r2,r2,4
   43518:	20ffffcc 	andi	r3,r4,65535
   4351c:	194b883a 	add	r5,r3,r5
   43520:	30ffffcc 	andi	r3,r6,65535
   43524:	28c7c83a 	sub	r3,r5,r3
   43528:	300cd43a 	srli	r6,r6,16
   4352c:	2008d43a 	srli	r4,r4,16
   43530:	180bd43a 	srai	r5,r3,16
   43534:	18ffffcc 	andi	r3,r3,65535
   43538:	2189c83a 	sub	r4,r4,r6
   4353c:	2149883a 	add	r4,r4,r5
   43540:	200c943a 	slli	r6,r4,16
   43544:	8c400104 	addi	r17,r17,4
   43548:	200bd43a 	srai	r5,r4,16
   4354c:	30c6b03a 	or	r3,r6,r3
   43550:	10ffff15 	stw	r3,-4(r2)
   43554:	a47fed2e 	bgeu	r20,r17,4350c <__alt_data_end+0xfffdc40c>
   43558:	9485883a 	add	r2,r18,r18
   4355c:	1085883a 	add	r2,r2,r2
   43560:	a887883a 	add	r3,r21,r2
   43564:	18800017 	ldw	r2,0(r3)
   43568:	10000b1e 	bne	r2,zero,43598 <quorem+0x1c8>
   4356c:	18bfff04 	addi	r2,r3,-4
   43570:	a880082e 	bgeu	r21,r2,43594 <quorem+0x1c4>
   43574:	18ffff17 	ldw	r3,-4(r3)
   43578:	18000326 	beq	r3,zero,43588 <quorem+0x1b8>
   4357c:	00000506 	br	43594 <quorem+0x1c4>
   43580:	10c00017 	ldw	r3,0(r2)
   43584:	1800031e 	bne	r3,zero,43594 <quorem+0x1c4>
   43588:	10bfff04 	addi	r2,r2,-4
   4358c:	94bfffc4 	addi	r18,r18,-1
   43590:	a8bffb36 	bltu	r21,r2,43580 <__alt_data_end+0xfffdc480>
   43594:	84800415 	stw	r18,16(r16)
   43598:	9805883a 	mov	r2,r19
   4359c:	dfc00817 	ldw	ra,32(sp)
   435a0:	ddc00717 	ldw	r23,28(sp)
   435a4:	dd800617 	ldw	r22,24(sp)
   435a8:	dd400517 	ldw	r21,20(sp)
   435ac:	dd000417 	ldw	r20,16(sp)
   435b0:	dcc00317 	ldw	r19,12(sp)
   435b4:	dc800217 	ldw	r18,8(sp)
   435b8:	dc400117 	ldw	r17,4(sp)
   435bc:	dc000017 	ldw	r16,0(sp)
   435c0:	dec00904 	addi	sp,sp,36
   435c4:	f800283a 	ret
   435c8:	0005883a 	mov	r2,zero
   435cc:	003ff306 	br	4359c <__alt_data_end+0xfffdc49c>

000435d0 <_dtoa_r>:
   435d0:	20801017 	ldw	r2,64(r4)
   435d4:	deffde04 	addi	sp,sp,-136
   435d8:	df002015 	stw	fp,128(sp)
   435dc:	dcc01b15 	stw	r19,108(sp)
   435e0:	dc801a15 	stw	r18,104(sp)
   435e4:	dc401915 	stw	r17,100(sp)
   435e8:	dc001815 	stw	r16,96(sp)
   435ec:	dfc02115 	stw	ra,132(sp)
   435f0:	ddc01f15 	stw	r23,124(sp)
   435f4:	dd801e15 	stw	r22,120(sp)
   435f8:	dd401d15 	stw	r21,116(sp)
   435fc:	dd001c15 	stw	r20,112(sp)
   43600:	d9c00315 	stw	r7,12(sp)
   43604:	2039883a 	mov	fp,r4
   43608:	3023883a 	mov	r17,r6
   4360c:	2825883a 	mov	r18,r5
   43610:	dc002417 	ldw	r16,144(sp)
   43614:	3027883a 	mov	r19,r6
   43618:	10000826 	beq	r2,zero,4363c <_dtoa_r+0x6c>
   4361c:	21801117 	ldw	r6,68(r4)
   43620:	00c00044 	movi	r3,1
   43624:	100b883a 	mov	r5,r2
   43628:	1986983a 	sll	r3,r3,r6
   4362c:	11800115 	stw	r6,4(r2)
   43630:	10c00215 	stw	r3,8(r2)
   43634:	0046d140 	call	46d14 <_Bfree>
   43638:	e0001015 	stw	zero,64(fp)
   4363c:	88002e16 	blt	r17,zero,436f8 <_dtoa_r+0x128>
   43640:	80000015 	stw	zero,0(r16)
   43644:	889ffc2c 	andhi	r2,r17,32752
   43648:	00dffc34 	movhi	r3,32752
   4364c:	10c01c26 	beq	r2,r3,436c0 <_dtoa_r+0xf0>
   43650:	000d883a 	mov	r6,zero
   43654:	000f883a 	mov	r7,zero
   43658:	9009883a 	mov	r4,r18
   4365c:	980b883a 	mov	r5,r19
   43660:	004c2200 	call	4c220 <__eqdf2>
   43664:	10002b1e 	bne	r2,zero,43714 <_dtoa_r+0x144>
   43668:	d9c02317 	ldw	r7,140(sp)
   4366c:	00800044 	movi	r2,1
   43670:	38800015 	stw	r2,0(r7)
   43674:	d8802517 	ldw	r2,148(sp)
   43678:	10019e26 	beq	r2,zero,43cf4 <_dtoa_r+0x724>
   4367c:	d8c02517 	ldw	r3,148(sp)
   43680:	00800174 	movhi	r2,5
   43684:	10be0f44 	addi	r2,r2,-1987
   43688:	18800015 	stw	r2,0(r3)
   4368c:	10bfffc4 	addi	r2,r2,-1
   43690:	dfc02117 	ldw	ra,132(sp)
   43694:	df002017 	ldw	fp,128(sp)
   43698:	ddc01f17 	ldw	r23,124(sp)
   4369c:	dd801e17 	ldw	r22,120(sp)
   436a0:	dd401d17 	ldw	r21,116(sp)
   436a4:	dd001c17 	ldw	r20,112(sp)
   436a8:	dcc01b17 	ldw	r19,108(sp)
   436ac:	dc801a17 	ldw	r18,104(sp)
   436b0:	dc401917 	ldw	r17,100(sp)
   436b4:	dc001817 	ldw	r16,96(sp)
   436b8:	dec02204 	addi	sp,sp,136
   436bc:	f800283a 	ret
   436c0:	d8c02317 	ldw	r3,140(sp)
   436c4:	0089c3c4 	movi	r2,9999
   436c8:	18800015 	stw	r2,0(r3)
   436cc:	90017726 	beq	r18,zero,43cac <_dtoa_r+0x6dc>
   436d0:	00800174 	movhi	r2,5
   436d4:	10be1b04 	addi	r2,r2,-1940
   436d8:	d9002517 	ldw	r4,148(sp)
   436dc:	203fec26 	beq	r4,zero,43690 <__alt_data_end+0xfffdc590>
   436e0:	10c000c7 	ldb	r3,3(r2)
   436e4:	1801781e 	bne	r3,zero,43cc8 <_dtoa_r+0x6f8>
   436e8:	10c000c4 	addi	r3,r2,3
   436ec:	d9802517 	ldw	r6,148(sp)
   436f0:	30c00015 	stw	r3,0(r6)
   436f4:	003fe606 	br	43690 <__alt_data_end+0xfffdc590>
   436f8:	04e00034 	movhi	r19,32768
   436fc:	9cffffc4 	addi	r19,r19,-1
   43700:	00800044 	movi	r2,1
   43704:	8ce6703a 	and	r19,r17,r19
   43708:	80800015 	stw	r2,0(r16)
   4370c:	9823883a 	mov	r17,r19
   43710:	003fcc06 	br	43644 <__alt_data_end+0xfffdc544>
   43714:	d8800204 	addi	r2,sp,8
   43718:	d8800015 	stw	r2,0(sp)
   4371c:	d9c00104 	addi	r7,sp,4
   43720:	900b883a 	mov	r5,r18
   43724:	980d883a 	mov	r6,r19
   43728:	e009883a 	mov	r4,fp
   4372c:	8820d53a 	srli	r16,r17,20
   43730:	00479000 	call	47900 <__d2b>
   43734:	d8800915 	stw	r2,36(sp)
   43738:	8001651e 	bne	r16,zero,43cd0 <_dtoa_r+0x700>
   4373c:	dd800217 	ldw	r22,8(sp)
   43740:	dc000117 	ldw	r16,4(sp)
   43744:	00800804 	movi	r2,32
   43748:	b421883a 	add	r16,r22,r16
   4374c:	80c10c84 	addi	r3,r16,1074
   43750:	10c2d10e 	bge	r2,r3,44298 <_dtoa_r+0xcc8>
   43754:	00801004 	movi	r2,64
   43758:	81010484 	addi	r4,r16,1042
   4375c:	10c7c83a 	sub	r3,r2,r3
   43760:	9108d83a 	srl	r4,r18,r4
   43764:	88e2983a 	sll	r17,r17,r3
   43768:	2448b03a 	or	r4,r4,r17
   4376c:	004cdf40 	call	4cdf4 <__floatunsidf>
   43770:	017f8434 	movhi	r5,65040
   43774:	01800044 	movi	r6,1
   43778:	1009883a 	mov	r4,r2
   4377c:	194b883a 	add	r5,r3,r5
   43780:	843fffc4 	addi	r16,r16,-1
   43784:	d9801115 	stw	r6,68(sp)
   43788:	000d883a 	mov	r6,zero
   4378c:	01cffe34 	movhi	r7,16376
   43790:	004c4780 	call	4c478 <__subdf3>
   43794:	0198dbf4 	movhi	r6,25455
   43798:	01cff4f4 	movhi	r7,16339
   4379c:	3190d844 	addi	r6,r6,17249
   437a0:	39e1e9c4 	addi	r7,r7,-30809
   437a4:	1009883a 	mov	r4,r2
   437a8:	180b883a 	mov	r5,r3
   437ac:	00402c40 	call	402c4 <__muldf3>
   437b0:	01a2d874 	movhi	r6,35681
   437b4:	01cff1f4 	movhi	r7,16327
   437b8:	31b22cc4 	addi	r6,r6,-14157
   437bc:	39e28a04 	addi	r7,r7,-30168
   437c0:	180b883a 	mov	r5,r3
   437c4:	1009883a 	mov	r4,r2
   437c8:	004b08c0 	call	4b08c <__adddf3>
   437cc:	8009883a 	mov	r4,r16
   437d0:	1029883a 	mov	r20,r2
   437d4:	1823883a 	mov	r17,r3
   437d8:	00409dc0 	call	409dc <__floatsidf>
   437dc:	019427f4 	movhi	r6,20639
   437e0:	01cff4f4 	movhi	r7,16339
   437e4:	319e7ec4 	addi	r6,r6,31227
   437e8:	39d104c4 	addi	r7,r7,17427
   437ec:	1009883a 	mov	r4,r2
   437f0:	180b883a 	mov	r5,r3
   437f4:	00402c40 	call	402c4 <__muldf3>
   437f8:	100d883a 	mov	r6,r2
   437fc:	180f883a 	mov	r7,r3
   43800:	a009883a 	mov	r4,r20
   43804:	880b883a 	mov	r5,r17
   43808:	004b08c0 	call	4b08c <__adddf3>
   4380c:	1009883a 	mov	r4,r2
   43810:	180b883a 	mov	r5,r3
   43814:	1029883a 	mov	r20,r2
   43818:	1823883a 	mov	r17,r3
   4381c:	004cd740 	call	4cd74 <__fixdfsi>
   43820:	000d883a 	mov	r6,zero
   43824:	000f883a 	mov	r7,zero
   43828:	a009883a 	mov	r4,r20
   4382c:	880b883a 	mov	r5,r17
   43830:	d8800515 	stw	r2,20(sp)
   43834:	004c3840 	call	4c384 <__ledf2>
   43838:	10028716 	blt	r2,zero,44258 <_dtoa_r+0xc88>
   4383c:	d8c00517 	ldw	r3,20(sp)
   43840:	00800584 	movi	r2,22
   43844:	10c27536 	bltu	r2,r3,4421c <_dtoa_r+0xc4c>
   43848:	180490fa 	slli	r2,r3,3
   4384c:	00c00174 	movhi	r3,5
   43850:	18fe3704 	addi	r3,r3,-1828
   43854:	1885883a 	add	r2,r3,r2
   43858:	11000017 	ldw	r4,0(r2)
   4385c:	11400117 	ldw	r5,4(r2)
   43860:	900d883a 	mov	r6,r18
   43864:	980f883a 	mov	r7,r19
   43868:	004c2a80 	call	4c2a8 <__gedf2>
   4386c:	00828d0e 	bge	zero,r2,442a4 <_dtoa_r+0xcd4>
   43870:	d9000517 	ldw	r4,20(sp)
   43874:	d8000e15 	stw	zero,56(sp)
   43878:	213fffc4 	addi	r4,r4,-1
   4387c:	d9000515 	stw	r4,20(sp)
   43880:	b42dc83a 	sub	r22,r22,r16
   43884:	b5bfffc4 	addi	r22,r22,-1
   43888:	b0026f16 	blt	r22,zero,44248 <_dtoa_r+0xc78>
   4388c:	d8000815 	stw	zero,32(sp)
   43890:	d9c00517 	ldw	r7,20(sp)
   43894:	38026416 	blt	r7,zero,44228 <_dtoa_r+0xc58>
   43898:	b1ed883a 	add	r22,r22,r7
   4389c:	d9c00d15 	stw	r7,52(sp)
   438a0:	d8000a15 	stw	zero,40(sp)
   438a4:	d9800317 	ldw	r6,12(sp)
   438a8:	00800244 	movi	r2,9
   438ac:	11811436 	bltu	r2,r6,43d00 <_dtoa_r+0x730>
   438b0:	00800144 	movi	r2,5
   438b4:	1184e10e 	bge	r2,r6,44c3c <_dtoa_r+0x166c>
   438b8:	31bfff04 	addi	r6,r6,-4
   438bc:	d9800315 	stw	r6,12(sp)
   438c0:	0023883a 	mov	r17,zero
   438c4:	d9800317 	ldw	r6,12(sp)
   438c8:	008000c4 	movi	r2,3
   438cc:	30836726 	beq	r6,r2,4466c <_dtoa_r+0x109c>
   438d0:	1183410e 	bge	r2,r6,445d8 <_dtoa_r+0x1008>
   438d4:	d9c00317 	ldw	r7,12(sp)
   438d8:	00800104 	movi	r2,4
   438dc:	38827c26 	beq	r7,r2,442d0 <_dtoa_r+0xd00>
   438e0:	00800144 	movi	r2,5
   438e4:	3884c41e 	bne	r7,r2,44bf8 <_dtoa_r+0x1628>
   438e8:	00800044 	movi	r2,1
   438ec:	d8800b15 	stw	r2,44(sp)
   438f0:	d8c00517 	ldw	r3,20(sp)
   438f4:	d9002217 	ldw	r4,136(sp)
   438f8:	1907883a 	add	r3,r3,r4
   438fc:	19800044 	addi	r6,r3,1
   43900:	d8c00c15 	stw	r3,48(sp)
   43904:	d9800615 	stw	r6,24(sp)
   43908:	0183a40e 	bge	zero,r6,4479c <_dtoa_r+0x11cc>
   4390c:	d9800617 	ldw	r6,24(sp)
   43910:	3021883a 	mov	r16,r6
   43914:	e0001115 	stw	zero,68(fp)
   43918:	008005c4 	movi	r2,23
   4391c:	1184c92e 	bgeu	r2,r6,44c44 <_dtoa_r+0x1674>
   43920:	00c00044 	movi	r3,1
   43924:	00800104 	movi	r2,4
   43928:	1085883a 	add	r2,r2,r2
   4392c:	11000504 	addi	r4,r2,20
   43930:	180b883a 	mov	r5,r3
   43934:	18c00044 	addi	r3,r3,1
   43938:	313ffb2e 	bgeu	r6,r4,43928 <__alt_data_end+0xfffdc828>
   4393c:	e1401115 	stw	r5,68(fp)
   43940:	e009883a 	mov	r4,fp
   43944:	0046c6c0 	call	46c6c <_Balloc>
   43948:	d8800715 	stw	r2,28(sp)
   4394c:	e0801015 	stw	r2,64(fp)
   43950:	00800384 	movi	r2,14
   43954:	1400f736 	bltu	r2,r16,43d34 <_dtoa_r+0x764>
   43958:	8800f626 	beq	r17,zero,43d34 <_dtoa_r+0x764>
   4395c:	d9c00517 	ldw	r7,20(sp)
   43960:	01c39a0e 	bge	zero,r7,447cc <_dtoa_r+0x11fc>
   43964:	388003cc 	andi	r2,r7,15
   43968:	100490fa 	slli	r2,r2,3
   4396c:	382bd13a 	srai	r21,r7,4
   43970:	00c00174 	movhi	r3,5
   43974:	18fe3704 	addi	r3,r3,-1828
   43978:	1885883a 	add	r2,r3,r2
   4397c:	a8c0040c 	andi	r3,r21,16
   43980:	12400017 	ldw	r9,0(r2)
   43984:	12000117 	ldw	r8,4(r2)
   43988:	18037926 	beq	r3,zero,44770 <_dtoa_r+0x11a0>
   4398c:	00800174 	movhi	r2,5
   43990:	10be2d04 	addi	r2,r2,-1868
   43994:	11800817 	ldw	r6,32(r2)
   43998:	11c00917 	ldw	r7,36(r2)
   4399c:	9009883a 	mov	r4,r18
   439a0:	980b883a 	mov	r5,r19
   439a4:	da001715 	stw	r8,92(sp)
   439a8:	da401615 	stw	r9,88(sp)
   439ac:	004b9380 	call	4b938 <__divdf3>
   439b0:	da001717 	ldw	r8,92(sp)
   439b4:	da401617 	ldw	r9,88(sp)
   439b8:	ad4003cc 	andi	r21,r21,15
   439bc:	040000c4 	movi	r16,3
   439c0:	1023883a 	mov	r17,r2
   439c4:	1829883a 	mov	r20,r3
   439c8:	a8001126 	beq	r21,zero,43a10 <_dtoa_r+0x440>
   439cc:	05c00174 	movhi	r23,5
   439d0:	bdfe2d04 	addi	r23,r23,-1868
   439d4:	4805883a 	mov	r2,r9
   439d8:	4007883a 	mov	r3,r8
   439dc:	a980004c 	andi	r6,r21,1
   439e0:	1009883a 	mov	r4,r2
   439e4:	a82bd07a 	srai	r21,r21,1
   439e8:	180b883a 	mov	r5,r3
   439ec:	30000426 	beq	r6,zero,43a00 <_dtoa_r+0x430>
   439f0:	b9800017 	ldw	r6,0(r23)
   439f4:	b9c00117 	ldw	r7,4(r23)
   439f8:	84000044 	addi	r16,r16,1
   439fc:	00402c40 	call	402c4 <__muldf3>
   43a00:	bdc00204 	addi	r23,r23,8
   43a04:	a83ff51e 	bne	r21,zero,439dc <__alt_data_end+0xfffdc8dc>
   43a08:	1013883a 	mov	r9,r2
   43a0c:	1811883a 	mov	r8,r3
   43a10:	480d883a 	mov	r6,r9
   43a14:	400f883a 	mov	r7,r8
   43a18:	8809883a 	mov	r4,r17
   43a1c:	a00b883a 	mov	r5,r20
   43a20:	004b9380 	call	4b938 <__divdf3>
   43a24:	d8800f15 	stw	r2,60(sp)
   43a28:	d8c01015 	stw	r3,64(sp)
   43a2c:	d8c00e17 	ldw	r3,56(sp)
   43a30:	18000626 	beq	r3,zero,43a4c <_dtoa_r+0x47c>
   43a34:	d9000f17 	ldw	r4,60(sp)
   43a38:	d9401017 	ldw	r5,64(sp)
   43a3c:	000d883a 	mov	r6,zero
   43a40:	01cffc34 	movhi	r7,16368
   43a44:	004c3840 	call	4c384 <__ledf2>
   43a48:	10040b16 	blt	r2,zero,44a78 <_dtoa_r+0x14a8>
   43a4c:	8009883a 	mov	r4,r16
   43a50:	00409dc0 	call	409dc <__floatsidf>
   43a54:	d9800f17 	ldw	r6,60(sp)
   43a58:	d9c01017 	ldw	r7,64(sp)
   43a5c:	1009883a 	mov	r4,r2
   43a60:	180b883a 	mov	r5,r3
   43a64:	00402c40 	call	402c4 <__muldf3>
   43a68:	000d883a 	mov	r6,zero
   43a6c:	01d00734 	movhi	r7,16412
   43a70:	1009883a 	mov	r4,r2
   43a74:	180b883a 	mov	r5,r3
   43a78:	004b08c0 	call	4b08c <__adddf3>
   43a7c:	1021883a 	mov	r16,r2
   43a80:	d8800617 	ldw	r2,24(sp)
   43a84:	047f3034 	movhi	r17,64704
   43a88:	1c63883a 	add	r17,r3,r17
   43a8c:	10031826 	beq	r2,zero,446f0 <_dtoa_r+0x1120>
   43a90:	d8c00517 	ldw	r3,20(sp)
   43a94:	db000617 	ldw	r12,24(sp)
   43a98:	d8c01315 	stw	r3,76(sp)
   43a9c:	d9000b17 	ldw	r4,44(sp)
   43aa0:	20038f26 	beq	r4,zero,448e0 <_dtoa_r+0x1310>
   43aa4:	60bfffc4 	addi	r2,r12,-1
   43aa8:	100490fa 	slli	r2,r2,3
   43aac:	00c00174 	movhi	r3,5
   43ab0:	18fe3704 	addi	r3,r3,-1828
   43ab4:	1885883a 	add	r2,r3,r2
   43ab8:	11800017 	ldw	r6,0(r2)
   43abc:	11c00117 	ldw	r7,4(r2)
   43ac0:	d8800717 	ldw	r2,28(sp)
   43ac4:	0009883a 	mov	r4,zero
   43ac8:	014ff834 	movhi	r5,16352
   43acc:	db001615 	stw	r12,88(sp)
   43ad0:	15c00044 	addi	r23,r2,1
   43ad4:	004b9380 	call	4b938 <__divdf3>
   43ad8:	800d883a 	mov	r6,r16
   43adc:	880f883a 	mov	r7,r17
   43ae0:	1009883a 	mov	r4,r2
   43ae4:	180b883a 	mov	r5,r3
   43ae8:	004c4780 	call	4c478 <__subdf3>
   43aec:	d9401017 	ldw	r5,64(sp)
   43af0:	d9000f17 	ldw	r4,60(sp)
   43af4:	102b883a 	mov	r21,r2
   43af8:	d8c01215 	stw	r3,72(sp)
   43afc:	004cd740 	call	4cd74 <__fixdfsi>
   43b00:	1009883a 	mov	r4,r2
   43b04:	1029883a 	mov	r20,r2
   43b08:	00409dc0 	call	409dc <__floatsidf>
   43b0c:	d9000f17 	ldw	r4,60(sp)
   43b10:	d9401017 	ldw	r5,64(sp)
   43b14:	100d883a 	mov	r6,r2
   43b18:	180f883a 	mov	r7,r3
   43b1c:	004c4780 	call	4c478 <__subdf3>
   43b20:	1823883a 	mov	r17,r3
   43b24:	d8c00717 	ldw	r3,28(sp)
   43b28:	d9401217 	ldw	r5,72(sp)
   43b2c:	a2000c04 	addi	r8,r20,48
   43b30:	1021883a 	mov	r16,r2
   43b34:	1a000005 	stb	r8,0(r3)
   43b38:	800d883a 	mov	r6,r16
   43b3c:	880f883a 	mov	r7,r17
   43b40:	a809883a 	mov	r4,r21
   43b44:	4029883a 	mov	r20,r8
   43b48:	004c2a80 	call	4c2a8 <__gedf2>
   43b4c:	00841d16 	blt	zero,r2,44bc4 <_dtoa_r+0x15f4>
   43b50:	800d883a 	mov	r6,r16
   43b54:	880f883a 	mov	r7,r17
   43b58:	0009883a 	mov	r4,zero
   43b5c:	014ffc34 	movhi	r5,16368
   43b60:	004c4780 	call	4c478 <__subdf3>
   43b64:	d9401217 	ldw	r5,72(sp)
   43b68:	100d883a 	mov	r6,r2
   43b6c:	180f883a 	mov	r7,r3
   43b70:	a809883a 	mov	r4,r21
   43b74:	004c2a80 	call	4c2a8 <__gedf2>
   43b78:	db001617 	ldw	r12,88(sp)
   43b7c:	00840e16 	blt	zero,r2,44bb8 <_dtoa_r+0x15e8>
   43b80:	00800044 	movi	r2,1
   43b84:	13006b0e 	bge	r2,r12,43d34 <_dtoa_r+0x764>
   43b88:	d9000717 	ldw	r4,28(sp)
   43b8c:	dd800f15 	stw	r22,60(sp)
   43b90:	dcc01015 	stw	r19,64(sp)
   43b94:	2319883a 	add	r12,r4,r12
   43b98:	dcc01217 	ldw	r19,72(sp)
   43b9c:	602d883a 	mov	r22,r12
   43ba0:	dc801215 	stw	r18,72(sp)
   43ba4:	b825883a 	mov	r18,r23
   43ba8:	00000906 	br	43bd0 <_dtoa_r+0x600>
   43bac:	004c4780 	call	4c478 <__subdf3>
   43bb0:	a80d883a 	mov	r6,r21
   43bb4:	980f883a 	mov	r7,r19
   43bb8:	1009883a 	mov	r4,r2
   43bbc:	180b883a 	mov	r5,r3
   43bc0:	004c3840 	call	4c384 <__ledf2>
   43bc4:	1003e816 	blt	r2,zero,44b68 <_dtoa_r+0x1598>
   43bc8:	b825883a 	mov	r18,r23
   43bcc:	bd83e926 	beq	r23,r22,44b74 <_dtoa_r+0x15a4>
   43bd0:	a809883a 	mov	r4,r21
   43bd4:	980b883a 	mov	r5,r19
   43bd8:	000d883a 	mov	r6,zero
   43bdc:	01d00934 	movhi	r7,16420
   43be0:	00402c40 	call	402c4 <__muldf3>
   43be4:	000d883a 	mov	r6,zero
   43be8:	01d00934 	movhi	r7,16420
   43bec:	8009883a 	mov	r4,r16
   43bf0:	880b883a 	mov	r5,r17
   43bf4:	102b883a 	mov	r21,r2
   43bf8:	1827883a 	mov	r19,r3
   43bfc:	00402c40 	call	402c4 <__muldf3>
   43c00:	180b883a 	mov	r5,r3
   43c04:	1009883a 	mov	r4,r2
   43c08:	1821883a 	mov	r16,r3
   43c0c:	1023883a 	mov	r17,r2
   43c10:	004cd740 	call	4cd74 <__fixdfsi>
   43c14:	1009883a 	mov	r4,r2
   43c18:	1029883a 	mov	r20,r2
   43c1c:	00409dc0 	call	409dc <__floatsidf>
   43c20:	8809883a 	mov	r4,r17
   43c24:	800b883a 	mov	r5,r16
   43c28:	100d883a 	mov	r6,r2
   43c2c:	180f883a 	mov	r7,r3
   43c30:	004c4780 	call	4c478 <__subdf3>
   43c34:	a5000c04 	addi	r20,r20,48
   43c38:	a80d883a 	mov	r6,r21
   43c3c:	980f883a 	mov	r7,r19
   43c40:	1009883a 	mov	r4,r2
   43c44:	180b883a 	mov	r5,r3
   43c48:	95000005 	stb	r20,0(r18)
   43c4c:	1021883a 	mov	r16,r2
   43c50:	1823883a 	mov	r17,r3
   43c54:	004c3840 	call	4c384 <__ledf2>
   43c58:	bdc00044 	addi	r23,r23,1
   43c5c:	800d883a 	mov	r6,r16
   43c60:	880f883a 	mov	r7,r17
   43c64:	0009883a 	mov	r4,zero
   43c68:	014ffc34 	movhi	r5,16368
   43c6c:	103fcf0e 	bge	r2,zero,43bac <__alt_data_end+0xfffdcaac>
   43c70:	d8c01317 	ldw	r3,76(sp)
   43c74:	d8c00515 	stw	r3,20(sp)
   43c78:	d9400917 	ldw	r5,36(sp)
   43c7c:	e009883a 	mov	r4,fp
   43c80:	0046d140 	call	46d14 <_Bfree>
   43c84:	d9000517 	ldw	r4,20(sp)
   43c88:	d9802317 	ldw	r6,140(sp)
   43c8c:	d9c02517 	ldw	r7,148(sp)
   43c90:	b8000005 	stb	zero,0(r23)
   43c94:	20800044 	addi	r2,r4,1
   43c98:	30800015 	stw	r2,0(r6)
   43c9c:	3802aa26 	beq	r7,zero,44748 <_dtoa_r+0x1178>
   43ca0:	3dc00015 	stw	r23,0(r7)
   43ca4:	d8800717 	ldw	r2,28(sp)
   43ca8:	003e7906 	br	43690 <__alt_data_end+0xfffdc590>
   43cac:	00800434 	movhi	r2,16
   43cb0:	10bfffc4 	addi	r2,r2,-1
   43cb4:	88a2703a 	and	r17,r17,r2
   43cb8:	883e851e 	bne	r17,zero,436d0 <__alt_data_end+0xfffdc5d0>
   43cbc:	00800174 	movhi	r2,5
   43cc0:	10be1804 	addi	r2,r2,-1952
   43cc4:	003e8406 	br	436d8 <__alt_data_end+0xfffdc5d8>
   43cc8:	10c00204 	addi	r3,r2,8
   43ccc:	003e8706 	br	436ec <__alt_data_end+0xfffdc5ec>
   43cd0:	01400434 	movhi	r5,16
   43cd4:	297fffc4 	addi	r5,r5,-1
   43cd8:	994a703a 	and	r5,r19,r5
   43cdc:	9009883a 	mov	r4,r18
   43ce0:	843f0044 	addi	r16,r16,-1023
   43ce4:	294ffc34 	orhi	r5,r5,16368
   43ce8:	dd800217 	ldw	r22,8(sp)
   43cec:	d8001115 	stw	zero,68(sp)
   43cf0:	003ea506 	br	43788 <__alt_data_end+0xfffdc688>
   43cf4:	00800174 	movhi	r2,5
   43cf8:	10be0f04 	addi	r2,r2,-1988
   43cfc:	003e6406 	br	43690 <__alt_data_end+0xfffdc590>
   43d00:	e0001115 	stw	zero,68(fp)
   43d04:	000b883a 	mov	r5,zero
   43d08:	e009883a 	mov	r4,fp
   43d0c:	0046c6c0 	call	46c6c <_Balloc>
   43d10:	01bfffc4 	movi	r6,-1
   43d14:	01c00044 	movi	r7,1
   43d18:	d8800715 	stw	r2,28(sp)
   43d1c:	d9800c15 	stw	r6,48(sp)
   43d20:	e0801015 	stw	r2,64(fp)
   43d24:	d8000315 	stw	zero,12(sp)
   43d28:	d9c00b15 	stw	r7,44(sp)
   43d2c:	d9800615 	stw	r6,24(sp)
   43d30:	d8002215 	stw	zero,136(sp)
   43d34:	d8800117 	ldw	r2,4(sp)
   43d38:	10008916 	blt	r2,zero,43f60 <_dtoa_r+0x990>
   43d3c:	d9000517 	ldw	r4,20(sp)
   43d40:	00c00384 	movi	r3,14
   43d44:	19008616 	blt	r3,r4,43f60 <_dtoa_r+0x990>
   43d48:	200490fa 	slli	r2,r4,3
   43d4c:	00c00174 	movhi	r3,5
   43d50:	d9802217 	ldw	r6,136(sp)
   43d54:	18fe3704 	addi	r3,r3,-1828
   43d58:	1885883a 	add	r2,r3,r2
   43d5c:	14000017 	ldw	r16,0(r2)
   43d60:	14400117 	ldw	r17,4(r2)
   43d64:	30016316 	blt	r6,zero,442f4 <_dtoa_r+0xd24>
   43d68:	800d883a 	mov	r6,r16
   43d6c:	880f883a 	mov	r7,r17
   43d70:	9009883a 	mov	r4,r18
   43d74:	980b883a 	mov	r5,r19
   43d78:	004b9380 	call	4b938 <__divdf3>
   43d7c:	180b883a 	mov	r5,r3
   43d80:	1009883a 	mov	r4,r2
   43d84:	004cd740 	call	4cd74 <__fixdfsi>
   43d88:	1009883a 	mov	r4,r2
   43d8c:	102b883a 	mov	r21,r2
   43d90:	00409dc0 	call	409dc <__floatsidf>
   43d94:	800d883a 	mov	r6,r16
   43d98:	880f883a 	mov	r7,r17
   43d9c:	1009883a 	mov	r4,r2
   43da0:	180b883a 	mov	r5,r3
   43da4:	00402c40 	call	402c4 <__muldf3>
   43da8:	100d883a 	mov	r6,r2
   43dac:	180f883a 	mov	r7,r3
   43db0:	9009883a 	mov	r4,r18
   43db4:	980b883a 	mov	r5,r19
   43db8:	004c4780 	call	4c478 <__subdf3>
   43dbc:	d9c00717 	ldw	r7,28(sp)
   43dc0:	1009883a 	mov	r4,r2
   43dc4:	a8800c04 	addi	r2,r21,48
   43dc8:	38800005 	stb	r2,0(r7)
   43dcc:	3dc00044 	addi	r23,r7,1
   43dd0:	d9c00617 	ldw	r7,24(sp)
   43dd4:	01800044 	movi	r6,1
   43dd8:	180b883a 	mov	r5,r3
   43ddc:	2005883a 	mov	r2,r4
   43de0:	39803826 	beq	r7,r6,43ec4 <_dtoa_r+0x8f4>
   43de4:	000d883a 	mov	r6,zero
   43de8:	01d00934 	movhi	r7,16420
   43dec:	00402c40 	call	402c4 <__muldf3>
   43df0:	000d883a 	mov	r6,zero
   43df4:	000f883a 	mov	r7,zero
   43df8:	1009883a 	mov	r4,r2
   43dfc:	180b883a 	mov	r5,r3
   43e00:	1025883a 	mov	r18,r2
   43e04:	1827883a 	mov	r19,r3
   43e08:	004c2200 	call	4c220 <__eqdf2>
   43e0c:	103f9a26 	beq	r2,zero,43c78 <__alt_data_end+0xfffdcb78>
   43e10:	d9c00617 	ldw	r7,24(sp)
   43e14:	d8c00717 	ldw	r3,28(sp)
   43e18:	b829883a 	mov	r20,r23
   43e1c:	38bfffc4 	addi	r2,r7,-1
   43e20:	18ad883a 	add	r22,r3,r2
   43e24:	00000a06 	br	43e50 <_dtoa_r+0x880>
   43e28:	00402c40 	call	402c4 <__muldf3>
   43e2c:	000d883a 	mov	r6,zero
   43e30:	000f883a 	mov	r7,zero
   43e34:	1009883a 	mov	r4,r2
   43e38:	180b883a 	mov	r5,r3
   43e3c:	1025883a 	mov	r18,r2
   43e40:	1827883a 	mov	r19,r3
   43e44:	b829883a 	mov	r20,r23
   43e48:	004c2200 	call	4c220 <__eqdf2>
   43e4c:	103f8a26 	beq	r2,zero,43c78 <__alt_data_end+0xfffdcb78>
   43e50:	800d883a 	mov	r6,r16
   43e54:	880f883a 	mov	r7,r17
   43e58:	9009883a 	mov	r4,r18
   43e5c:	980b883a 	mov	r5,r19
   43e60:	004b9380 	call	4b938 <__divdf3>
   43e64:	180b883a 	mov	r5,r3
   43e68:	1009883a 	mov	r4,r2
   43e6c:	004cd740 	call	4cd74 <__fixdfsi>
   43e70:	1009883a 	mov	r4,r2
   43e74:	102b883a 	mov	r21,r2
   43e78:	00409dc0 	call	409dc <__floatsidf>
   43e7c:	800d883a 	mov	r6,r16
   43e80:	880f883a 	mov	r7,r17
   43e84:	1009883a 	mov	r4,r2
   43e88:	180b883a 	mov	r5,r3
   43e8c:	00402c40 	call	402c4 <__muldf3>
   43e90:	100d883a 	mov	r6,r2
   43e94:	180f883a 	mov	r7,r3
   43e98:	9009883a 	mov	r4,r18
   43e9c:	980b883a 	mov	r5,r19
   43ea0:	004c4780 	call	4c478 <__subdf3>
   43ea4:	aa000c04 	addi	r8,r21,48
   43ea8:	a2000005 	stb	r8,0(r20)
   43eac:	000d883a 	mov	r6,zero
   43eb0:	01d00934 	movhi	r7,16420
   43eb4:	1009883a 	mov	r4,r2
   43eb8:	180b883a 	mov	r5,r3
   43ebc:	a5c00044 	addi	r23,r20,1
   43ec0:	b53fd91e 	bne	r22,r20,43e28 <__alt_data_end+0xfffdcd28>
   43ec4:	100d883a 	mov	r6,r2
   43ec8:	180f883a 	mov	r7,r3
   43ecc:	1009883a 	mov	r4,r2
   43ed0:	180b883a 	mov	r5,r3
   43ed4:	004b08c0 	call	4b08c <__adddf3>
   43ed8:	100d883a 	mov	r6,r2
   43edc:	180f883a 	mov	r7,r3
   43ee0:	8009883a 	mov	r4,r16
   43ee4:	880b883a 	mov	r5,r17
   43ee8:	1027883a 	mov	r19,r2
   43eec:	1825883a 	mov	r18,r3
   43ef0:	004c3840 	call	4c384 <__ledf2>
   43ef4:	10000816 	blt	r2,zero,43f18 <_dtoa_r+0x948>
   43ef8:	980d883a 	mov	r6,r19
   43efc:	900f883a 	mov	r7,r18
   43f00:	8009883a 	mov	r4,r16
   43f04:	880b883a 	mov	r5,r17
   43f08:	004c2200 	call	4c220 <__eqdf2>
   43f0c:	103f5a1e 	bne	r2,zero,43c78 <__alt_data_end+0xfffdcb78>
   43f10:	ad40004c 	andi	r21,r21,1
   43f14:	a83f5826 	beq	r21,zero,43c78 <__alt_data_end+0xfffdcb78>
   43f18:	bd3fffc3 	ldbu	r20,-1(r23)
   43f1c:	b8bfffc4 	addi	r2,r23,-1
   43f20:	1007883a 	mov	r3,r2
   43f24:	01400e44 	movi	r5,57
   43f28:	d9800717 	ldw	r6,28(sp)
   43f2c:	00000506 	br	43f44 <_dtoa_r+0x974>
   43f30:	18ffffc4 	addi	r3,r3,-1
   43f34:	11824726 	beq	r2,r6,44854 <_dtoa_r+0x1284>
   43f38:	1d000003 	ldbu	r20,0(r3)
   43f3c:	102f883a 	mov	r23,r2
   43f40:	10bfffc4 	addi	r2,r2,-1
   43f44:	a1003fcc 	andi	r4,r20,255
   43f48:	2100201c 	xori	r4,r4,128
   43f4c:	213fe004 	addi	r4,r4,-128
   43f50:	217ff726 	beq	r4,r5,43f30 <__alt_data_end+0xfffdce30>
   43f54:	a2000044 	addi	r8,r20,1
   43f58:	12000005 	stb	r8,0(r2)
   43f5c:	003f4606 	br	43c78 <__alt_data_end+0xfffdcb78>
   43f60:	d9000b17 	ldw	r4,44(sp)
   43f64:	2000c826 	beq	r4,zero,44288 <_dtoa_r+0xcb8>
   43f68:	d9800317 	ldw	r6,12(sp)
   43f6c:	00c00044 	movi	r3,1
   43f70:	1980f90e 	bge	r3,r6,44358 <_dtoa_r+0xd88>
   43f74:	d8800617 	ldw	r2,24(sp)
   43f78:	d8c00a17 	ldw	r3,40(sp)
   43f7c:	157fffc4 	addi	r21,r2,-1
   43f80:	1d41f316 	blt	r3,r21,44750 <_dtoa_r+0x1180>
   43f84:	1d6bc83a 	sub	r21,r3,r21
   43f88:	d9c00617 	ldw	r7,24(sp)
   43f8c:	3802aa16 	blt	r7,zero,44a38 <_dtoa_r+0x1468>
   43f90:	dd000817 	ldw	r20,32(sp)
   43f94:	d8800617 	ldw	r2,24(sp)
   43f98:	d8c00817 	ldw	r3,32(sp)
   43f9c:	01400044 	movi	r5,1
   43fa0:	e009883a 	mov	r4,fp
   43fa4:	1887883a 	add	r3,r3,r2
   43fa8:	d8c00815 	stw	r3,32(sp)
   43fac:	b0ad883a 	add	r22,r22,r2
   43fb0:	00470780 	call	47078 <__i2b>
   43fb4:	1023883a 	mov	r17,r2
   43fb8:	a0000826 	beq	r20,zero,43fdc <_dtoa_r+0xa0c>
   43fbc:	0580070e 	bge	zero,r22,43fdc <_dtoa_r+0xa0c>
   43fc0:	a005883a 	mov	r2,r20
   43fc4:	b500b916 	blt	r22,r20,442ac <_dtoa_r+0xcdc>
   43fc8:	d9000817 	ldw	r4,32(sp)
   43fcc:	a0a9c83a 	sub	r20,r20,r2
   43fd0:	b0adc83a 	sub	r22,r22,r2
   43fd4:	2089c83a 	sub	r4,r4,r2
   43fd8:	d9000815 	stw	r4,32(sp)
   43fdc:	d9800a17 	ldw	r6,40(sp)
   43fe0:	0181810e 	bge	zero,r6,445e8 <_dtoa_r+0x1018>
   43fe4:	d9c00b17 	ldw	r7,44(sp)
   43fe8:	3800b326 	beq	r7,zero,442b8 <_dtoa_r+0xce8>
   43fec:	a800b226 	beq	r21,zero,442b8 <_dtoa_r+0xce8>
   43ff0:	880b883a 	mov	r5,r17
   43ff4:	a80d883a 	mov	r6,r21
   43ff8:	e009883a 	mov	r4,fp
   43ffc:	00472ac0 	call	472ac <__pow5mult>
   44000:	d9800917 	ldw	r6,36(sp)
   44004:	100b883a 	mov	r5,r2
   44008:	e009883a 	mov	r4,fp
   4400c:	1023883a 	mov	r17,r2
   44010:	00470b40 	call	470b4 <__multiply>
   44014:	1021883a 	mov	r16,r2
   44018:	d8800a17 	ldw	r2,40(sp)
   4401c:	d9400917 	ldw	r5,36(sp)
   44020:	e009883a 	mov	r4,fp
   44024:	1545c83a 	sub	r2,r2,r21
   44028:	d8800a15 	stw	r2,40(sp)
   4402c:	0046d140 	call	46d14 <_Bfree>
   44030:	d8c00a17 	ldw	r3,40(sp)
   44034:	18009f1e 	bne	r3,zero,442b4 <_dtoa_r+0xce4>
   44038:	05c00044 	movi	r23,1
   4403c:	e009883a 	mov	r4,fp
   44040:	b80b883a 	mov	r5,r23
   44044:	00470780 	call	47078 <__i2b>
   44048:	d9000d17 	ldw	r4,52(sp)
   4404c:	102b883a 	mov	r21,r2
   44050:	2000ce26 	beq	r4,zero,4438c <_dtoa_r+0xdbc>
   44054:	200d883a 	mov	r6,r4
   44058:	100b883a 	mov	r5,r2
   4405c:	e009883a 	mov	r4,fp
   44060:	00472ac0 	call	472ac <__pow5mult>
   44064:	d9800317 	ldw	r6,12(sp)
   44068:	102b883a 	mov	r21,r2
   4406c:	b981810e 	bge	r23,r6,44674 <_dtoa_r+0x10a4>
   44070:	0027883a 	mov	r19,zero
   44074:	a8800417 	ldw	r2,16(r21)
   44078:	05c00804 	movi	r23,32
   4407c:	10800104 	addi	r2,r2,4
   44080:	1085883a 	add	r2,r2,r2
   44084:	1085883a 	add	r2,r2,r2
   44088:	a885883a 	add	r2,r21,r2
   4408c:	11000017 	ldw	r4,0(r2)
   44090:	0046f600 	call	46f60 <__hi0bits>
   44094:	b885c83a 	sub	r2,r23,r2
   44098:	1585883a 	add	r2,r2,r22
   4409c:	108007cc 	andi	r2,r2,31
   440a0:	1000b326 	beq	r2,zero,44370 <_dtoa_r+0xda0>
   440a4:	00c00804 	movi	r3,32
   440a8:	1887c83a 	sub	r3,r3,r2
   440ac:	01000104 	movi	r4,4
   440b0:	20c2cd0e 	bge	r4,r3,44be8 <_dtoa_r+0x1618>
   440b4:	00c00704 	movi	r3,28
   440b8:	1885c83a 	sub	r2,r3,r2
   440bc:	d8c00817 	ldw	r3,32(sp)
   440c0:	a0a9883a 	add	r20,r20,r2
   440c4:	b0ad883a 	add	r22,r22,r2
   440c8:	1887883a 	add	r3,r3,r2
   440cc:	d8c00815 	stw	r3,32(sp)
   440d0:	d9800817 	ldw	r6,32(sp)
   440d4:	0180040e 	bge	zero,r6,440e8 <_dtoa_r+0xb18>
   440d8:	800b883a 	mov	r5,r16
   440dc:	e009883a 	mov	r4,fp
   440e0:	00473ec0 	call	473ec <__lshift>
   440e4:	1021883a 	mov	r16,r2
   440e8:	0580050e 	bge	zero,r22,44100 <_dtoa_r+0xb30>
   440ec:	a80b883a 	mov	r5,r21
   440f0:	b00d883a 	mov	r6,r22
   440f4:	e009883a 	mov	r4,fp
   440f8:	00473ec0 	call	473ec <__lshift>
   440fc:	102b883a 	mov	r21,r2
   44100:	d9c00e17 	ldw	r7,56(sp)
   44104:	3801211e 	bne	r7,zero,4458c <_dtoa_r+0xfbc>
   44108:	d9800617 	ldw	r6,24(sp)
   4410c:	0181380e 	bge	zero,r6,445f0 <_dtoa_r+0x1020>
   44110:	d8c00b17 	ldw	r3,44(sp)
   44114:	1800ab1e 	bne	r3,zero,443c4 <_dtoa_r+0xdf4>
   44118:	dc800717 	ldw	r18,28(sp)
   4411c:	dcc00617 	ldw	r19,24(sp)
   44120:	9029883a 	mov	r20,r18
   44124:	00000206 	br	44130 <_dtoa_r+0xb60>
   44128:	0046d3c0 	call	46d3c <__multadd>
   4412c:	1021883a 	mov	r16,r2
   44130:	a80b883a 	mov	r5,r21
   44134:	8009883a 	mov	r4,r16
   44138:	00433d00 	call	433d0 <quorem>
   4413c:	10800c04 	addi	r2,r2,48
   44140:	90800005 	stb	r2,0(r18)
   44144:	94800044 	addi	r18,r18,1
   44148:	9507c83a 	sub	r3,r18,r20
   4414c:	000f883a 	mov	r7,zero
   44150:	01800284 	movi	r6,10
   44154:	800b883a 	mov	r5,r16
   44158:	e009883a 	mov	r4,fp
   4415c:	1cfff216 	blt	r3,r19,44128 <__alt_data_end+0xfffdd028>
   44160:	1011883a 	mov	r8,r2
   44164:	d8800617 	ldw	r2,24(sp)
   44168:	0082370e 	bge	zero,r2,44a48 <_dtoa_r+0x1478>
   4416c:	d9000717 	ldw	r4,28(sp)
   44170:	0025883a 	mov	r18,zero
   44174:	20af883a 	add	r23,r4,r2
   44178:	01800044 	movi	r6,1
   4417c:	800b883a 	mov	r5,r16
   44180:	e009883a 	mov	r4,fp
   44184:	da001715 	stw	r8,92(sp)
   44188:	00473ec0 	call	473ec <__lshift>
   4418c:	a80b883a 	mov	r5,r21
   44190:	1009883a 	mov	r4,r2
   44194:	d8800915 	stw	r2,36(sp)
   44198:	00475340 	call	47534 <__mcmp>
   4419c:	da001717 	ldw	r8,92(sp)
   441a0:	0081800e 	bge	zero,r2,447a4 <_dtoa_r+0x11d4>
   441a4:	b93fffc3 	ldbu	r4,-1(r23)
   441a8:	b8bfffc4 	addi	r2,r23,-1
   441ac:	1007883a 	mov	r3,r2
   441b0:	01800e44 	movi	r6,57
   441b4:	d9c00717 	ldw	r7,28(sp)
   441b8:	00000506 	br	441d0 <_dtoa_r+0xc00>
   441bc:	18ffffc4 	addi	r3,r3,-1
   441c0:	11c12326 	beq	r2,r7,44650 <_dtoa_r+0x1080>
   441c4:	19000003 	ldbu	r4,0(r3)
   441c8:	102f883a 	mov	r23,r2
   441cc:	10bfffc4 	addi	r2,r2,-1
   441d0:	21403fcc 	andi	r5,r4,255
   441d4:	2940201c 	xori	r5,r5,128
   441d8:	297fe004 	addi	r5,r5,-128
   441dc:	29bff726 	beq	r5,r6,441bc <__alt_data_end+0xfffdd0bc>
   441e0:	21000044 	addi	r4,r4,1
   441e4:	11000005 	stb	r4,0(r2)
   441e8:	a80b883a 	mov	r5,r21
   441ec:	e009883a 	mov	r4,fp
   441f0:	0046d140 	call	46d14 <_Bfree>
   441f4:	883ea026 	beq	r17,zero,43c78 <__alt_data_end+0xfffdcb78>
   441f8:	90000426 	beq	r18,zero,4420c <_dtoa_r+0xc3c>
   441fc:	94400326 	beq	r18,r17,4420c <_dtoa_r+0xc3c>
   44200:	900b883a 	mov	r5,r18
   44204:	e009883a 	mov	r4,fp
   44208:	0046d140 	call	46d14 <_Bfree>
   4420c:	880b883a 	mov	r5,r17
   44210:	e009883a 	mov	r4,fp
   44214:	0046d140 	call	46d14 <_Bfree>
   44218:	003e9706 	br	43c78 <__alt_data_end+0xfffdcb78>
   4421c:	01800044 	movi	r6,1
   44220:	d9800e15 	stw	r6,56(sp)
   44224:	003d9606 	br	43880 <__alt_data_end+0xfffdc780>
   44228:	d8800817 	ldw	r2,32(sp)
   4422c:	d8c00517 	ldw	r3,20(sp)
   44230:	d8000d15 	stw	zero,52(sp)
   44234:	10c5c83a 	sub	r2,r2,r3
   44238:	00c9c83a 	sub	r4,zero,r3
   4423c:	d8800815 	stw	r2,32(sp)
   44240:	d9000a15 	stw	r4,40(sp)
   44244:	003d9706 	br	438a4 <__alt_data_end+0xfffdc7a4>
   44248:	05adc83a 	sub	r22,zero,r22
   4424c:	dd800815 	stw	r22,32(sp)
   44250:	002d883a 	mov	r22,zero
   44254:	003d8e06 	br	43890 <__alt_data_end+0xfffdc790>
   44258:	d9000517 	ldw	r4,20(sp)
   4425c:	00409dc0 	call	409dc <__floatsidf>
   44260:	100d883a 	mov	r6,r2
   44264:	180f883a 	mov	r7,r3
   44268:	a009883a 	mov	r4,r20
   4426c:	880b883a 	mov	r5,r17
   44270:	004c2200 	call	4c220 <__eqdf2>
   44274:	103d7126 	beq	r2,zero,4383c <__alt_data_end+0xfffdc73c>
   44278:	d9c00517 	ldw	r7,20(sp)
   4427c:	39ffffc4 	addi	r7,r7,-1
   44280:	d9c00515 	stw	r7,20(sp)
   44284:	003d6d06 	br	4383c <__alt_data_end+0xfffdc73c>
   44288:	dd400a17 	ldw	r21,40(sp)
   4428c:	dd000817 	ldw	r20,32(sp)
   44290:	0023883a 	mov	r17,zero
   44294:	003f4806 	br	43fb8 <__alt_data_end+0xfffdceb8>
   44298:	10e3c83a 	sub	r17,r2,r3
   4429c:	9448983a 	sll	r4,r18,r17
   442a0:	003d3206 	br	4376c <__alt_data_end+0xfffdc66c>
   442a4:	d8000e15 	stw	zero,56(sp)
   442a8:	003d7506 	br	43880 <__alt_data_end+0xfffdc780>
   442ac:	b005883a 	mov	r2,r22
   442b0:	003f4506 	br	43fc8 <__alt_data_end+0xfffdcec8>
   442b4:	dc000915 	stw	r16,36(sp)
   442b8:	d9800a17 	ldw	r6,40(sp)
   442bc:	d9400917 	ldw	r5,36(sp)
   442c0:	e009883a 	mov	r4,fp
   442c4:	00472ac0 	call	472ac <__pow5mult>
   442c8:	1021883a 	mov	r16,r2
   442cc:	003f5a06 	br	44038 <__alt_data_end+0xfffdcf38>
   442d0:	01c00044 	movi	r7,1
   442d4:	d9c00b15 	stw	r7,44(sp)
   442d8:	d8802217 	ldw	r2,136(sp)
   442dc:	0081280e 	bge	zero,r2,44780 <_dtoa_r+0x11b0>
   442e0:	100d883a 	mov	r6,r2
   442e4:	1021883a 	mov	r16,r2
   442e8:	d8800c15 	stw	r2,48(sp)
   442ec:	d8800615 	stw	r2,24(sp)
   442f0:	003d8806 	br	43914 <__alt_data_end+0xfffdc814>
   442f4:	d8800617 	ldw	r2,24(sp)
   442f8:	00be9b16 	blt	zero,r2,43d68 <__alt_data_end+0xfffdcc68>
   442fc:	10010f1e 	bne	r2,zero,4473c <_dtoa_r+0x116c>
   44300:	880b883a 	mov	r5,r17
   44304:	000d883a 	mov	r6,zero
   44308:	01d00534 	movhi	r7,16404
   4430c:	8009883a 	mov	r4,r16
   44310:	00402c40 	call	402c4 <__muldf3>
   44314:	900d883a 	mov	r6,r18
   44318:	980f883a 	mov	r7,r19
   4431c:	1009883a 	mov	r4,r2
   44320:	180b883a 	mov	r5,r3
   44324:	004c2a80 	call	4c2a8 <__gedf2>
   44328:	002b883a 	mov	r21,zero
   4432c:	0023883a 	mov	r17,zero
   44330:	1000bf16 	blt	r2,zero,44630 <_dtoa_r+0x1060>
   44334:	d9802217 	ldw	r6,136(sp)
   44338:	ddc00717 	ldw	r23,28(sp)
   4433c:	018c303a 	nor	r6,zero,r6
   44340:	d9800515 	stw	r6,20(sp)
   44344:	a80b883a 	mov	r5,r21
   44348:	e009883a 	mov	r4,fp
   4434c:	0046d140 	call	46d14 <_Bfree>
   44350:	883e4926 	beq	r17,zero,43c78 <__alt_data_end+0xfffdcb78>
   44354:	003fad06 	br	4420c <__alt_data_end+0xfffdd10c>
   44358:	d9c01117 	ldw	r7,68(sp)
   4435c:	3801bc26 	beq	r7,zero,44a50 <_dtoa_r+0x1480>
   44360:	10810cc4 	addi	r2,r2,1075
   44364:	dd400a17 	ldw	r21,40(sp)
   44368:	dd000817 	ldw	r20,32(sp)
   4436c:	003f0a06 	br	43f98 <__alt_data_end+0xfffdce98>
   44370:	00800704 	movi	r2,28
   44374:	d9000817 	ldw	r4,32(sp)
   44378:	a0a9883a 	add	r20,r20,r2
   4437c:	b0ad883a 	add	r22,r22,r2
   44380:	2089883a 	add	r4,r4,r2
   44384:	d9000815 	stw	r4,32(sp)
   44388:	003f5106 	br	440d0 <__alt_data_end+0xfffdcfd0>
   4438c:	d8c00317 	ldw	r3,12(sp)
   44390:	b8c1fc0e 	bge	r23,r3,44b84 <_dtoa_r+0x15b4>
   44394:	0027883a 	mov	r19,zero
   44398:	b805883a 	mov	r2,r23
   4439c:	003f3e06 	br	44098 <__alt_data_end+0xfffdcf98>
   443a0:	880b883a 	mov	r5,r17
   443a4:	e009883a 	mov	r4,fp
   443a8:	000f883a 	mov	r7,zero
   443ac:	01800284 	movi	r6,10
   443b0:	0046d3c0 	call	46d3c <__multadd>
   443b4:	d9000c17 	ldw	r4,48(sp)
   443b8:	1023883a 	mov	r17,r2
   443bc:	0102040e 	bge	zero,r4,44bd0 <_dtoa_r+0x1600>
   443c0:	d9000615 	stw	r4,24(sp)
   443c4:	0500050e 	bge	zero,r20,443dc <_dtoa_r+0xe0c>
   443c8:	880b883a 	mov	r5,r17
   443cc:	a00d883a 	mov	r6,r20
   443d0:	e009883a 	mov	r4,fp
   443d4:	00473ec0 	call	473ec <__lshift>
   443d8:	1023883a 	mov	r17,r2
   443dc:	9801241e 	bne	r19,zero,44870 <_dtoa_r+0x12a0>
   443e0:	8829883a 	mov	r20,r17
   443e4:	d9000617 	ldw	r4,24(sp)
   443e8:	dcc00717 	ldw	r19,28(sp)
   443ec:	9480004c 	andi	r18,r18,1
   443f0:	20bfffc4 	addi	r2,r4,-1
   443f4:	9885883a 	add	r2,r19,r2
   443f8:	d8800415 	stw	r2,16(sp)
   443fc:	dc800615 	stw	r18,24(sp)
   44400:	a80b883a 	mov	r5,r21
   44404:	8009883a 	mov	r4,r16
   44408:	00433d00 	call	433d0 <quorem>
   4440c:	880b883a 	mov	r5,r17
   44410:	8009883a 	mov	r4,r16
   44414:	102f883a 	mov	r23,r2
   44418:	00475340 	call	47534 <__mcmp>
   4441c:	a80b883a 	mov	r5,r21
   44420:	a00d883a 	mov	r6,r20
   44424:	e009883a 	mov	r4,fp
   44428:	102d883a 	mov	r22,r2
   4442c:	00475940 	call	47594 <__mdiff>
   44430:	1007883a 	mov	r3,r2
   44434:	10800317 	ldw	r2,12(r2)
   44438:	bc800c04 	addi	r18,r23,48
   4443c:	180b883a 	mov	r5,r3
   44440:	10004e1e 	bne	r2,zero,4457c <_dtoa_r+0xfac>
   44444:	8009883a 	mov	r4,r16
   44448:	d8c01615 	stw	r3,88(sp)
   4444c:	00475340 	call	47534 <__mcmp>
   44450:	d8c01617 	ldw	r3,88(sp)
   44454:	e009883a 	mov	r4,fp
   44458:	d8801615 	stw	r2,88(sp)
   4445c:	180b883a 	mov	r5,r3
   44460:	0046d140 	call	46d14 <_Bfree>
   44464:	d8801617 	ldw	r2,88(sp)
   44468:	1000041e 	bne	r2,zero,4447c <_dtoa_r+0xeac>
   4446c:	d9800317 	ldw	r6,12(sp)
   44470:	3000021e 	bne	r6,zero,4447c <_dtoa_r+0xeac>
   44474:	d8c00617 	ldw	r3,24(sp)
   44478:	18003726 	beq	r3,zero,44558 <_dtoa_r+0xf88>
   4447c:	b0002016 	blt	r22,zero,44500 <_dtoa_r+0xf30>
   44480:	b000041e 	bne	r22,zero,44494 <_dtoa_r+0xec4>
   44484:	d9000317 	ldw	r4,12(sp)
   44488:	2000021e 	bne	r4,zero,44494 <_dtoa_r+0xec4>
   4448c:	d8c00617 	ldw	r3,24(sp)
   44490:	18001b26 	beq	r3,zero,44500 <_dtoa_r+0xf30>
   44494:	00810716 	blt	zero,r2,448b4 <_dtoa_r+0x12e4>
   44498:	d8c00417 	ldw	r3,16(sp)
   4449c:	9d800044 	addi	r22,r19,1
   444a0:	9c800005 	stb	r18,0(r19)
   444a4:	b02f883a 	mov	r23,r22
   444a8:	98c10626 	beq	r19,r3,448c4 <_dtoa_r+0x12f4>
   444ac:	800b883a 	mov	r5,r16
   444b0:	000f883a 	mov	r7,zero
   444b4:	01800284 	movi	r6,10
   444b8:	e009883a 	mov	r4,fp
   444bc:	0046d3c0 	call	46d3c <__multadd>
   444c0:	1021883a 	mov	r16,r2
   444c4:	000f883a 	mov	r7,zero
   444c8:	01800284 	movi	r6,10
   444cc:	880b883a 	mov	r5,r17
   444d0:	e009883a 	mov	r4,fp
   444d4:	8d002526 	beq	r17,r20,4456c <_dtoa_r+0xf9c>
   444d8:	0046d3c0 	call	46d3c <__multadd>
   444dc:	a00b883a 	mov	r5,r20
   444e0:	000f883a 	mov	r7,zero
   444e4:	01800284 	movi	r6,10
   444e8:	e009883a 	mov	r4,fp
   444ec:	1023883a 	mov	r17,r2
   444f0:	0046d3c0 	call	46d3c <__multadd>
   444f4:	1029883a 	mov	r20,r2
   444f8:	b027883a 	mov	r19,r22
   444fc:	003fc006 	br	44400 <__alt_data_end+0xfffdd300>
   44500:	9011883a 	mov	r8,r18
   44504:	00800e0e 	bge	zero,r2,44540 <_dtoa_r+0xf70>
   44508:	800b883a 	mov	r5,r16
   4450c:	01800044 	movi	r6,1
   44510:	e009883a 	mov	r4,fp
   44514:	da001715 	stw	r8,92(sp)
   44518:	00473ec0 	call	473ec <__lshift>
   4451c:	a80b883a 	mov	r5,r21
   44520:	1009883a 	mov	r4,r2
   44524:	1021883a 	mov	r16,r2
   44528:	00475340 	call	47534 <__mcmp>
   4452c:	da001717 	ldw	r8,92(sp)
   44530:	0081960e 	bge	zero,r2,44b8c <_dtoa_r+0x15bc>
   44534:	00800e44 	movi	r2,57
   44538:	40817026 	beq	r8,r2,44afc <_dtoa_r+0x152c>
   4453c:	ba000c44 	addi	r8,r23,49
   44540:	8825883a 	mov	r18,r17
   44544:	9dc00044 	addi	r23,r19,1
   44548:	9a000005 	stb	r8,0(r19)
   4454c:	a023883a 	mov	r17,r20
   44550:	dc000915 	stw	r16,36(sp)
   44554:	003f2406 	br	441e8 <__alt_data_end+0xfffdd0e8>
   44558:	00800e44 	movi	r2,57
   4455c:	9011883a 	mov	r8,r18
   44560:	90816626 	beq	r18,r2,44afc <_dtoa_r+0x152c>
   44564:	05bff516 	blt	zero,r22,4453c <__alt_data_end+0xfffdd43c>
   44568:	003ff506 	br	44540 <__alt_data_end+0xfffdd440>
   4456c:	0046d3c0 	call	46d3c <__multadd>
   44570:	1023883a 	mov	r17,r2
   44574:	1029883a 	mov	r20,r2
   44578:	003fdf06 	br	444f8 <__alt_data_end+0xfffdd3f8>
   4457c:	e009883a 	mov	r4,fp
   44580:	0046d140 	call	46d14 <_Bfree>
   44584:	00800044 	movi	r2,1
   44588:	003fbc06 	br	4447c <__alt_data_end+0xfffdd37c>
   4458c:	a80b883a 	mov	r5,r21
   44590:	8009883a 	mov	r4,r16
   44594:	00475340 	call	47534 <__mcmp>
   44598:	103edb0e 	bge	r2,zero,44108 <__alt_data_end+0xfffdd008>
   4459c:	800b883a 	mov	r5,r16
   445a0:	000f883a 	mov	r7,zero
   445a4:	01800284 	movi	r6,10
   445a8:	e009883a 	mov	r4,fp
   445ac:	0046d3c0 	call	46d3c <__multadd>
   445b0:	1021883a 	mov	r16,r2
   445b4:	d8800517 	ldw	r2,20(sp)
   445b8:	d8c00b17 	ldw	r3,44(sp)
   445bc:	10bfffc4 	addi	r2,r2,-1
   445c0:	d8800515 	stw	r2,20(sp)
   445c4:	183f761e 	bne	r3,zero,443a0 <__alt_data_end+0xfffdd2a0>
   445c8:	d9000c17 	ldw	r4,48(sp)
   445cc:	0101730e 	bge	zero,r4,44b9c <_dtoa_r+0x15cc>
   445d0:	d9000615 	stw	r4,24(sp)
   445d4:	003ed006 	br	44118 <__alt_data_end+0xfffdd018>
   445d8:	00800084 	movi	r2,2
   445dc:	3081861e 	bne	r6,r2,44bf8 <_dtoa_r+0x1628>
   445e0:	d8000b15 	stw	zero,44(sp)
   445e4:	003f3c06 	br	442d8 <__alt_data_end+0xfffdd1d8>
   445e8:	dc000917 	ldw	r16,36(sp)
   445ec:	003e9206 	br	44038 <__alt_data_end+0xfffdcf38>
   445f0:	d9c00317 	ldw	r7,12(sp)
   445f4:	00800084 	movi	r2,2
   445f8:	11fec50e 	bge	r2,r7,44110 <__alt_data_end+0xfffdd010>
   445fc:	d9000617 	ldw	r4,24(sp)
   44600:	20013c1e 	bne	r4,zero,44af4 <_dtoa_r+0x1524>
   44604:	a80b883a 	mov	r5,r21
   44608:	000f883a 	mov	r7,zero
   4460c:	01800144 	movi	r6,5
   44610:	e009883a 	mov	r4,fp
   44614:	0046d3c0 	call	46d3c <__multadd>
   44618:	100b883a 	mov	r5,r2
   4461c:	8009883a 	mov	r4,r16
   44620:	102b883a 	mov	r21,r2
   44624:	00475340 	call	47534 <__mcmp>
   44628:	dc000915 	stw	r16,36(sp)
   4462c:	00bf410e 	bge	zero,r2,44334 <__alt_data_end+0xfffdd234>
   44630:	d9c00717 	ldw	r7,28(sp)
   44634:	00800c44 	movi	r2,49
   44638:	38800005 	stb	r2,0(r7)
   4463c:	d8800517 	ldw	r2,20(sp)
   44640:	3dc00044 	addi	r23,r7,1
   44644:	10800044 	addi	r2,r2,1
   44648:	d8800515 	stw	r2,20(sp)
   4464c:	003f3d06 	br	44344 <__alt_data_end+0xfffdd244>
   44650:	d9800517 	ldw	r6,20(sp)
   44654:	d9c00717 	ldw	r7,28(sp)
   44658:	00800c44 	movi	r2,49
   4465c:	31800044 	addi	r6,r6,1
   44660:	d9800515 	stw	r6,20(sp)
   44664:	38800005 	stb	r2,0(r7)
   44668:	003edf06 	br	441e8 <__alt_data_end+0xfffdd0e8>
   4466c:	d8000b15 	stw	zero,44(sp)
   44670:	003c9f06 	br	438f0 <__alt_data_end+0xfffdc7f0>
   44674:	903e7e1e 	bne	r18,zero,44070 <__alt_data_end+0xfffdcf70>
   44678:	00800434 	movhi	r2,16
   4467c:	10bfffc4 	addi	r2,r2,-1
   44680:	9884703a 	and	r2,r19,r2
   44684:	1000ea1e 	bne	r2,zero,44a30 <_dtoa_r+0x1460>
   44688:	9cdffc2c 	andhi	r19,r19,32752
   4468c:	9800e826 	beq	r19,zero,44a30 <_dtoa_r+0x1460>
   44690:	d9c00817 	ldw	r7,32(sp)
   44694:	b5800044 	addi	r22,r22,1
   44698:	04c00044 	movi	r19,1
   4469c:	39c00044 	addi	r7,r7,1
   446a0:	d9c00815 	stw	r7,32(sp)
   446a4:	d8800d17 	ldw	r2,52(sp)
   446a8:	103e721e 	bne	r2,zero,44074 <__alt_data_end+0xfffdcf74>
   446ac:	00800044 	movi	r2,1
   446b0:	003e7906 	br	44098 <__alt_data_end+0xfffdcf98>
   446b4:	8009883a 	mov	r4,r16
   446b8:	00409dc0 	call	409dc <__floatsidf>
   446bc:	d9800f17 	ldw	r6,60(sp)
   446c0:	d9c01017 	ldw	r7,64(sp)
   446c4:	1009883a 	mov	r4,r2
   446c8:	180b883a 	mov	r5,r3
   446cc:	00402c40 	call	402c4 <__muldf3>
   446d0:	000d883a 	mov	r6,zero
   446d4:	01d00734 	movhi	r7,16412
   446d8:	1009883a 	mov	r4,r2
   446dc:	180b883a 	mov	r5,r3
   446e0:	004b08c0 	call	4b08c <__adddf3>
   446e4:	047f3034 	movhi	r17,64704
   446e8:	1021883a 	mov	r16,r2
   446ec:	1c63883a 	add	r17,r3,r17
   446f0:	d9000f17 	ldw	r4,60(sp)
   446f4:	d9401017 	ldw	r5,64(sp)
   446f8:	000d883a 	mov	r6,zero
   446fc:	01d00534 	movhi	r7,16404
   44700:	004c4780 	call	4c478 <__subdf3>
   44704:	800d883a 	mov	r6,r16
   44708:	880f883a 	mov	r7,r17
   4470c:	1009883a 	mov	r4,r2
   44710:	180b883a 	mov	r5,r3
   44714:	102b883a 	mov	r21,r2
   44718:	1829883a 	mov	r20,r3
   4471c:	004c2a80 	call	4c2a8 <__gedf2>
   44720:	00806c16 	blt	zero,r2,448d4 <_dtoa_r+0x1304>
   44724:	89e0003c 	xorhi	r7,r17,32768
   44728:	800d883a 	mov	r6,r16
   4472c:	a809883a 	mov	r4,r21
   44730:	a00b883a 	mov	r5,r20
   44734:	004c3840 	call	4c384 <__ledf2>
   44738:	103d7e0e 	bge	r2,zero,43d34 <__alt_data_end+0xfffdcc34>
   4473c:	002b883a 	mov	r21,zero
   44740:	0023883a 	mov	r17,zero
   44744:	003efb06 	br	44334 <__alt_data_end+0xfffdd234>
   44748:	d8800717 	ldw	r2,28(sp)
   4474c:	003bd006 	br	43690 <__alt_data_end+0xfffdc590>
   44750:	d9000a17 	ldw	r4,40(sp)
   44754:	d9800d17 	ldw	r6,52(sp)
   44758:	dd400a15 	stw	r21,40(sp)
   4475c:	a905c83a 	sub	r2,r21,r4
   44760:	308d883a 	add	r6,r6,r2
   44764:	d9800d15 	stw	r6,52(sp)
   44768:	002b883a 	mov	r21,zero
   4476c:	003e0606 	br	43f88 <__alt_data_end+0xfffdce88>
   44770:	9023883a 	mov	r17,r18
   44774:	9829883a 	mov	r20,r19
   44778:	04000084 	movi	r16,2
   4477c:	003c9206 	br	439c8 <__alt_data_end+0xfffdc8c8>
   44780:	04000044 	movi	r16,1
   44784:	dc000c15 	stw	r16,48(sp)
   44788:	dc000615 	stw	r16,24(sp)
   4478c:	dc002215 	stw	r16,136(sp)
   44790:	e0001115 	stw	zero,68(fp)
   44794:	000b883a 	mov	r5,zero
   44798:	003c6906 	br	43940 <__alt_data_end+0xfffdc840>
   4479c:	3021883a 	mov	r16,r6
   447a0:	003ffb06 	br	44790 <__alt_data_end+0xfffdd690>
   447a4:	1000021e 	bne	r2,zero,447b0 <_dtoa_r+0x11e0>
   447a8:	4200004c 	andi	r8,r8,1
   447ac:	403e7d1e 	bne	r8,zero,441a4 <__alt_data_end+0xfffdd0a4>
   447b0:	01000c04 	movi	r4,48
   447b4:	00000106 	br	447bc <_dtoa_r+0x11ec>
   447b8:	102f883a 	mov	r23,r2
   447bc:	b8bfffc4 	addi	r2,r23,-1
   447c0:	10c00007 	ldb	r3,0(r2)
   447c4:	193ffc26 	beq	r3,r4,447b8 <__alt_data_end+0xfffdd6b8>
   447c8:	003e8706 	br	441e8 <__alt_data_end+0xfffdd0e8>
   447cc:	d8800517 	ldw	r2,20(sp)
   447d0:	00a3c83a 	sub	r17,zero,r2
   447d4:	8800a426 	beq	r17,zero,44a68 <_dtoa_r+0x1498>
   447d8:	888003cc 	andi	r2,r17,15
   447dc:	100490fa 	slli	r2,r2,3
   447e0:	00c00174 	movhi	r3,5
   447e4:	18fe3704 	addi	r3,r3,-1828
   447e8:	1885883a 	add	r2,r3,r2
   447ec:	11800017 	ldw	r6,0(r2)
   447f0:	11c00117 	ldw	r7,4(r2)
   447f4:	9009883a 	mov	r4,r18
   447f8:	980b883a 	mov	r5,r19
   447fc:	8823d13a 	srai	r17,r17,4
   44800:	00402c40 	call	402c4 <__muldf3>
   44804:	d8800f15 	stw	r2,60(sp)
   44808:	d8c01015 	stw	r3,64(sp)
   4480c:	8800e826 	beq	r17,zero,44bb0 <_dtoa_r+0x15e0>
   44810:	05000174 	movhi	r20,5
   44814:	a53e2d04 	addi	r20,r20,-1868
   44818:	04000084 	movi	r16,2
   4481c:	8980004c 	andi	r6,r17,1
   44820:	1009883a 	mov	r4,r2
   44824:	8823d07a 	srai	r17,r17,1
   44828:	180b883a 	mov	r5,r3
   4482c:	30000426 	beq	r6,zero,44840 <_dtoa_r+0x1270>
   44830:	a1800017 	ldw	r6,0(r20)
   44834:	a1c00117 	ldw	r7,4(r20)
   44838:	84000044 	addi	r16,r16,1
   4483c:	00402c40 	call	402c4 <__muldf3>
   44840:	a5000204 	addi	r20,r20,8
   44844:	883ff51e 	bne	r17,zero,4481c <__alt_data_end+0xfffdd71c>
   44848:	d8800f15 	stw	r2,60(sp)
   4484c:	d8c01015 	stw	r3,64(sp)
   44850:	003c7606 	br	43a2c <__alt_data_end+0xfffdc92c>
   44854:	00c00c04 	movi	r3,48
   44858:	10c00005 	stb	r3,0(r2)
   4485c:	d8c00517 	ldw	r3,20(sp)
   44860:	bd3fffc3 	ldbu	r20,-1(r23)
   44864:	18c00044 	addi	r3,r3,1
   44868:	d8c00515 	stw	r3,20(sp)
   4486c:	003db906 	br	43f54 <__alt_data_end+0xfffdce54>
   44870:	89400117 	ldw	r5,4(r17)
   44874:	e009883a 	mov	r4,fp
   44878:	0046c6c0 	call	46c6c <_Balloc>
   4487c:	89800417 	ldw	r6,16(r17)
   44880:	89400304 	addi	r5,r17,12
   44884:	11000304 	addi	r4,r2,12
   44888:	31800084 	addi	r6,r6,2
   4488c:	318d883a 	add	r6,r6,r6
   44890:	318d883a 	add	r6,r6,r6
   44894:	1027883a 	mov	r19,r2
   44898:	00468a00 	call	468a0 <memcpy>
   4489c:	01800044 	movi	r6,1
   448a0:	980b883a 	mov	r5,r19
   448a4:	e009883a 	mov	r4,fp
   448a8:	00473ec0 	call	473ec <__lshift>
   448ac:	1029883a 	mov	r20,r2
   448b0:	003ecc06 	br	443e4 <__alt_data_end+0xfffdd2e4>
   448b4:	00800e44 	movi	r2,57
   448b8:	90809026 	beq	r18,r2,44afc <_dtoa_r+0x152c>
   448bc:	92000044 	addi	r8,r18,1
   448c0:	003f1f06 	br	44540 <__alt_data_end+0xfffdd440>
   448c4:	9011883a 	mov	r8,r18
   448c8:	8825883a 	mov	r18,r17
   448cc:	a023883a 	mov	r17,r20
   448d0:	003e2906 	br	44178 <__alt_data_end+0xfffdd078>
   448d4:	002b883a 	mov	r21,zero
   448d8:	0023883a 	mov	r17,zero
   448dc:	003f5406 	br	44630 <__alt_data_end+0xfffdd530>
   448e0:	61bfffc4 	addi	r6,r12,-1
   448e4:	300490fa 	slli	r2,r6,3
   448e8:	00c00174 	movhi	r3,5
   448ec:	18fe3704 	addi	r3,r3,-1828
   448f0:	1885883a 	add	r2,r3,r2
   448f4:	11000017 	ldw	r4,0(r2)
   448f8:	11400117 	ldw	r5,4(r2)
   448fc:	d8800717 	ldw	r2,28(sp)
   44900:	880f883a 	mov	r7,r17
   44904:	d9801215 	stw	r6,72(sp)
   44908:	800d883a 	mov	r6,r16
   4490c:	db001615 	stw	r12,88(sp)
   44910:	15c00044 	addi	r23,r2,1
   44914:	00402c40 	call	402c4 <__muldf3>
   44918:	d9401017 	ldw	r5,64(sp)
   4491c:	d9000f17 	ldw	r4,60(sp)
   44920:	d8c01515 	stw	r3,84(sp)
   44924:	d8801415 	stw	r2,80(sp)
   44928:	004cd740 	call	4cd74 <__fixdfsi>
   4492c:	1009883a 	mov	r4,r2
   44930:	1021883a 	mov	r16,r2
   44934:	00409dc0 	call	409dc <__floatsidf>
   44938:	d9000f17 	ldw	r4,60(sp)
   4493c:	d9401017 	ldw	r5,64(sp)
   44940:	100d883a 	mov	r6,r2
   44944:	180f883a 	mov	r7,r3
   44948:	004c4780 	call	4c478 <__subdf3>
   4494c:	1829883a 	mov	r20,r3
   44950:	d8c00717 	ldw	r3,28(sp)
   44954:	84000c04 	addi	r16,r16,48
   44958:	1023883a 	mov	r17,r2
   4495c:	1c000005 	stb	r16,0(r3)
   44960:	db001617 	ldw	r12,88(sp)
   44964:	00800044 	movi	r2,1
   44968:	60802226 	beq	r12,r2,449f4 <_dtoa_r+0x1424>
   4496c:	d9c00717 	ldw	r7,28(sp)
   44970:	8805883a 	mov	r2,r17
   44974:	b82b883a 	mov	r21,r23
   44978:	3b19883a 	add	r12,r7,r12
   4497c:	6023883a 	mov	r17,r12
   44980:	a007883a 	mov	r3,r20
   44984:	dc800f15 	stw	r18,60(sp)
   44988:	000d883a 	mov	r6,zero
   4498c:	01d00934 	movhi	r7,16420
   44990:	1009883a 	mov	r4,r2
   44994:	180b883a 	mov	r5,r3
   44998:	00402c40 	call	402c4 <__muldf3>
   4499c:	180b883a 	mov	r5,r3
   449a0:	1009883a 	mov	r4,r2
   449a4:	1829883a 	mov	r20,r3
   449a8:	1025883a 	mov	r18,r2
   449ac:	004cd740 	call	4cd74 <__fixdfsi>
   449b0:	1009883a 	mov	r4,r2
   449b4:	1021883a 	mov	r16,r2
   449b8:	00409dc0 	call	409dc <__floatsidf>
   449bc:	100d883a 	mov	r6,r2
   449c0:	180f883a 	mov	r7,r3
   449c4:	9009883a 	mov	r4,r18
   449c8:	a00b883a 	mov	r5,r20
   449cc:	84000c04 	addi	r16,r16,48
   449d0:	004c4780 	call	4c478 <__subdf3>
   449d4:	ad400044 	addi	r21,r21,1
   449d8:	ac3fffc5 	stb	r16,-1(r21)
   449dc:	ac7fea1e 	bne	r21,r17,44988 <__alt_data_end+0xfffdd888>
   449e0:	1023883a 	mov	r17,r2
   449e4:	d8801217 	ldw	r2,72(sp)
   449e8:	dc800f17 	ldw	r18,60(sp)
   449ec:	1829883a 	mov	r20,r3
   449f0:	b8af883a 	add	r23,r23,r2
   449f4:	d9001417 	ldw	r4,80(sp)
   449f8:	d9401517 	ldw	r5,84(sp)
   449fc:	000d883a 	mov	r6,zero
   44a00:	01cff834 	movhi	r7,16352
   44a04:	004b08c0 	call	4b08c <__adddf3>
   44a08:	880d883a 	mov	r6,r17
   44a0c:	a00f883a 	mov	r7,r20
   44a10:	1009883a 	mov	r4,r2
   44a14:	180b883a 	mov	r5,r3
   44a18:	004c3840 	call	4c384 <__ledf2>
   44a1c:	10003e0e 	bge	r2,zero,44b18 <_dtoa_r+0x1548>
   44a20:	d9001317 	ldw	r4,76(sp)
   44a24:	bd3fffc3 	ldbu	r20,-1(r23)
   44a28:	d9000515 	stw	r4,20(sp)
   44a2c:	003d3b06 	br	43f1c <__alt_data_end+0xfffdce1c>
   44a30:	0027883a 	mov	r19,zero
   44a34:	003f1b06 	br	446a4 <__alt_data_end+0xfffdd5a4>
   44a38:	d8800817 	ldw	r2,32(sp)
   44a3c:	11e9c83a 	sub	r20,r2,r7
   44a40:	0005883a 	mov	r2,zero
   44a44:	003d5406 	br	43f98 <__alt_data_end+0xfffdce98>
   44a48:	00800044 	movi	r2,1
   44a4c:	003dc706 	br	4416c <__alt_data_end+0xfffdd06c>
   44a50:	d8c00217 	ldw	r3,8(sp)
   44a54:	00800d84 	movi	r2,54
   44a58:	dd400a17 	ldw	r21,40(sp)
   44a5c:	10c5c83a 	sub	r2,r2,r3
   44a60:	dd000817 	ldw	r20,32(sp)
   44a64:	003d4c06 	br	43f98 <__alt_data_end+0xfffdce98>
   44a68:	dc800f15 	stw	r18,60(sp)
   44a6c:	dcc01015 	stw	r19,64(sp)
   44a70:	04000084 	movi	r16,2
   44a74:	003bed06 	br	43a2c <__alt_data_end+0xfffdc92c>
   44a78:	d9000617 	ldw	r4,24(sp)
   44a7c:	203f0d26 	beq	r4,zero,446b4 <__alt_data_end+0xfffdd5b4>
   44a80:	d9800c17 	ldw	r6,48(sp)
   44a84:	01bcab0e 	bge	zero,r6,43d34 <__alt_data_end+0xfffdcc34>
   44a88:	d9401017 	ldw	r5,64(sp)
   44a8c:	d9000f17 	ldw	r4,60(sp)
   44a90:	000d883a 	mov	r6,zero
   44a94:	01d00934 	movhi	r7,16420
   44a98:	00402c40 	call	402c4 <__muldf3>
   44a9c:	81000044 	addi	r4,r16,1
   44aa0:	d8800f15 	stw	r2,60(sp)
   44aa4:	d8c01015 	stw	r3,64(sp)
   44aa8:	00409dc0 	call	409dc <__floatsidf>
   44aac:	d9800f17 	ldw	r6,60(sp)
   44ab0:	d9c01017 	ldw	r7,64(sp)
   44ab4:	1009883a 	mov	r4,r2
   44ab8:	180b883a 	mov	r5,r3
   44abc:	00402c40 	call	402c4 <__muldf3>
   44ac0:	01d00734 	movhi	r7,16412
   44ac4:	000d883a 	mov	r6,zero
   44ac8:	1009883a 	mov	r4,r2
   44acc:	180b883a 	mov	r5,r3
   44ad0:	004b08c0 	call	4b08c <__adddf3>
   44ad4:	d9c00517 	ldw	r7,20(sp)
   44ad8:	047f3034 	movhi	r17,64704
   44adc:	1021883a 	mov	r16,r2
   44ae0:	39ffffc4 	addi	r7,r7,-1
   44ae4:	d9c01315 	stw	r7,76(sp)
   44ae8:	1c63883a 	add	r17,r3,r17
   44aec:	db000c17 	ldw	r12,48(sp)
   44af0:	003bea06 	br	43a9c <__alt_data_end+0xfffdc99c>
   44af4:	dc000915 	stw	r16,36(sp)
   44af8:	003e0e06 	br	44334 <__alt_data_end+0xfffdd234>
   44afc:	01000e44 	movi	r4,57
   44b00:	8825883a 	mov	r18,r17
   44b04:	9dc00044 	addi	r23,r19,1
   44b08:	99000005 	stb	r4,0(r19)
   44b0c:	a023883a 	mov	r17,r20
   44b10:	dc000915 	stw	r16,36(sp)
   44b14:	003da406 	br	441a8 <__alt_data_end+0xfffdd0a8>
   44b18:	d9801417 	ldw	r6,80(sp)
   44b1c:	d9c01517 	ldw	r7,84(sp)
   44b20:	0009883a 	mov	r4,zero
   44b24:	014ff834 	movhi	r5,16352
   44b28:	004c4780 	call	4c478 <__subdf3>
   44b2c:	880d883a 	mov	r6,r17
   44b30:	a00f883a 	mov	r7,r20
   44b34:	1009883a 	mov	r4,r2
   44b38:	180b883a 	mov	r5,r3
   44b3c:	004c2a80 	call	4c2a8 <__gedf2>
   44b40:	00bc7c0e 	bge	zero,r2,43d34 <__alt_data_end+0xfffdcc34>
   44b44:	01000c04 	movi	r4,48
   44b48:	00000106 	br	44b50 <_dtoa_r+0x1580>
   44b4c:	102f883a 	mov	r23,r2
   44b50:	b8bfffc4 	addi	r2,r23,-1
   44b54:	10c00007 	ldb	r3,0(r2)
   44b58:	193ffc26 	beq	r3,r4,44b4c <__alt_data_end+0xfffdda4c>
   44b5c:	d9801317 	ldw	r6,76(sp)
   44b60:	d9800515 	stw	r6,20(sp)
   44b64:	003c4406 	br	43c78 <__alt_data_end+0xfffdcb78>
   44b68:	d9801317 	ldw	r6,76(sp)
   44b6c:	d9800515 	stw	r6,20(sp)
   44b70:	003cea06 	br	43f1c <__alt_data_end+0xfffdce1c>
   44b74:	dd800f17 	ldw	r22,60(sp)
   44b78:	dcc01017 	ldw	r19,64(sp)
   44b7c:	dc801217 	ldw	r18,72(sp)
   44b80:	003c6c06 	br	43d34 <__alt_data_end+0xfffdcc34>
   44b84:	903e031e 	bne	r18,zero,44394 <__alt_data_end+0xfffdd294>
   44b88:	003ebb06 	br	44678 <__alt_data_end+0xfffdd578>
   44b8c:	103e6c1e 	bne	r2,zero,44540 <__alt_data_end+0xfffdd440>
   44b90:	4080004c 	andi	r2,r8,1
   44b94:	103e6a26 	beq	r2,zero,44540 <__alt_data_end+0xfffdd440>
   44b98:	003e6606 	br	44534 <__alt_data_end+0xfffdd434>
   44b9c:	d8c00317 	ldw	r3,12(sp)
   44ba0:	00800084 	movi	r2,2
   44ba4:	10c02916 	blt	r2,r3,44c4c <_dtoa_r+0x167c>
   44ba8:	d9000c17 	ldw	r4,48(sp)
   44bac:	003e8806 	br	445d0 <__alt_data_end+0xfffdd4d0>
   44bb0:	04000084 	movi	r16,2
   44bb4:	003b9d06 	br	43a2c <__alt_data_end+0xfffdc92c>
   44bb8:	d9001317 	ldw	r4,76(sp)
   44bbc:	d9000515 	stw	r4,20(sp)
   44bc0:	003cd606 	br	43f1c <__alt_data_end+0xfffdce1c>
   44bc4:	d8801317 	ldw	r2,76(sp)
   44bc8:	d8800515 	stw	r2,20(sp)
   44bcc:	003c2a06 	br	43c78 <__alt_data_end+0xfffdcb78>
   44bd0:	d9800317 	ldw	r6,12(sp)
   44bd4:	00800084 	movi	r2,2
   44bd8:	11801516 	blt	r2,r6,44c30 <_dtoa_r+0x1660>
   44bdc:	d9c00c17 	ldw	r7,48(sp)
   44be0:	d9c00615 	stw	r7,24(sp)
   44be4:	003df706 	br	443c4 <__alt_data_end+0xfffdd2c4>
   44be8:	193d3926 	beq	r3,r4,440d0 <__alt_data_end+0xfffdcfd0>
   44bec:	00c00f04 	movi	r3,60
   44bf0:	1885c83a 	sub	r2,r3,r2
   44bf4:	003ddf06 	br	44374 <__alt_data_end+0xfffdd274>
   44bf8:	e009883a 	mov	r4,fp
   44bfc:	e0001115 	stw	zero,68(fp)
   44c00:	000b883a 	mov	r5,zero
   44c04:	0046c6c0 	call	46c6c <_Balloc>
   44c08:	d8800715 	stw	r2,28(sp)
   44c0c:	d8c00717 	ldw	r3,28(sp)
   44c10:	00bfffc4 	movi	r2,-1
   44c14:	01000044 	movi	r4,1
   44c18:	d8800c15 	stw	r2,48(sp)
   44c1c:	e0c01015 	stw	r3,64(fp)
   44c20:	d9000b15 	stw	r4,44(sp)
   44c24:	d8800615 	stw	r2,24(sp)
   44c28:	d8002215 	stw	zero,136(sp)
   44c2c:	003c4106 	br	43d34 <__alt_data_end+0xfffdcc34>
   44c30:	d8c00c17 	ldw	r3,48(sp)
   44c34:	d8c00615 	stw	r3,24(sp)
   44c38:	003e7006 	br	445fc <__alt_data_end+0xfffdd4fc>
   44c3c:	04400044 	movi	r17,1
   44c40:	003b2006 	br	438c4 <__alt_data_end+0xfffdc7c4>
   44c44:	000b883a 	mov	r5,zero
   44c48:	003b3d06 	br	43940 <__alt_data_end+0xfffdc840>
   44c4c:	d8800c17 	ldw	r2,48(sp)
   44c50:	d8800615 	stw	r2,24(sp)
   44c54:	003e6906 	br	445fc <__alt_data_end+0xfffdd4fc>

00044c58 <__sflush_r>:
   44c58:	2880030b 	ldhu	r2,12(r5)
   44c5c:	defffb04 	addi	sp,sp,-20
   44c60:	dcc00315 	stw	r19,12(sp)
   44c64:	dc400115 	stw	r17,4(sp)
   44c68:	dfc00415 	stw	ra,16(sp)
   44c6c:	dc800215 	stw	r18,8(sp)
   44c70:	dc000015 	stw	r16,0(sp)
   44c74:	10c0020c 	andi	r3,r2,8
   44c78:	2823883a 	mov	r17,r5
   44c7c:	2027883a 	mov	r19,r4
   44c80:	1800311e 	bne	r3,zero,44d48 <__sflush_r+0xf0>
   44c84:	28c00117 	ldw	r3,4(r5)
   44c88:	10820014 	ori	r2,r2,2048
   44c8c:	2880030d 	sth	r2,12(r5)
   44c90:	00c04b0e 	bge	zero,r3,44dc0 <__sflush_r+0x168>
   44c94:	8a000a17 	ldw	r8,40(r17)
   44c98:	40002326 	beq	r8,zero,44d28 <__sflush_r+0xd0>
   44c9c:	9c000017 	ldw	r16,0(r19)
   44ca0:	10c4000c 	andi	r3,r2,4096
   44ca4:	98000015 	stw	zero,0(r19)
   44ca8:	18004826 	beq	r3,zero,44dcc <__sflush_r+0x174>
   44cac:	89801417 	ldw	r6,80(r17)
   44cb0:	10c0010c 	andi	r3,r2,4
   44cb4:	18000626 	beq	r3,zero,44cd0 <__sflush_r+0x78>
   44cb8:	88c00117 	ldw	r3,4(r17)
   44cbc:	88800c17 	ldw	r2,48(r17)
   44cc0:	30cdc83a 	sub	r6,r6,r3
   44cc4:	10000226 	beq	r2,zero,44cd0 <__sflush_r+0x78>
   44cc8:	88800f17 	ldw	r2,60(r17)
   44ccc:	308dc83a 	sub	r6,r6,r2
   44cd0:	89400717 	ldw	r5,28(r17)
   44cd4:	000f883a 	mov	r7,zero
   44cd8:	9809883a 	mov	r4,r19
   44cdc:	403ee83a 	callr	r8
   44ce0:	00ffffc4 	movi	r3,-1
   44ce4:	10c04426 	beq	r2,r3,44df8 <__sflush_r+0x1a0>
   44ce8:	88c0030b 	ldhu	r3,12(r17)
   44cec:	89000417 	ldw	r4,16(r17)
   44cf0:	88000115 	stw	zero,4(r17)
   44cf4:	197dffcc 	andi	r5,r3,63487
   44cf8:	8940030d 	sth	r5,12(r17)
   44cfc:	89000015 	stw	r4,0(r17)
   44d00:	18c4000c 	andi	r3,r3,4096
   44d04:	18002c1e 	bne	r3,zero,44db8 <__sflush_r+0x160>
   44d08:	89400c17 	ldw	r5,48(r17)
   44d0c:	9c000015 	stw	r16,0(r19)
   44d10:	28000526 	beq	r5,zero,44d28 <__sflush_r+0xd0>
   44d14:	88801004 	addi	r2,r17,64
   44d18:	28800226 	beq	r5,r2,44d24 <__sflush_r+0xcc>
   44d1c:	9809883a 	mov	r4,r19
   44d20:	00453c40 	call	453c4 <_free_r>
   44d24:	88000c15 	stw	zero,48(r17)
   44d28:	0005883a 	mov	r2,zero
   44d2c:	dfc00417 	ldw	ra,16(sp)
   44d30:	dcc00317 	ldw	r19,12(sp)
   44d34:	dc800217 	ldw	r18,8(sp)
   44d38:	dc400117 	ldw	r17,4(sp)
   44d3c:	dc000017 	ldw	r16,0(sp)
   44d40:	dec00504 	addi	sp,sp,20
   44d44:	f800283a 	ret
   44d48:	2c800417 	ldw	r18,16(r5)
   44d4c:	903ff626 	beq	r18,zero,44d28 <__alt_data_end+0xfffddc28>
   44d50:	2c000017 	ldw	r16,0(r5)
   44d54:	108000cc 	andi	r2,r2,3
   44d58:	2c800015 	stw	r18,0(r5)
   44d5c:	84a1c83a 	sub	r16,r16,r18
   44d60:	1000131e 	bne	r2,zero,44db0 <__sflush_r+0x158>
   44d64:	28800517 	ldw	r2,20(r5)
   44d68:	88800215 	stw	r2,8(r17)
   44d6c:	04000316 	blt	zero,r16,44d7c <__sflush_r+0x124>
   44d70:	003fed06 	br	44d28 <__alt_data_end+0xfffddc28>
   44d74:	90a5883a 	add	r18,r18,r2
   44d78:	043feb0e 	bge	zero,r16,44d28 <__alt_data_end+0xfffddc28>
   44d7c:	88800917 	ldw	r2,36(r17)
   44d80:	89400717 	ldw	r5,28(r17)
   44d84:	800f883a 	mov	r7,r16
   44d88:	900d883a 	mov	r6,r18
   44d8c:	9809883a 	mov	r4,r19
   44d90:	103ee83a 	callr	r2
   44d94:	80a1c83a 	sub	r16,r16,r2
   44d98:	00bff616 	blt	zero,r2,44d74 <__alt_data_end+0xfffddc74>
   44d9c:	88c0030b 	ldhu	r3,12(r17)
   44da0:	00bfffc4 	movi	r2,-1
   44da4:	18c01014 	ori	r3,r3,64
   44da8:	88c0030d 	sth	r3,12(r17)
   44dac:	003fdf06 	br	44d2c <__alt_data_end+0xfffddc2c>
   44db0:	0005883a 	mov	r2,zero
   44db4:	003fec06 	br	44d68 <__alt_data_end+0xfffddc68>
   44db8:	88801415 	stw	r2,80(r17)
   44dbc:	003fd206 	br	44d08 <__alt_data_end+0xfffddc08>
   44dc0:	28c00f17 	ldw	r3,60(r5)
   44dc4:	00ffb316 	blt	zero,r3,44c94 <__alt_data_end+0xfffddb94>
   44dc8:	003fd706 	br	44d28 <__alt_data_end+0xfffddc28>
   44dcc:	89400717 	ldw	r5,28(r17)
   44dd0:	000d883a 	mov	r6,zero
   44dd4:	01c00044 	movi	r7,1
   44dd8:	9809883a 	mov	r4,r19
   44ddc:	403ee83a 	callr	r8
   44de0:	100d883a 	mov	r6,r2
   44de4:	00bfffc4 	movi	r2,-1
   44de8:	30801426 	beq	r6,r2,44e3c <__sflush_r+0x1e4>
   44dec:	8880030b 	ldhu	r2,12(r17)
   44df0:	8a000a17 	ldw	r8,40(r17)
   44df4:	003fae06 	br	44cb0 <__alt_data_end+0xfffddbb0>
   44df8:	98c00017 	ldw	r3,0(r19)
   44dfc:	183fba26 	beq	r3,zero,44ce8 <__alt_data_end+0xfffddbe8>
   44e00:	01000744 	movi	r4,29
   44e04:	19000626 	beq	r3,r4,44e20 <__sflush_r+0x1c8>
   44e08:	01000584 	movi	r4,22
   44e0c:	19000426 	beq	r3,r4,44e20 <__sflush_r+0x1c8>
   44e10:	88c0030b 	ldhu	r3,12(r17)
   44e14:	18c01014 	ori	r3,r3,64
   44e18:	88c0030d 	sth	r3,12(r17)
   44e1c:	003fc306 	br	44d2c <__alt_data_end+0xfffddc2c>
   44e20:	8880030b 	ldhu	r2,12(r17)
   44e24:	88c00417 	ldw	r3,16(r17)
   44e28:	88000115 	stw	zero,4(r17)
   44e2c:	10bdffcc 	andi	r2,r2,63487
   44e30:	8880030d 	sth	r2,12(r17)
   44e34:	88c00015 	stw	r3,0(r17)
   44e38:	003fb306 	br	44d08 <__alt_data_end+0xfffddc08>
   44e3c:	98800017 	ldw	r2,0(r19)
   44e40:	103fea26 	beq	r2,zero,44dec <__alt_data_end+0xfffddcec>
   44e44:	00c00744 	movi	r3,29
   44e48:	10c00226 	beq	r2,r3,44e54 <__sflush_r+0x1fc>
   44e4c:	00c00584 	movi	r3,22
   44e50:	10c0031e 	bne	r2,r3,44e60 <__sflush_r+0x208>
   44e54:	9c000015 	stw	r16,0(r19)
   44e58:	0005883a 	mov	r2,zero
   44e5c:	003fb306 	br	44d2c <__alt_data_end+0xfffddc2c>
   44e60:	88c0030b 	ldhu	r3,12(r17)
   44e64:	3005883a 	mov	r2,r6
   44e68:	18c01014 	ori	r3,r3,64
   44e6c:	88c0030d 	sth	r3,12(r17)
   44e70:	003fae06 	br	44d2c <__alt_data_end+0xfffddc2c>

00044e74 <_fflush_r>:
   44e74:	defffd04 	addi	sp,sp,-12
   44e78:	dc000115 	stw	r16,4(sp)
   44e7c:	dfc00215 	stw	ra,8(sp)
   44e80:	2021883a 	mov	r16,r4
   44e84:	20000226 	beq	r4,zero,44e90 <_fflush_r+0x1c>
   44e88:	20800e17 	ldw	r2,56(r4)
   44e8c:	10000c26 	beq	r2,zero,44ec0 <_fflush_r+0x4c>
   44e90:	2880030f 	ldh	r2,12(r5)
   44e94:	1000051e 	bne	r2,zero,44eac <_fflush_r+0x38>
   44e98:	0005883a 	mov	r2,zero
   44e9c:	dfc00217 	ldw	ra,8(sp)
   44ea0:	dc000117 	ldw	r16,4(sp)
   44ea4:	dec00304 	addi	sp,sp,12
   44ea8:	f800283a 	ret
   44eac:	8009883a 	mov	r4,r16
   44eb0:	dfc00217 	ldw	ra,8(sp)
   44eb4:	dc000117 	ldw	r16,4(sp)
   44eb8:	dec00304 	addi	sp,sp,12
   44ebc:	0044c581 	jmpi	44c58 <__sflush_r>
   44ec0:	d9400015 	stw	r5,0(sp)
   44ec4:	00452500 	call	45250 <__sinit>
   44ec8:	d9400017 	ldw	r5,0(sp)
   44ecc:	003ff006 	br	44e90 <__alt_data_end+0xfffddd90>

00044ed0 <fflush>:
   44ed0:	20000526 	beq	r4,zero,44ee8 <fflush+0x18>
   44ed4:	00800174 	movhi	r2,5
   44ed8:	10852804 	addi	r2,r2,5280
   44edc:	200b883a 	mov	r5,r4
   44ee0:	11000017 	ldw	r4,0(r2)
   44ee4:	0044e741 	jmpi	44e74 <_fflush_r>
   44ee8:	00800174 	movhi	r2,5
   44eec:	10852704 	addi	r2,r2,5276
   44ef0:	11000017 	ldw	r4,0(r2)
   44ef4:	01400134 	movhi	r5,4
   44ef8:	29539d04 	addi	r5,r5,20084
   44efc:	0045c541 	jmpi	45c54 <_fwalk_reent>

00044f00 <__fp_unlock>:
   44f00:	0005883a 	mov	r2,zero
   44f04:	f800283a 	ret

00044f08 <_cleanup_r>:
   44f08:	01400174 	movhi	r5,5
   44f0c:	29671b04 	addi	r5,r5,-25492
   44f10:	0045c541 	jmpi	45c54 <_fwalk_reent>

00044f14 <__sinit.part.1>:
   44f14:	defff704 	addi	sp,sp,-36
   44f18:	00c00134 	movhi	r3,4
   44f1c:	dfc00815 	stw	ra,32(sp)
   44f20:	ddc00715 	stw	r23,28(sp)
   44f24:	dd800615 	stw	r22,24(sp)
   44f28:	dd400515 	stw	r21,20(sp)
   44f2c:	dd000415 	stw	r20,16(sp)
   44f30:	dcc00315 	stw	r19,12(sp)
   44f34:	dc800215 	stw	r18,8(sp)
   44f38:	dc400115 	stw	r17,4(sp)
   44f3c:	dc000015 	stw	r16,0(sp)
   44f40:	18d3c204 	addi	r3,r3,20232
   44f44:	24000117 	ldw	r16,4(r4)
   44f48:	20c00f15 	stw	r3,60(r4)
   44f4c:	2080bb04 	addi	r2,r4,748
   44f50:	00c000c4 	movi	r3,3
   44f54:	20c0b915 	stw	r3,740(r4)
   44f58:	2080ba15 	stw	r2,744(r4)
   44f5c:	2000b815 	stw	zero,736(r4)
   44f60:	05c00204 	movi	r23,8
   44f64:	00800104 	movi	r2,4
   44f68:	2025883a 	mov	r18,r4
   44f6c:	b80d883a 	mov	r6,r23
   44f70:	81001704 	addi	r4,r16,92
   44f74:	000b883a 	mov	r5,zero
   44f78:	80000015 	stw	zero,0(r16)
   44f7c:	80000115 	stw	zero,4(r16)
   44f80:	80000215 	stw	zero,8(r16)
   44f84:	8080030d 	sth	r2,12(r16)
   44f88:	80001915 	stw	zero,100(r16)
   44f8c:	8000038d 	sth	zero,14(r16)
   44f90:	80000415 	stw	zero,16(r16)
   44f94:	80000515 	stw	zero,20(r16)
   44f98:	80000615 	stw	zero,24(r16)
   44f9c:	0046b440 	call	46b44 <memset>
   44fa0:	05800174 	movhi	r22,5
   44fa4:	94400217 	ldw	r17,8(r18)
   44fa8:	05400174 	movhi	r21,5
   44fac:	05000174 	movhi	r20,5
   44fb0:	04c00174 	movhi	r19,5
   44fb4:	b5a0a504 	addi	r22,r22,-32108
   44fb8:	ad60bc04 	addi	r21,r21,-32016
   44fbc:	a520db04 	addi	r20,r20,-31892
   44fc0:	9ce0f204 	addi	r19,r19,-31800
   44fc4:	85800815 	stw	r22,32(r16)
   44fc8:	85400915 	stw	r21,36(r16)
   44fcc:	85000a15 	stw	r20,40(r16)
   44fd0:	84c00b15 	stw	r19,44(r16)
   44fd4:	84000715 	stw	r16,28(r16)
   44fd8:	00800284 	movi	r2,10
   44fdc:	8880030d 	sth	r2,12(r17)
   44fe0:	00800044 	movi	r2,1
   44fe4:	b80d883a 	mov	r6,r23
   44fe8:	89001704 	addi	r4,r17,92
   44fec:	000b883a 	mov	r5,zero
   44ff0:	88000015 	stw	zero,0(r17)
   44ff4:	88000115 	stw	zero,4(r17)
   44ff8:	88000215 	stw	zero,8(r17)
   44ffc:	88001915 	stw	zero,100(r17)
   45000:	8880038d 	sth	r2,14(r17)
   45004:	88000415 	stw	zero,16(r17)
   45008:	88000515 	stw	zero,20(r17)
   4500c:	88000615 	stw	zero,24(r17)
   45010:	0046b440 	call	46b44 <memset>
   45014:	94000317 	ldw	r16,12(r18)
   45018:	00800484 	movi	r2,18
   4501c:	8c400715 	stw	r17,28(r17)
   45020:	8d800815 	stw	r22,32(r17)
   45024:	8d400915 	stw	r21,36(r17)
   45028:	8d000a15 	stw	r20,40(r17)
   4502c:	8cc00b15 	stw	r19,44(r17)
   45030:	8080030d 	sth	r2,12(r16)
   45034:	00800084 	movi	r2,2
   45038:	80000015 	stw	zero,0(r16)
   4503c:	80000115 	stw	zero,4(r16)
   45040:	80000215 	stw	zero,8(r16)
   45044:	80001915 	stw	zero,100(r16)
   45048:	8080038d 	sth	r2,14(r16)
   4504c:	80000415 	stw	zero,16(r16)
   45050:	80000515 	stw	zero,20(r16)
   45054:	80000615 	stw	zero,24(r16)
   45058:	b80d883a 	mov	r6,r23
   4505c:	000b883a 	mov	r5,zero
   45060:	81001704 	addi	r4,r16,92
   45064:	0046b440 	call	46b44 <memset>
   45068:	00800044 	movi	r2,1
   4506c:	84000715 	stw	r16,28(r16)
   45070:	85800815 	stw	r22,32(r16)
   45074:	85400915 	stw	r21,36(r16)
   45078:	85000a15 	stw	r20,40(r16)
   4507c:	84c00b15 	stw	r19,44(r16)
   45080:	90800e15 	stw	r2,56(r18)
   45084:	dfc00817 	ldw	ra,32(sp)
   45088:	ddc00717 	ldw	r23,28(sp)
   4508c:	dd800617 	ldw	r22,24(sp)
   45090:	dd400517 	ldw	r21,20(sp)
   45094:	dd000417 	ldw	r20,16(sp)
   45098:	dcc00317 	ldw	r19,12(sp)
   4509c:	dc800217 	ldw	r18,8(sp)
   450a0:	dc400117 	ldw	r17,4(sp)
   450a4:	dc000017 	ldw	r16,0(sp)
   450a8:	dec00904 	addi	sp,sp,36
   450ac:	f800283a 	ret

000450b0 <__fp_lock>:
   450b0:	0005883a 	mov	r2,zero
   450b4:	f800283a 	ret

000450b8 <__sfmoreglue>:
   450b8:	defffc04 	addi	sp,sp,-16
   450bc:	dc400115 	stw	r17,4(sp)
   450c0:	2c7fffc4 	addi	r17,r5,-1
   450c4:	8c401a24 	muli	r17,r17,104
   450c8:	dc800215 	stw	r18,8(sp)
   450cc:	2825883a 	mov	r18,r5
   450d0:	89401d04 	addi	r5,r17,116
   450d4:	dc000015 	stw	r16,0(sp)
   450d8:	dfc00315 	stw	ra,12(sp)
   450dc:	0045fb00 	call	45fb0 <_malloc_r>
   450e0:	1021883a 	mov	r16,r2
   450e4:	10000726 	beq	r2,zero,45104 <__sfmoreglue+0x4c>
   450e8:	11000304 	addi	r4,r2,12
   450ec:	10000015 	stw	zero,0(r2)
   450f0:	14800115 	stw	r18,4(r2)
   450f4:	11000215 	stw	r4,8(r2)
   450f8:	89801a04 	addi	r6,r17,104
   450fc:	000b883a 	mov	r5,zero
   45100:	0046b440 	call	46b44 <memset>
   45104:	8005883a 	mov	r2,r16
   45108:	dfc00317 	ldw	ra,12(sp)
   4510c:	dc800217 	ldw	r18,8(sp)
   45110:	dc400117 	ldw	r17,4(sp)
   45114:	dc000017 	ldw	r16,0(sp)
   45118:	dec00404 	addi	sp,sp,16
   4511c:	f800283a 	ret

00045120 <__sfp>:
   45120:	defffb04 	addi	sp,sp,-20
   45124:	dc000015 	stw	r16,0(sp)
   45128:	04000174 	movhi	r16,5
   4512c:	84052704 	addi	r16,r16,5276
   45130:	dcc00315 	stw	r19,12(sp)
   45134:	2027883a 	mov	r19,r4
   45138:	81000017 	ldw	r4,0(r16)
   4513c:	dfc00415 	stw	ra,16(sp)
   45140:	dc800215 	stw	r18,8(sp)
   45144:	20800e17 	ldw	r2,56(r4)
   45148:	dc400115 	stw	r17,4(sp)
   4514c:	1000021e 	bne	r2,zero,45158 <__sfp+0x38>
   45150:	0044f140 	call	44f14 <__sinit.part.1>
   45154:	81000017 	ldw	r4,0(r16)
   45158:	2480b804 	addi	r18,r4,736
   4515c:	047fffc4 	movi	r17,-1
   45160:	91000117 	ldw	r4,4(r18)
   45164:	94000217 	ldw	r16,8(r18)
   45168:	213fffc4 	addi	r4,r4,-1
   4516c:	20000a16 	blt	r4,zero,45198 <__sfp+0x78>
   45170:	8080030f 	ldh	r2,12(r16)
   45174:	10000c26 	beq	r2,zero,451a8 <__sfp+0x88>
   45178:	80c01d04 	addi	r3,r16,116
   4517c:	00000206 	br	45188 <__sfp+0x68>
   45180:	18bfe60f 	ldh	r2,-104(r3)
   45184:	10000826 	beq	r2,zero,451a8 <__sfp+0x88>
   45188:	213fffc4 	addi	r4,r4,-1
   4518c:	1c3ffd04 	addi	r16,r3,-12
   45190:	18c01a04 	addi	r3,r3,104
   45194:	247ffa1e 	bne	r4,r17,45180 <__alt_data_end+0xfffde080>
   45198:	90800017 	ldw	r2,0(r18)
   4519c:	10001d26 	beq	r2,zero,45214 <__sfp+0xf4>
   451a0:	1025883a 	mov	r18,r2
   451a4:	003fee06 	br	45160 <__alt_data_end+0xfffde060>
   451a8:	00bfffc4 	movi	r2,-1
   451ac:	8080038d 	sth	r2,14(r16)
   451b0:	00800044 	movi	r2,1
   451b4:	8080030d 	sth	r2,12(r16)
   451b8:	80001915 	stw	zero,100(r16)
   451bc:	80000015 	stw	zero,0(r16)
   451c0:	80000215 	stw	zero,8(r16)
   451c4:	80000115 	stw	zero,4(r16)
   451c8:	80000415 	stw	zero,16(r16)
   451cc:	80000515 	stw	zero,20(r16)
   451d0:	80000615 	stw	zero,24(r16)
   451d4:	01800204 	movi	r6,8
   451d8:	000b883a 	mov	r5,zero
   451dc:	81001704 	addi	r4,r16,92
   451e0:	0046b440 	call	46b44 <memset>
   451e4:	8005883a 	mov	r2,r16
   451e8:	80000c15 	stw	zero,48(r16)
   451ec:	80000d15 	stw	zero,52(r16)
   451f0:	80001115 	stw	zero,68(r16)
   451f4:	80001215 	stw	zero,72(r16)
   451f8:	dfc00417 	ldw	ra,16(sp)
   451fc:	dcc00317 	ldw	r19,12(sp)
   45200:	dc800217 	ldw	r18,8(sp)
   45204:	dc400117 	ldw	r17,4(sp)
   45208:	dc000017 	ldw	r16,0(sp)
   4520c:	dec00504 	addi	sp,sp,20
   45210:	f800283a 	ret
   45214:	01400104 	movi	r5,4
   45218:	9809883a 	mov	r4,r19
   4521c:	00450b80 	call	450b8 <__sfmoreglue>
   45220:	90800015 	stw	r2,0(r18)
   45224:	103fde1e 	bne	r2,zero,451a0 <__alt_data_end+0xfffde0a0>
   45228:	00800304 	movi	r2,12
   4522c:	98800015 	stw	r2,0(r19)
   45230:	0005883a 	mov	r2,zero
   45234:	003ff006 	br	451f8 <__alt_data_end+0xfffde0f8>

00045238 <_cleanup>:
   45238:	00800174 	movhi	r2,5
   4523c:	10852704 	addi	r2,r2,5276
   45240:	11000017 	ldw	r4,0(r2)
   45244:	01400174 	movhi	r5,5
   45248:	29671b04 	addi	r5,r5,-25492
   4524c:	0045c541 	jmpi	45c54 <_fwalk_reent>

00045250 <__sinit>:
   45250:	20800e17 	ldw	r2,56(r4)
   45254:	10000126 	beq	r2,zero,4525c <__sinit+0xc>
   45258:	f800283a 	ret
   4525c:	0044f141 	jmpi	44f14 <__sinit.part.1>

00045260 <__sfp_lock_acquire>:
   45260:	f800283a 	ret

00045264 <__sfp_lock_release>:
   45264:	f800283a 	ret

00045268 <__sinit_lock_acquire>:
   45268:	f800283a 	ret

0004526c <__sinit_lock_release>:
   4526c:	f800283a 	ret

00045270 <__fp_lock_all>:
   45270:	00800174 	movhi	r2,5
   45274:	10852804 	addi	r2,r2,5280
   45278:	11000017 	ldw	r4,0(r2)
   4527c:	01400134 	movhi	r5,4
   45280:	29542c04 	addi	r5,r5,20656
   45284:	0045b901 	jmpi	45b90 <_fwalk>

00045288 <__fp_unlock_all>:
   45288:	00800174 	movhi	r2,5
   4528c:	10852804 	addi	r2,r2,5280
   45290:	11000017 	ldw	r4,0(r2)
   45294:	01400134 	movhi	r5,4
   45298:	2953c004 	addi	r5,r5,20224
   4529c:	0045b901 	jmpi	45b90 <_fwalk>

000452a0 <_malloc_trim_r>:
   452a0:	defffb04 	addi	sp,sp,-20
   452a4:	dcc00315 	stw	r19,12(sp)
   452a8:	04c00174 	movhi	r19,5
   452ac:	dc800215 	stw	r18,8(sp)
   452b0:	dc400115 	stw	r17,4(sp)
   452b4:	dc000015 	stw	r16,0(sp)
   452b8:	dfc00415 	stw	ra,16(sp)
   452bc:	2821883a 	mov	r16,r5
   452c0:	9cffa304 	addi	r19,r19,-372
   452c4:	2025883a 	mov	r18,r4
   452c8:	004d4180 	call	4d418 <__malloc_lock>
   452cc:	98800217 	ldw	r2,8(r19)
   452d0:	14400117 	ldw	r17,4(r2)
   452d4:	00bfff04 	movi	r2,-4
   452d8:	88a2703a 	and	r17,r17,r2
   452dc:	8c21c83a 	sub	r16,r17,r16
   452e0:	8403fbc4 	addi	r16,r16,4079
   452e4:	8020d33a 	srli	r16,r16,12
   452e8:	0083ffc4 	movi	r2,4095
   452ec:	843fffc4 	addi	r16,r16,-1
   452f0:	8020933a 	slli	r16,r16,12
   452f4:	1400060e 	bge	r2,r16,45310 <_malloc_trim_r+0x70>
   452f8:	000b883a 	mov	r5,zero
   452fc:	9009883a 	mov	r4,r18
   45300:	00482400 	call	48240 <_sbrk_r>
   45304:	98c00217 	ldw	r3,8(r19)
   45308:	1c47883a 	add	r3,r3,r17
   4530c:	10c00a26 	beq	r2,r3,45338 <_malloc_trim_r+0x98>
   45310:	9009883a 	mov	r4,r18
   45314:	004d43c0 	call	4d43c <__malloc_unlock>
   45318:	0005883a 	mov	r2,zero
   4531c:	dfc00417 	ldw	ra,16(sp)
   45320:	dcc00317 	ldw	r19,12(sp)
   45324:	dc800217 	ldw	r18,8(sp)
   45328:	dc400117 	ldw	r17,4(sp)
   4532c:	dc000017 	ldw	r16,0(sp)
   45330:	dec00504 	addi	sp,sp,20
   45334:	f800283a 	ret
   45338:	040bc83a 	sub	r5,zero,r16
   4533c:	9009883a 	mov	r4,r18
   45340:	00482400 	call	48240 <_sbrk_r>
   45344:	00ffffc4 	movi	r3,-1
   45348:	10c00d26 	beq	r2,r3,45380 <_malloc_trim_r+0xe0>
   4534c:	00c00174 	movhi	r3,5
   45350:	18cbff04 	addi	r3,r3,12284
   45354:	18800017 	ldw	r2,0(r3)
   45358:	99000217 	ldw	r4,8(r19)
   4535c:	8c23c83a 	sub	r17,r17,r16
   45360:	8c400054 	ori	r17,r17,1
   45364:	1421c83a 	sub	r16,r2,r16
   45368:	24400115 	stw	r17,4(r4)
   4536c:	9009883a 	mov	r4,r18
   45370:	1c000015 	stw	r16,0(r3)
   45374:	004d43c0 	call	4d43c <__malloc_unlock>
   45378:	00800044 	movi	r2,1
   4537c:	003fe706 	br	4531c <__alt_data_end+0xfffde21c>
   45380:	000b883a 	mov	r5,zero
   45384:	9009883a 	mov	r4,r18
   45388:	00482400 	call	48240 <_sbrk_r>
   4538c:	99000217 	ldw	r4,8(r19)
   45390:	014003c4 	movi	r5,15
   45394:	1107c83a 	sub	r3,r2,r4
   45398:	28ffdd0e 	bge	r5,r3,45310 <__alt_data_end+0xfffde210>
   4539c:	01400174 	movhi	r5,5
   453a0:	29452a04 	addi	r5,r5,5288
   453a4:	29400017 	ldw	r5,0(r5)
   453a8:	18c00054 	ori	r3,r3,1
   453ac:	20c00115 	stw	r3,4(r4)
   453b0:	00c00174 	movhi	r3,5
   453b4:	1145c83a 	sub	r2,r2,r5
   453b8:	18cbff04 	addi	r3,r3,12284
   453bc:	18800015 	stw	r2,0(r3)
   453c0:	003fd306 	br	45310 <__alt_data_end+0xfffde210>

000453c4 <_free_r>:
   453c4:	28004126 	beq	r5,zero,454cc <_free_r+0x108>
   453c8:	defffd04 	addi	sp,sp,-12
   453cc:	dc400115 	stw	r17,4(sp)
   453d0:	dc000015 	stw	r16,0(sp)
   453d4:	2023883a 	mov	r17,r4
   453d8:	2821883a 	mov	r16,r5
   453dc:	dfc00215 	stw	ra,8(sp)
   453e0:	004d4180 	call	4d418 <__malloc_lock>
   453e4:	81ffff17 	ldw	r7,-4(r16)
   453e8:	00bfff84 	movi	r2,-2
   453ec:	01000174 	movhi	r4,5
   453f0:	81bffe04 	addi	r6,r16,-8
   453f4:	3884703a 	and	r2,r7,r2
   453f8:	213fa304 	addi	r4,r4,-372
   453fc:	308b883a 	add	r5,r6,r2
   45400:	2a400117 	ldw	r9,4(r5)
   45404:	22000217 	ldw	r8,8(r4)
   45408:	00ffff04 	movi	r3,-4
   4540c:	48c6703a 	and	r3,r9,r3
   45410:	2a005726 	beq	r5,r8,45570 <_free_r+0x1ac>
   45414:	28c00115 	stw	r3,4(r5)
   45418:	39c0004c 	andi	r7,r7,1
   4541c:	3800091e 	bne	r7,zero,45444 <_free_r+0x80>
   45420:	823ffe17 	ldw	r8,-8(r16)
   45424:	22400204 	addi	r9,r4,8
   45428:	320dc83a 	sub	r6,r6,r8
   4542c:	31c00217 	ldw	r7,8(r6)
   45430:	1205883a 	add	r2,r2,r8
   45434:	3a406526 	beq	r7,r9,455cc <_free_r+0x208>
   45438:	32000317 	ldw	r8,12(r6)
   4543c:	3a000315 	stw	r8,12(r7)
   45440:	41c00215 	stw	r7,8(r8)
   45444:	28cf883a 	add	r7,r5,r3
   45448:	39c00117 	ldw	r7,4(r7)
   4544c:	39c0004c 	andi	r7,r7,1
   45450:	38003a26 	beq	r7,zero,4553c <_free_r+0x178>
   45454:	10c00054 	ori	r3,r2,1
   45458:	30c00115 	stw	r3,4(r6)
   4545c:	3087883a 	add	r3,r6,r2
   45460:	18800015 	stw	r2,0(r3)
   45464:	00c07fc4 	movi	r3,511
   45468:	18801936 	bltu	r3,r2,454d0 <_free_r+0x10c>
   4546c:	1004d0fa 	srli	r2,r2,3
   45470:	01c00044 	movi	r7,1
   45474:	21400117 	ldw	r5,4(r4)
   45478:	10c00044 	addi	r3,r2,1
   4547c:	18c7883a 	add	r3,r3,r3
   45480:	1005d0ba 	srai	r2,r2,2
   45484:	18c7883a 	add	r3,r3,r3
   45488:	18c7883a 	add	r3,r3,r3
   4548c:	1907883a 	add	r3,r3,r4
   45490:	3884983a 	sll	r2,r7,r2
   45494:	19c00017 	ldw	r7,0(r3)
   45498:	1a3ffe04 	addi	r8,r3,-8
   4549c:	1144b03a 	or	r2,r2,r5
   454a0:	32000315 	stw	r8,12(r6)
   454a4:	31c00215 	stw	r7,8(r6)
   454a8:	20800115 	stw	r2,4(r4)
   454ac:	19800015 	stw	r6,0(r3)
   454b0:	39800315 	stw	r6,12(r7)
   454b4:	8809883a 	mov	r4,r17
   454b8:	dfc00217 	ldw	ra,8(sp)
   454bc:	dc400117 	ldw	r17,4(sp)
   454c0:	dc000017 	ldw	r16,0(sp)
   454c4:	dec00304 	addi	sp,sp,12
   454c8:	004d43c1 	jmpi	4d43c <__malloc_unlock>
   454cc:	f800283a 	ret
   454d0:	100ad27a 	srli	r5,r2,9
   454d4:	00c00104 	movi	r3,4
   454d8:	19404a36 	bltu	r3,r5,45604 <_free_r+0x240>
   454dc:	100ad1ba 	srli	r5,r2,6
   454e0:	28c00e44 	addi	r3,r5,57
   454e4:	18c7883a 	add	r3,r3,r3
   454e8:	29400e04 	addi	r5,r5,56
   454ec:	18c7883a 	add	r3,r3,r3
   454f0:	18c7883a 	add	r3,r3,r3
   454f4:	1909883a 	add	r4,r3,r4
   454f8:	20c00017 	ldw	r3,0(r4)
   454fc:	01c00174 	movhi	r7,5
   45500:	213ffe04 	addi	r4,r4,-8
   45504:	39ffa304 	addi	r7,r7,-372
   45508:	20c04426 	beq	r4,r3,4561c <_free_r+0x258>
   4550c:	01ffff04 	movi	r7,-4
   45510:	19400117 	ldw	r5,4(r3)
   45514:	29ca703a 	and	r5,r5,r7
   45518:	1140022e 	bgeu	r2,r5,45524 <_free_r+0x160>
   4551c:	18c00217 	ldw	r3,8(r3)
   45520:	20fffb1e 	bne	r4,r3,45510 <__alt_data_end+0xfffde410>
   45524:	19000317 	ldw	r4,12(r3)
   45528:	31000315 	stw	r4,12(r6)
   4552c:	30c00215 	stw	r3,8(r6)
   45530:	21800215 	stw	r6,8(r4)
   45534:	19800315 	stw	r6,12(r3)
   45538:	003fde06 	br	454b4 <__alt_data_end+0xfffde3b4>
   4553c:	29c00217 	ldw	r7,8(r5)
   45540:	10c5883a 	add	r2,r2,r3
   45544:	00c00174 	movhi	r3,5
   45548:	18ffa504 	addi	r3,r3,-364
   4554c:	38c03b26 	beq	r7,r3,4563c <_free_r+0x278>
   45550:	2a000317 	ldw	r8,12(r5)
   45554:	11400054 	ori	r5,r2,1
   45558:	3087883a 	add	r3,r6,r2
   4555c:	3a000315 	stw	r8,12(r7)
   45560:	41c00215 	stw	r7,8(r8)
   45564:	31400115 	stw	r5,4(r6)
   45568:	18800015 	stw	r2,0(r3)
   4556c:	003fbd06 	br	45464 <__alt_data_end+0xfffde364>
   45570:	39c0004c 	andi	r7,r7,1
   45574:	10c5883a 	add	r2,r2,r3
   45578:	3800071e 	bne	r7,zero,45598 <_free_r+0x1d4>
   4557c:	81fffe17 	ldw	r7,-8(r16)
   45580:	31cdc83a 	sub	r6,r6,r7
   45584:	30c00317 	ldw	r3,12(r6)
   45588:	31400217 	ldw	r5,8(r6)
   4558c:	11c5883a 	add	r2,r2,r7
   45590:	28c00315 	stw	r3,12(r5)
   45594:	19400215 	stw	r5,8(r3)
   45598:	10c00054 	ori	r3,r2,1
   4559c:	30c00115 	stw	r3,4(r6)
   455a0:	00c00174 	movhi	r3,5
   455a4:	18c52b04 	addi	r3,r3,5292
   455a8:	18c00017 	ldw	r3,0(r3)
   455ac:	21800215 	stw	r6,8(r4)
   455b0:	10ffc036 	bltu	r2,r3,454b4 <__alt_data_end+0xfffde3b4>
   455b4:	00800174 	movhi	r2,5
   455b8:	108bf704 	addi	r2,r2,12252
   455bc:	11400017 	ldw	r5,0(r2)
   455c0:	8809883a 	mov	r4,r17
   455c4:	00452a00 	call	452a0 <_malloc_trim_r>
   455c8:	003fba06 	br	454b4 <__alt_data_end+0xfffde3b4>
   455cc:	28c9883a 	add	r4,r5,r3
   455d0:	21000117 	ldw	r4,4(r4)
   455d4:	2100004c 	andi	r4,r4,1
   455d8:	2000391e 	bne	r4,zero,456c0 <_free_r+0x2fc>
   455dc:	29c00217 	ldw	r7,8(r5)
   455e0:	29000317 	ldw	r4,12(r5)
   455e4:	1885883a 	add	r2,r3,r2
   455e8:	10c00054 	ori	r3,r2,1
   455ec:	39000315 	stw	r4,12(r7)
   455f0:	21c00215 	stw	r7,8(r4)
   455f4:	30c00115 	stw	r3,4(r6)
   455f8:	308d883a 	add	r6,r6,r2
   455fc:	30800015 	stw	r2,0(r6)
   45600:	003fac06 	br	454b4 <__alt_data_end+0xfffde3b4>
   45604:	00c00504 	movi	r3,20
   45608:	19401536 	bltu	r3,r5,45660 <_free_r+0x29c>
   4560c:	28c01704 	addi	r3,r5,92
   45610:	18c7883a 	add	r3,r3,r3
   45614:	294016c4 	addi	r5,r5,91
   45618:	003fb406 	br	454ec <__alt_data_end+0xfffde3ec>
   4561c:	280bd0ba 	srai	r5,r5,2
   45620:	00c00044 	movi	r3,1
   45624:	38800117 	ldw	r2,4(r7)
   45628:	194a983a 	sll	r5,r3,r5
   4562c:	2007883a 	mov	r3,r4
   45630:	2884b03a 	or	r2,r5,r2
   45634:	38800115 	stw	r2,4(r7)
   45638:	003fbb06 	br	45528 <__alt_data_end+0xfffde428>
   4563c:	21800515 	stw	r6,20(r4)
   45640:	21800415 	stw	r6,16(r4)
   45644:	10c00054 	ori	r3,r2,1
   45648:	31c00315 	stw	r7,12(r6)
   4564c:	31c00215 	stw	r7,8(r6)
   45650:	30c00115 	stw	r3,4(r6)
   45654:	308d883a 	add	r6,r6,r2
   45658:	30800015 	stw	r2,0(r6)
   4565c:	003f9506 	br	454b4 <__alt_data_end+0xfffde3b4>
   45660:	00c01504 	movi	r3,84
   45664:	19400536 	bltu	r3,r5,4567c <_free_r+0x2b8>
   45668:	100ad33a 	srli	r5,r2,12
   4566c:	28c01bc4 	addi	r3,r5,111
   45670:	18c7883a 	add	r3,r3,r3
   45674:	29401b84 	addi	r5,r5,110
   45678:	003f9c06 	br	454ec <__alt_data_end+0xfffde3ec>
   4567c:	00c05504 	movi	r3,340
   45680:	19400536 	bltu	r3,r5,45698 <_free_r+0x2d4>
   45684:	100ad3fa 	srli	r5,r2,15
   45688:	28c01e04 	addi	r3,r5,120
   4568c:	18c7883a 	add	r3,r3,r3
   45690:	29401dc4 	addi	r5,r5,119
   45694:	003f9506 	br	454ec <__alt_data_end+0xfffde3ec>
   45698:	00c15504 	movi	r3,1364
   4569c:	19400536 	bltu	r3,r5,456b4 <_free_r+0x2f0>
   456a0:	100ad4ba 	srli	r5,r2,18
   456a4:	28c01f44 	addi	r3,r5,125
   456a8:	18c7883a 	add	r3,r3,r3
   456ac:	29401f04 	addi	r5,r5,124
   456b0:	003f8e06 	br	454ec <__alt_data_end+0xfffde3ec>
   456b4:	00c03f84 	movi	r3,254
   456b8:	01401f84 	movi	r5,126
   456bc:	003f8b06 	br	454ec <__alt_data_end+0xfffde3ec>
   456c0:	10c00054 	ori	r3,r2,1
   456c4:	30c00115 	stw	r3,4(r6)
   456c8:	308d883a 	add	r6,r6,r2
   456cc:	30800015 	stw	r2,0(r6)
   456d0:	003f7806 	br	454b4 <__alt_data_end+0xfffde3b4>

000456d4 <__sfvwrite_r>:
   456d4:	30800217 	ldw	r2,8(r6)
   456d8:	10006726 	beq	r2,zero,45878 <__sfvwrite_r+0x1a4>
   456dc:	28c0030b 	ldhu	r3,12(r5)
   456e0:	defff404 	addi	sp,sp,-48
   456e4:	dd400715 	stw	r21,28(sp)
   456e8:	dd000615 	stw	r20,24(sp)
   456ec:	dc000215 	stw	r16,8(sp)
   456f0:	dfc00b15 	stw	ra,44(sp)
   456f4:	df000a15 	stw	fp,40(sp)
   456f8:	ddc00915 	stw	r23,36(sp)
   456fc:	dd800815 	stw	r22,32(sp)
   45700:	dcc00515 	stw	r19,20(sp)
   45704:	dc800415 	stw	r18,16(sp)
   45708:	dc400315 	stw	r17,12(sp)
   4570c:	1880020c 	andi	r2,r3,8
   45710:	2821883a 	mov	r16,r5
   45714:	202b883a 	mov	r21,r4
   45718:	3029883a 	mov	r20,r6
   4571c:	10002726 	beq	r2,zero,457bc <__sfvwrite_r+0xe8>
   45720:	28800417 	ldw	r2,16(r5)
   45724:	10002526 	beq	r2,zero,457bc <__sfvwrite_r+0xe8>
   45728:	1880008c 	andi	r2,r3,2
   4572c:	a4400017 	ldw	r17,0(r20)
   45730:	10002a26 	beq	r2,zero,457dc <__sfvwrite_r+0x108>
   45734:	05a00034 	movhi	r22,32768
   45738:	0027883a 	mov	r19,zero
   4573c:	0025883a 	mov	r18,zero
   45740:	b5bf0004 	addi	r22,r22,-1024
   45744:	980d883a 	mov	r6,r19
   45748:	a809883a 	mov	r4,r21
   4574c:	90004626 	beq	r18,zero,45868 <__sfvwrite_r+0x194>
   45750:	900f883a 	mov	r7,r18
   45754:	b480022e 	bgeu	r22,r18,45760 <__sfvwrite_r+0x8c>
   45758:	01e00034 	movhi	r7,32768
   4575c:	39ff0004 	addi	r7,r7,-1024
   45760:	80800917 	ldw	r2,36(r16)
   45764:	81400717 	ldw	r5,28(r16)
   45768:	103ee83a 	callr	r2
   4576c:	0080570e 	bge	zero,r2,458cc <__sfvwrite_r+0x1f8>
   45770:	a0c00217 	ldw	r3,8(r20)
   45774:	98a7883a 	add	r19,r19,r2
   45778:	90a5c83a 	sub	r18,r18,r2
   4577c:	1885c83a 	sub	r2,r3,r2
   45780:	a0800215 	stw	r2,8(r20)
   45784:	103fef1e 	bne	r2,zero,45744 <__alt_data_end+0xfffde644>
   45788:	0005883a 	mov	r2,zero
   4578c:	dfc00b17 	ldw	ra,44(sp)
   45790:	df000a17 	ldw	fp,40(sp)
   45794:	ddc00917 	ldw	r23,36(sp)
   45798:	dd800817 	ldw	r22,32(sp)
   4579c:	dd400717 	ldw	r21,28(sp)
   457a0:	dd000617 	ldw	r20,24(sp)
   457a4:	dcc00517 	ldw	r19,20(sp)
   457a8:	dc800417 	ldw	r18,16(sp)
   457ac:	dc400317 	ldw	r17,12(sp)
   457b0:	dc000217 	ldw	r16,8(sp)
   457b4:	dec00c04 	addi	sp,sp,48
   457b8:	f800283a 	ret
   457bc:	800b883a 	mov	r5,r16
   457c0:	a809883a 	mov	r4,r21
   457c4:	004327c0 	call	4327c <__swsetup_r>
   457c8:	1000eb1e 	bne	r2,zero,45b78 <__sfvwrite_r+0x4a4>
   457cc:	80c0030b 	ldhu	r3,12(r16)
   457d0:	a4400017 	ldw	r17,0(r20)
   457d4:	1880008c 	andi	r2,r3,2
   457d8:	103fd61e 	bne	r2,zero,45734 <__alt_data_end+0xfffde634>
   457dc:	1880004c 	andi	r2,r3,1
   457e0:	10003f1e 	bne	r2,zero,458e0 <__sfvwrite_r+0x20c>
   457e4:	0039883a 	mov	fp,zero
   457e8:	0025883a 	mov	r18,zero
   457ec:	90001a26 	beq	r18,zero,45858 <__sfvwrite_r+0x184>
   457f0:	1880800c 	andi	r2,r3,512
   457f4:	84c00217 	ldw	r19,8(r16)
   457f8:	10002126 	beq	r2,zero,45880 <__sfvwrite_r+0x1ac>
   457fc:	982f883a 	mov	r23,r19
   45800:	94c09336 	bltu	r18,r19,45a50 <__sfvwrite_r+0x37c>
   45804:	1881200c 	andi	r2,r3,1152
   45808:	10009e1e 	bne	r2,zero,45a84 <__sfvwrite_r+0x3b0>
   4580c:	81000017 	ldw	r4,0(r16)
   45810:	b80d883a 	mov	r6,r23
   45814:	e00b883a 	mov	r5,fp
   45818:	00469e80 	call	469e8 <memmove>
   4581c:	80c00217 	ldw	r3,8(r16)
   45820:	81000017 	ldw	r4,0(r16)
   45824:	9005883a 	mov	r2,r18
   45828:	1ce7c83a 	sub	r19,r3,r19
   4582c:	25cf883a 	add	r7,r4,r23
   45830:	84c00215 	stw	r19,8(r16)
   45834:	81c00015 	stw	r7,0(r16)
   45838:	a0c00217 	ldw	r3,8(r20)
   4583c:	e0b9883a 	add	fp,fp,r2
   45840:	90a5c83a 	sub	r18,r18,r2
   45844:	18a7c83a 	sub	r19,r3,r2
   45848:	a4c00215 	stw	r19,8(r20)
   4584c:	983fce26 	beq	r19,zero,45788 <__alt_data_end+0xfffde688>
   45850:	80c0030b 	ldhu	r3,12(r16)
   45854:	903fe61e 	bne	r18,zero,457f0 <__alt_data_end+0xfffde6f0>
   45858:	8f000017 	ldw	fp,0(r17)
   4585c:	8c800117 	ldw	r18,4(r17)
   45860:	8c400204 	addi	r17,r17,8
   45864:	003fe106 	br	457ec <__alt_data_end+0xfffde6ec>
   45868:	8cc00017 	ldw	r19,0(r17)
   4586c:	8c800117 	ldw	r18,4(r17)
   45870:	8c400204 	addi	r17,r17,8
   45874:	003fb306 	br	45744 <__alt_data_end+0xfffde644>
   45878:	0005883a 	mov	r2,zero
   4587c:	f800283a 	ret
   45880:	81000017 	ldw	r4,0(r16)
   45884:	80800417 	ldw	r2,16(r16)
   45888:	11005736 	bltu	r2,r4,459e8 <__sfvwrite_r+0x314>
   4588c:	85c00517 	ldw	r23,20(r16)
   45890:	95c05536 	bltu	r18,r23,459e8 <__sfvwrite_r+0x314>
   45894:	00a00034 	movhi	r2,32768
   45898:	10bfffc4 	addi	r2,r2,-1
   4589c:	9009883a 	mov	r4,r18
   458a0:	1480012e 	bgeu	r2,r18,458a8 <__sfvwrite_r+0x1d4>
   458a4:	1009883a 	mov	r4,r2
   458a8:	b80b883a 	mov	r5,r23
   458ac:	004aed80 	call	4aed8 <__divsi3>
   458b0:	15cf383a 	mul	r7,r2,r23
   458b4:	81400717 	ldw	r5,28(r16)
   458b8:	80800917 	ldw	r2,36(r16)
   458bc:	e00d883a 	mov	r6,fp
   458c0:	a809883a 	mov	r4,r21
   458c4:	103ee83a 	callr	r2
   458c8:	00bfdb16 	blt	zero,r2,45838 <__alt_data_end+0xfffde738>
   458cc:	8080030b 	ldhu	r2,12(r16)
   458d0:	10801014 	ori	r2,r2,64
   458d4:	8080030d 	sth	r2,12(r16)
   458d8:	00bfffc4 	movi	r2,-1
   458dc:	003fab06 	br	4578c <__alt_data_end+0xfffde68c>
   458e0:	0027883a 	mov	r19,zero
   458e4:	0011883a 	mov	r8,zero
   458e8:	0039883a 	mov	fp,zero
   458ec:	0025883a 	mov	r18,zero
   458f0:	90001f26 	beq	r18,zero,45970 <__sfvwrite_r+0x29c>
   458f4:	40005a26 	beq	r8,zero,45a60 <__sfvwrite_r+0x38c>
   458f8:	982d883a 	mov	r22,r19
   458fc:	94c0012e 	bgeu	r18,r19,45904 <__sfvwrite_r+0x230>
   45900:	902d883a 	mov	r22,r18
   45904:	81000017 	ldw	r4,0(r16)
   45908:	80800417 	ldw	r2,16(r16)
   4590c:	b02f883a 	mov	r23,r22
   45910:	81c00517 	ldw	r7,20(r16)
   45914:	1100032e 	bgeu	r2,r4,45924 <__sfvwrite_r+0x250>
   45918:	80c00217 	ldw	r3,8(r16)
   4591c:	38c7883a 	add	r3,r7,r3
   45920:	1d801816 	blt	r3,r22,45984 <__sfvwrite_r+0x2b0>
   45924:	b1c03e16 	blt	r22,r7,45a20 <__sfvwrite_r+0x34c>
   45928:	80800917 	ldw	r2,36(r16)
   4592c:	81400717 	ldw	r5,28(r16)
   45930:	e00d883a 	mov	r6,fp
   45934:	da000115 	stw	r8,4(sp)
   45938:	a809883a 	mov	r4,r21
   4593c:	103ee83a 	callr	r2
   45940:	102f883a 	mov	r23,r2
   45944:	da000117 	ldw	r8,4(sp)
   45948:	00bfe00e 	bge	zero,r2,458cc <__alt_data_end+0xfffde7cc>
   4594c:	9de7c83a 	sub	r19,r19,r23
   45950:	98001f26 	beq	r19,zero,459d0 <__sfvwrite_r+0x2fc>
   45954:	a0800217 	ldw	r2,8(r20)
   45958:	e5f9883a 	add	fp,fp,r23
   4595c:	95e5c83a 	sub	r18,r18,r23
   45960:	15efc83a 	sub	r23,r2,r23
   45964:	a5c00215 	stw	r23,8(r20)
   45968:	b83f8726 	beq	r23,zero,45788 <__alt_data_end+0xfffde688>
   4596c:	903fe11e 	bne	r18,zero,458f4 <__alt_data_end+0xfffde7f4>
   45970:	8f000017 	ldw	fp,0(r17)
   45974:	8c800117 	ldw	r18,4(r17)
   45978:	0011883a 	mov	r8,zero
   4597c:	8c400204 	addi	r17,r17,8
   45980:	003fdb06 	br	458f0 <__alt_data_end+0xfffde7f0>
   45984:	180d883a 	mov	r6,r3
   45988:	e00b883a 	mov	r5,fp
   4598c:	da000115 	stw	r8,4(sp)
   45990:	d8c00015 	stw	r3,0(sp)
   45994:	00469e80 	call	469e8 <memmove>
   45998:	d8c00017 	ldw	r3,0(sp)
   4599c:	80800017 	ldw	r2,0(r16)
   459a0:	800b883a 	mov	r5,r16
   459a4:	a809883a 	mov	r4,r21
   459a8:	10c5883a 	add	r2,r2,r3
   459ac:	80800015 	stw	r2,0(r16)
   459b0:	d8c00015 	stw	r3,0(sp)
   459b4:	0044e740 	call	44e74 <_fflush_r>
   459b8:	d8c00017 	ldw	r3,0(sp)
   459bc:	da000117 	ldw	r8,4(sp)
   459c0:	103fc21e 	bne	r2,zero,458cc <__alt_data_end+0xfffde7cc>
   459c4:	182f883a 	mov	r23,r3
   459c8:	9de7c83a 	sub	r19,r19,r23
   459cc:	983fe11e 	bne	r19,zero,45954 <__alt_data_end+0xfffde854>
   459d0:	800b883a 	mov	r5,r16
   459d4:	a809883a 	mov	r4,r21
   459d8:	0044e740 	call	44e74 <_fflush_r>
   459dc:	103fbb1e 	bne	r2,zero,458cc <__alt_data_end+0xfffde7cc>
   459e0:	0011883a 	mov	r8,zero
   459e4:	003fdb06 	br	45954 <__alt_data_end+0xfffde854>
   459e8:	94c0012e 	bgeu	r18,r19,459f0 <__sfvwrite_r+0x31c>
   459ec:	9027883a 	mov	r19,r18
   459f0:	980d883a 	mov	r6,r19
   459f4:	e00b883a 	mov	r5,fp
   459f8:	00469e80 	call	469e8 <memmove>
   459fc:	80800217 	ldw	r2,8(r16)
   45a00:	80c00017 	ldw	r3,0(r16)
   45a04:	14c5c83a 	sub	r2,r2,r19
   45a08:	1cc7883a 	add	r3,r3,r19
   45a0c:	80800215 	stw	r2,8(r16)
   45a10:	80c00015 	stw	r3,0(r16)
   45a14:	10004326 	beq	r2,zero,45b24 <__sfvwrite_r+0x450>
   45a18:	9805883a 	mov	r2,r19
   45a1c:	003f8606 	br	45838 <__alt_data_end+0xfffde738>
   45a20:	b00d883a 	mov	r6,r22
   45a24:	e00b883a 	mov	r5,fp
   45a28:	da000115 	stw	r8,4(sp)
   45a2c:	00469e80 	call	469e8 <memmove>
   45a30:	80800217 	ldw	r2,8(r16)
   45a34:	80c00017 	ldw	r3,0(r16)
   45a38:	da000117 	ldw	r8,4(sp)
   45a3c:	1585c83a 	sub	r2,r2,r22
   45a40:	1dad883a 	add	r22,r3,r22
   45a44:	80800215 	stw	r2,8(r16)
   45a48:	85800015 	stw	r22,0(r16)
   45a4c:	003fbf06 	br	4594c <__alt_data_end+0xfffde84c>
   45a50:	81000017 	ldw	r4,0(r16)
   45a54:	9027883a 	mov	r19,r18
   45a58:	902f883a 	mov	r23,r18
   45a5c:	003f6c06 	br	45810 <__alt_data_end+0xfffde710>
   45a60:	900d883a 	mov	r6,r18
   45a64:	01400284 	movi	r5,10
   45a68:	e009883a 	mov	r4,fp
   45a6c:	00467bc0 	call	467bc <memchr>
   45a70:	10003e26 	beq	r2,zero,45b6c <__sfvwrite_r+0x498>
   45a74:	10800044 	addi	r2,r2,1
   45a78:	1727c83a 	sub	r19,r2,fp
   45a7c:	02000044 	movi	r8,1
   45a80:	003f9d06 	br	458f8 <__alt_data_end+0xfffde7f8>
   45a84:	80800517 	ldw	r2,20(r16)
   45a88:	81400417 	ldw	r5,16(r16)
   45a8c:	81c00017 	ldw	r7,0(r16)
   45a90:	10a7883a 	add	r19,r2,r2
   45a94:	9885883a 	add	r2,r19,r2
   45a98:	1026d7fa 	srli	r19,r2,31
   45a9c:	396dc83a 	sub	r22,r7,r5
   45aa0:	b1000044 	addi	r4,r22,1
   45aa4:	9885883a 	add	r2,r19,r2
   45aa8:	1027d07a 	srai	r19,r2,1
   45aac:	2485883a 	add	r2,r4,r18
   45ab0:	980d883a 	mov	r6,r19
   45ab4:	9880022e 	bgeu	r19,r2,45ac0 <__sfvwrite_r+0x3ec>
   45ab8:	1027883a 	mov	r19,r2
   45abc:	100d883a 	mov	r6,r2
   45ac0:	18c1000c 	andi	r3,r3,1024
   45ac4:	18001c26 	beq	r3,zero,45b38 <__sfvwrite_r+0x464>
   45ac8:	300b883a 	mov	r5,r6
   45acc:	a809883a 	mov	r4,r21
   45ad0:	0045fb00 	call	45fb0 <_malloc_r>
   45ad4:	102f883a 	mov	r23,r2
   45ad8:	10002926 	beq	r2,zero,45b80 <__sfvwrite_r+0x4ac>
   45adc:	81400417 	ldw	r5,16(r16)
   45ae0:	b00d883a 	mov	r6,r22
   45ae4:	1009883a 	mov	r4,r2
   45ae8:	00468a00 	call	468a0 <memcpy>
   45aec:	8080030b 	ldhu	r2,12(r16)
   45af0:	00fedfc4 	movi	r3,-1153
   45af4:	10c4703a 	and	r2,r2,r3
   45af8:	10802014 	ori	r2,r2,128
   45afc:	8080030d 	sth	r2,12(r16)
   45b00:	bd89883a 	add	r4,r23,r22
   45b04:	9d8fc83a 	sub	r7,r19,r22
   45b08:	85c00415 	stw	r23,16(r16)
   45b0c:	84c00515 	stw	r19,20(r16)
   45b10:	81000015 	stw	r4,0(r16)
   45b14:	9027883a 	mov	r19,r18
   45b18:	81c00215 	stw	r7,8(r16)
   45b1c:	902f883a 	mov	r23,r18
   45b20:	003f3b06 	br	45810 <__alt_data_end+0xfffde710>
   45b24:	800b883a 	mov	r5,r16
   45b28:	a809883a 	mov	r4,r21
   45b2c:	0044e740 	call	44e74 <_fflush_r>
   45b30:	103fb926 	beq	r2,zero,45a18 <__alt_data_end+0xfffde918>
   45b34:	003f6506 	br	458cc <__alt_data_end+0xfffde7cc>
   45b38:	a809883a 	mov	r4,r21
   45b3c:	0047c680 	call	47c68 <_realloc_r>
   45b40:	102f883a 	mov	r23,r2
   45b44:	103fee1e 	bne	r2,zero,45b00 <__alt_data_end+0xfffdea00>
   45b48:	81400417 	ldw	r5,16(r16)
   45b4c:	a809883a 	mov	r4,r21
   45b50:	00453c40 	call	453c4 <_free_r>
   45b54:	8080030b 	ldhu	r2,12(r16)
   45b58:	00ffdfc4 	movi	r3,-129
   45b5c:	1884703a 	and	r2,r3,r2
   45b60:	00c00304 	movi	r3,12
   45b64:	a8c00015 	stw	r3,0(r21)
   45b68:	003f5906 	br	458d0 <__alt_data_end+0xfffde7d0>
   45b6c:	94c00044 	addi	r19,r18,1
   45b70:	02000044 	movi	r8,1
   45b74:	003f6006 	br	458f8 <__alt_data_end+0xfffde7f8>
   45b78:	00bfffc4 	movi	r2,-1
   45b7c:	003f0306 	br	4578c <__alt_data_end+0xfffde68c>
   45b80:	00800304 	movi	r2,12
   45b84:	a8800015 	stw	r2,0(r21)
   45b88:	8080030b 	ldhu	r2,12(r16)
   45b8c:	003f5006 	br	458d0 <__alt_data_end+0xfffde7d0>

00045b90 <_fwalk>:
   45b90:	defff704 	addi	sp,sp,-36
   45b94:	dd000415 	stw	r20,16(sp)
   45b98:	dfc00815 	stw	ra,32(sp)
   45b9c:	ddc00715 	stw	r23,28(sp)
   45ba0:	dd800615 	stw	r22,24(sp)
   45ba4:	dd400515 	stw	r21,20(sp)
   45ba8:	dcc00315 	stw	r19,12(sp)
   45bac:	dc800215 	stw	r18,8(sp)
   45bb0:	dc400115 	stw	r17,4(sp)
   45bb4:	dc000015 	stw	r16,0(sp)
   45bb8:	2500b804 	addi	r20,r4,736
   45bbc:	a0002326 	beq	r20,zero,45c4c <_fwalk+0xbc>
   45bc0:	282b883a 	mov	r21,r5
   45bc4:	002f883a 	mov	r23,zero
   45bc8:	05800044 	movi	r22,1
   45bcc:	04ffffc4 	movi	r19,-1
   45bd0:	a4400117 	ldw	r17,4(r20)
   45bd4:	a4800217 	ldw	r18,8(r20)
   45bd8:	8c7fffc4 	addi	r17,r17,-1
   45bdc:	88000d16 	blt	r17,zero,45c14 <_fwalk+0x84>
   45be0:	94000304 	addi	r16,r18,12
   45be4:	94800384 	addi	r18,r18,14
   45be8:	8080000b 	ldhu	r2,0(r16)
   45bec:	8c7fffc4 	addi	r17,r17,-1
   45bf0:	813ffd04 	addi	r4,r16,-12
   45bf4:	b080042e 	bgeu	r22,r2,45c08 <_fwalk+0x78>
   45bf8:	9080000f 	ldh	r2,0(r18)
   45bfc:	14c00226 	beq	r2,r19,45c08 <_fwalk+0x78>
   45c00:	a83ee83a 	callr	r21
   45c04:	b8aeb03a 	or	r23,r23,r2
   45c08:	84001a04 	addi	r16,r16,104
   45c0c:	94801a04 	addi	r18,r18,104
   45c10:	8cfff51e 	bne	r17,r19,45be8 <__alt_data_end+0xfffdeae8>
   45c14:	a5000017 	ldw	r20,0(r20)
   45c18:	a03fed1e 	bne	r20,zero,45bd0 <__alt_data_end+0xfffdead0>
   45c1c:	b805883a 	mov	r2,r23
   45c20:	dfc00817 	ldw	ra,32(sp)
   45c24:	ddc00717 	ldw	r23,28(sp)
   45c28:	dd800617 	ldw	r22,24(sp)
   45c2c:	dd400517 	ldw	r21,20(sp)
   45c30:	dd000417 	ldw	r20,16(sp)
   45c34:	dcc00317 	ldw	r19,12(sp)
   45c38:	dc800217 	ldw	r18,8(sp)
   45c3c:	dc400117 	ldw	r17,4(sp)
   45c40:	dc000017 	ldw	r16,0(sp)
   45c44:	dec00904 	addi	sp,sp,36
   45c48:	f800283a 	ret
   45c4c:	002f883a 	mov	r23,zero
   45c50:	003ff206 	br	45c1c <__alt_data_end+0xfffdeb1c>

00045c54 <_fwalk_reent>:
   45c54:	defff704 	addi	sp,sp,-36
   45c58:	dd000415 	stw	r20,16(sp)
   45c5c:	dfc00815 	stw	ra,32(sp)
   45c60:	ddc00715 	stw	r23,28(sp)
   45c64:	dd800615 	stw	r22,24(sp)
   45c68:	dd400515 	stw	r21,20(sp)
   45c6c:	dcc00315 	stw	r19,12(sp)
   45c70:	dc800215 	stw	r18,8(sp)
   45c74:	dc400115 	stw	r17,4(sp)
   45c78:	dc000015 	stw	r16,0(sp)
   45c7c:	2500b804 	addi	r20,r4,736
   45c80:	a0002326 	beq	r20,zero,45d10 <_fwalk_reent+0xbc>
   45c84:	282b883a 	mov	r21,r5
   45c88:	2027883a 	mov	r19,r4
   45c8c:	002f883a 	mov	r23,zero
   45c90:	05800044 	movi	r22,1
   45c94:	04bfffc4 	movi	r18,-1
   45c98:	a4400117 	ldw	r17,4(r20)
   45c9c:	a4000217 	ldw	r16,8(r20)
   45ca0:	8c7fffc4 	addi	r17,r17,-1
   45ca4:	88000c16 	blt	r17,zero,45cd8 <_fwalk_reent+0x84>
   45ca8:	84000304 	addi	r16,r16,12
   45cac:	8080000b 	ldhu	r2,0(r16)
   45cb0:	8c7fffc4 	addi	r17,r17,-1
   45cb4:	817ffd04 	addi	r5,r16,-12
   45cb8:	b080052e 	bgeu	r22,r2,45cd0 <_fwalk_reent+0x7c>
   45cbc:	8080008f 	ldh	r2,2(r16)
   45cc0:	9809883a 	mov	r4,r19
   45cc4:	14800226 	beq	r2,r18,45cd0 <_fwalk_reent+0x7c>
   45cc8:	a83ee83a 	callr	r21
   45ccc:	b8aeb03a 	or	r23,r23,r2
   45cd0:	84001a04 	addi	r16,r16,104
   45cd4:	8cbff51e 	bne	r17,r18,45cac <__alt_data_end+0xfffdebac>
   45cd8:	a5000017 	ldw	r20,0(r20)
   45cdc:	a03fee1e 	bne	r20,zero,45c98 <__alt_data_end+0xfffdeb98>
   45ce0:	b805883a 	mov	r2,r23
   45ce4:	dfc00817 	ldw	ra,32(sp)
   45ce8:	ddc00717 	ldw	r23,28(sp)
   45cec:	dd800617 	ldw	r22,24(sp)
   45cf0:	dd400517 	ldw	r21,20(sp)
   45cf4:	dd000417 	ldw	r20,16(sp)
   45cf8:	dcc00317 	ldw	r19,12(sp)
   45cfc:	dc800217 	ldw	r18,8(sp)
   45d00:	dc400117 	ldw	r17,4(sp)
   45d04:	dc000017 	ldw	r16,0(sp)
   45d08:	dec00904 	addi	sp,sp,36
   45d0c:	f800283a 	ret
   45d10:	002f883a 	mov	r23,zero
   45d14:	003ff206 	br	45ce0 <__alt_data_end+0xfffdebe0>

00045d18 <_setlocale_r>:
   45d18:	30001b26 	beq	r6,zero,45d88 <_setlocale_r+0x70>
   45d1c:	01400174 	movhi	r5,5
   45d20:	defffe04 	addi	sp,sp,-8
   45d24:	297e1d04 	addi	r5,r5,-1932
   45d28:	3009883a 	mov	r4,r6
   45d2c:	dc000015 	stw	r16,0(sp)
   45d30:	dfc00115 	stw	ra,4(sp)
   45d34:	3021883a 	mov	r16,r6
   45d38:	00483d00 	call	483d0 <strcmp>
   45d3c:	1000061e 	bne	r2,zero,45d58 <_setlocale_r+0x40>
   45d40:	00800174 	movhi	r2,5
   45d44:	10be1c04 	addi	r2,r2,-1936
   45d48:	dfc00117 	ldw	ra,4(sp)
   45d4c:	dc000017 	ldw	r16,0(sp)
   45d50:	dec00204 	addi	sp,sp,8
   45d54:	f800283a 	ret
   45d58:	01400174 	movhi	r5,5
   45d5c:	297e1c04 	addi	r5,r5,-1936
   45d60:	8009883a 	mov	r4,r16
   45d64:	00483d00 	call	483d0 <strcmp>
   45d68:	103ff526 	beq	r2,zero,45d40 <__alt_data_end+0xfffdec40>
   45d6c:	01400174 	movhi	r5,5
   45d70:	297e0704 	addi	r5,r5,-2020
   45d74:	8009883a 	mov	r4,r16
   45d78:	00483d00 	call	483d0 <strcmp>
   45d7c:	103ff026 	beq	r2,zero,45d40 <__alt_data_end+0xfffdec40>
   45d80:	0005883a 	mov	r2,zero
   45d84:	003ff006 	br	45d48 <__alt_data_end+0xfffdec48>
   45d88:	00800174 	movhi	r2,5
   45d8c:	10be1c04 	addi	r2,r2,-1936
   45d90:	f800283a 	ret

00045d94 <__locale_charset>:
   45d94:	00800174 	movhi	r2,5
   45d98:	10bf8d04 	addi	r2,r2,-460
   45d9c:	f800283a 	ret

00045da0 <__locale_mb_cur_max>:
   45da0:	00800174 	movhi	r2,5
   45da4:	10852904 	addi	r2,r2,5284
   45da8:	10800017 	ldw	r2,0(r2)
   45dac:	f800283a 	ret

00045db0 <__locale_msgcharset>:
   45db0:	00800174 	movhi	r2,5
   45db4:	10bf8504 	addi	r2,r2,-492
   45db8:	f800283a 	ret

00045dbc <__locale_cjk_lang>:
   45dbc:	0005883a 	mov	r2,zero
   45dc0:	f800283a 	ret

00045dc4 <_localeconv_r>:
   45dc4:	00800174 	movhi	r2,5
   45dc8:	10bf9504 	addi	r2,r2,-428
   45dcc:	f800283a 	ret

00045dd0 <setlocale>:
   45dd0:	00800174 	movhi	r2,5
   45dd4:	10852804 	addi	r2,r2,5280
   45dd8:	280d883a 	mov	r6,r5
   45ddc:	200b883a 	mov	r5,r4
   45de0:	11000017 	ldw	r4,0(r2)
   45de4:	0045d181 	jmpi	45d18 <_setlocale_r>

00045de8 <localeconv>:
   45de8:	00800174 	movhi	r2,5
   45dec:	10bf9504 	addi	r2,r2,-428
   45df0:	f800283a 	ret

00045df4 <__smakebuf_r>:
   45df4:	2880030b 	ldhu	r2,12(r5)
   45df8:	10c0008c 	andi	r3,r2,2
   45dfc:	1800411e 	bne	r3,zero,45f04 <__smakebuf_r+0x110>
   45e00:	deffec04 	addi	sp,sp,-80
   45e04:	dc000f15 	stw	r16,60(sp)
   45e08:	2821883a 	mov	r16,r5
   45e0c:	2940038f 	ldh	r5,14(r5)
   45e10:	dc401015 	stw	r17,64(sp)
   45e14:	dfc01315 	stw	ra,76(sp)
   45e18:	dcc01215 	stw	r19,72(sp)
   45e1c:	dc801115 	stw	r18,68(sp)
   45e20:	2023883a 	mov	r17,r4
   45e24:	28001c16 	blt	r5,zero,45e98 <__smakebuf_r+0xa4>
   45e28:	d80d883a 	mov	r6,sp
   45e2c:	0049f780 	call	49f78 <_fstat_r>
   45e30:	10001816 	blt	r2,zero,45e94 <__smakebuf_r+0xa0>
   45e34:	d8800117 	ldw	r2,4(sp)
   45e38:	00e00014 	movui	r3,32768
   45e3c:	10bc000c 	andi	r2,r2,61440
   45e40:	14c80020 	cmpeqi	r19,r2,8192
   45e44:	10c03726 	beq	r2,r3,45f24 <__smakebuf_r+0x130>
   45e48:	80c0030b 	ldhu	r3,12(r16)
   45e4c:	18c20014 	ori	r3,r3,2048
   45e50:	80c0030d 	sth	r3,12(r16)
   45e54:	00c80004 	movi	r3,8192
   45e58:	10c0521e 	bne	r2,r3,45fa4 <__smakebuf_r+0x1b0>
   45e5c:	8140038f 	ldh	r5,14(r16)
   45e60:	8809883a 	mov	r4,r17
   45e64:	0049fd40 	call	49fd4 <_isatty_r>
   45e68:	10004c26 	beq	r2,zero,45f9c <__smakebuf_r+0x1a8>
   45e6c:	8080030b 	ldhu	r2,12(r16)
   45e70:	80c010c4 	addi	r3,r16,67
   45e74:	80c00015 	stw	r3,0(r16)
   45e78:	10800054 	ori	r2,r2,1
   45e7c:	8080030d 	sth	r2,12(r16)
   45e80:	00800044 	movi	r2,1
   45e84:	80c00415 	stw	r3,16(r16)
   45e88:	80800515 	stw	r2,20(r16)
   45e8c:	04810004 	movi	r18,1024
   45e90:	00000706 	br	45eb0 <__smakebuf_r+0xbc>
   45e94:	8080030b 	ldhu	r2,12(r16)
   45e98:	10c0200c 	andi	r3,r2,128
   45e9c:	18001f1e 	bne	r3,zero,45f1c <__smakebuf_r+0x128>
   45ea0:	04810004 	movi	r18,1024
   45ea4:	10820014 	ori	r2,r2,2048
   45ea8:	8080030d 	sth	r2,12(r16)
   45eac:	0027883a 	mov	r19,zero
   45eb0:	900b883a 	mov	r5,r18
   45eb4:	8809883a 	mov	r4,r17
   45eb8:	0045fb00 	call	45fb0 <_malloc_r>
   45ebc:	10002c26 	beq	r2,zero,45f70 <__smakebuf_r+0x17c>
   45ec0:	80c0030b 	ldhu	r3,12(r16)
   45ec4:	01000134 	movhi	r4,4
   45ec8:	2113c204 	addi	r4,r4,20232
   45ecc:	89000f15 	stw	r4,60(r17)
   45ed0:	18c02014 	ori	r3,r3,128
   45ed4:	80c0030d 	sth	r3,12(r16)
   45ed8:	80800015 	stw	r2,0(r16)
   45edc:	80800415 	stw	r2,16(r16)
   45ee0:	84800515 	stw	r18,20(r16)
   45ee4:	98001a1e 	bne	r19,zero,45f50 <__smakebuf_r+0x15c>
   45ee8:	dfc01317 	ldw	ra,76(sp)
   45eec:	dcc01217 	ldw	r19,72(sp)
   45ef0:	dc801117 	ldw	r18,68(sp)
   45ef4:	dc401017 	ldw	r17,64(sp)
   45ef8:	dc000f17 	ldw	r16,60(sp)
   45efc:	dec01404 	addi	sp,sp,80
   45f00:	f800283a 	ret
   45f04:	288010c4 	addi	r2,r5,67
   45f08:	28800015 	stw	r2,0(r5)
   45f0c:	28800415 	stw	r2,16(r5)
   45f10:	00800044 	movi	r2,1
   45f14:	28800515 	stw	r2,20(r5)
   45f18:	f800283a 	ret
   45f1c:	04801004 	movi	r18,64
   45f20:	003fe006 	br	45ea4 <__alt_data_end+0xfffdeda4>
   45f24:	81000a17 	ldw	r4,40(r16)
   45f28:	00c00174 	movhi	r3,5
   45f2c:	18e0db04 	addi	r3,r3,-31892
   45f30:	20ffc51e 	bne	r4,r3,45e48 <__alt_data_end+0xfffded48>
   45f34:	8080030b 	ldhu	r2,12(r16)
   45f38:	04810004 	movi	r18,1024
   45f3c:	84801315 	stw	r18,76(r16)
   45f40:	1484b03a 	or	r2,r2,r18
   45f44:	8080030d 	sth	r2,12(r16)
   45f48:	0027883a 	mov	r19,zero
   45f4c:	003fd806 	br	45eb0 <__alt_data_end+0xfffdedb0>
   45f50:	8140038f 	ldh	r5,14(r16)
   45f54:	8809883a 	mov	r4,r17
   45f58:	0049fd40 	call	49fd4 <_isatty_r>
   45f5c:	103fe226 	beq	r2,zero,45ee8 <__alt_data_end+0xfffdede8>
   45f60:	8080030b 	ldhu	r2,12(r16)
   45f64:	10800054 	ori	r2,r2,1
   45f68:	8080030d 	sth	r2,12(r16)
   45f6c:	003fde06 	br	45ee8 <__alt_data_end+0xfffdede8>
   45f70:	8080030b 	ldhu	r2,12(r16)
   45f74:	10c0800c 	andi	r3,r2,512
   45f78:	183fdb1e 	bne	r3,zero,45ee8 <__alt_data_end+0xfffdede8>
   45f7c:	10800094 	ori	r2,r2,2
   45f80:	80c010c4 	addi	r3,r16,67
   45f84:	8080030d 	sth	r2,12(r16)
   45f88:	00800044 	movi	r2,1
   45f8c:	80c00015 	stw	r3,0(r16)
   45f90:	80c00415 	stw	r3,16(r16)
   45f94:	80800515 	stw	r2,20(r16)
   45f98:	003fd306 	br	45ee8 <__alt_data_end+0xfffdede8>
   45f9c:	04810004 	movi	r18,1024
   45fa0:	003fc306 	br	45eb0 <__alt_data_end+0xfffdedb0>
   45fa4:	0027883a 	mov	r19,zero
   45fa8:	04810004 	movi	r18,1024
   45fac:	003fc006 	br	45eb0 <__alt_data_end+0xfffdedb0>

00045fb0 <_malloc_r>:
   45fb0:	defff504 	addi	sp,sp,-44
   45fb4:	dc800315 	stw	r18,12(sp)
   45fb8:	dfc00a15 	stw	ra,40(sp)
   45fbc:	df000915 	stw	fp,36(sp)
   45fc0:	ddc00815 	stw	r23,32(sp)
   45fc4:	dd800715 	stw	r22,28(sp)
   45fc8:	dd400615 	stw	r21,24(sp)
   45fcc:	dd000515 	stw	r20,20(sp)
   45fd0:	dcc00415 	stw	r19,16(sp)
   45fd4:	dc400215 	stw	r17,8(sp)
   45fd8:	dc000115 	stw	r16,4(sp)
   45fdc:	288002c4 	addi	r2,r5,11
   45fe0:	00c00584 	movi	r3,22
   45fe4:	2025883a 	mov	r18,r4
   45fe8:	18807f2e 	bgeu	r3,r2,461e8 <_malloc_r+0x238>
   45fec:	047ffe04 	movi	r17,-8
   45ff0:	1462703a 	and	r17,r2,r17
   45ff4:	8800a316 	blt	r17,zero,46284 <_malloc_r+0x2d4>
   45ff8:	8940a236 	bltu	r17,r5,46284 <_malloc_r+0x2d4>
   45ffc:	004d4180 	call	4d418 <__malloc_lock>
   46000:	00807dc4 	movi	r2,503
   46004:	1441e92e 	bgeu	r2,r17,467ac <_malloc_r+0x7fc>
   46008:	8804d27a 	srli	r2,r17,9
   4600c:	1000a126 	beq	r2,zero,46294 <_malloc_r+0x2e4>
   46010:	00c00104 	movi	r3,4
   46014:	18811e36 	bltu	r3,r2,46490 <_malloc_r+0x4e0>
   46018:	8804d1ba 	srli	r2,r17,6
   4601c:	12000e44 	addi	r8,r2,57
   46020:	11c00e04 	addi	r7,r2,56
   46024:	4209883a 	add	r4,r8,r8
   46028:	04c00174 	movhi	r19,5
   4602c:	2109883a 	add	r4,r4,r4
   46030:	9cffa304 	addi	r19,r19,-372
   46034:	2109883a 	add	r4,r4,r4
   46038:	9909883a 	add	r4,r19,r4
   4603c:	24000117 	ldw	r16,4(r4)
   46040:	213ffe04 	addi	r4,r4,-8
   46044:	24009726 	beq	r4,r16,462a4 <_malloc_r+0x2f4>
   46048:	80800117 	ldw	r2,4(r16)
   4604c:	01bfff04 	movi	r6,-4
   46050:	014003c4 	movi	r5,15
   46054:	1184703a 	and	r2,r2,r6
   46058:	1447c83a 	sub	r3,r2,r17
   4605c:	28c00716 	blt	r5,r3,4607c <_malloc_r+0xcc>
   46060:	1800920e 	bge	r3,zero,462ac <_malloc_r+0x2fc>
   46064:	84000317 	ldw	r16,12(r16)
   46068:	24008e26 	beq	r4,r16,462a4 <_malloc_r+0x2f4>
   4606c:	80800117 	ldw	r2,4(r16)
   46070:	1184703a 	and	r2,r2,r6
   46074:	1447c83a 	sub	r3,r2,r17
   46078:	28fff90e 	bge	r5,r3,46060 <__alt_data_end+0xfffdef60>
   4607c:	3809883a 	mov	r4,r7
   46080:	01800174 	movhi	r6,5
   46084:	9c000417 	ldw	r16,16(r19)
   46088:	31bfa304 	addi	r6,r6,-372
   4608c:	32000204 	addi	r8,r6,8
   46090:	82013426 	beq	r16,r8,46564 <_malloc_r+0x5b4>
   46094:	80c00117 	ldw	r3,4(r16)
   46098:	00bfff04 	movi	r2,-4
   4609c:	188e703a 	and	r7,r3,r2
   460a0:	3c45c83a 	sub	r2,r7,r17
   460a4:	00c003c4 	movi	r3,15
   460a8:	18811f16 	blt	r3,r2,46528 <_malloc_r+0x578>
   460ac:	32000515 	stw	r8,20(r6)
   460b0:	32000415 	stw	r8,16(r6)
   460b4:	10007f0e 	bge	r2,zero,462b4 <_malloc_r+0x304>
   460b8:	00807fc4 	movi	r2,511
   460bc:	11c0fd36 	bltu	r2,r7,464b4 <_malloc_r+0x504>
   460c0:	3806d0fa 	srli	r3,r7,3
   460c4:	01c00044 	movi	r7,1
   460c8:	30800117 	ldw	r2,4(r6)
   460cc:	19400044 	addi	r5,r3,1
   460d0:	294b883a 	add	r5,r5,r5
   460d4:	1807d0ba 	srai	r3,r3,2
   460d8:	294b883a 	add	r5,r5,r5
   460dc:	294b883a 	add	r5,r5,r5
   460e0:	298b883a 	add	r5,r5,r6
   460e4:	38c6983a 	sll	r3,r7,r3
   460e8:	29c00017 	ldw	r7,0(r5)
   460ec:	2a7ffe04 	addi	r9,r5,-8
   460f0:	1886b03a 	or	r3,r3,r2
   460f4:	82400315 	stw	r9,12(r16)
   460f8:	81c00215 	stw	r7,8(r16)
   460fc:	30c00115 	stw	r3,4(r6)
   46100:	2c000015 	stw	r16,0(r5)
   46104:	3c000315 	stw	r16,12(r7)
   46108:	2005d0ba 	srai	r2,r4,2
   4610c:	01400044 	movi	r5,1
   46110:	288a983a 	sll	r5,r5,r2
   46114:	19406f36 	bltu	r3,r5,462d4 <_malloc_r+0x324>
   46118:	28c4703a 	and	r2,r5,r3
   4611c:	10000a1e 	bne	r2,zero,46148 <_malloc_r+0x198>
   46120:	00bfff04 	movi	r2,-4
   46124:	294b883a 	add	r5,r5,r5
   46128:	2088703a 	and	r4,r4,r2
   4612c:	28c4703a 	and	r2,r5,r3
   46130:	21000104 	addi	r4,r4,4
   46134:	1000041e 	bne	r2,zero,46148 <_malloc_r+0x198>
   46138:	294b883a 	add	r5,r5,r5
   4613c:	28c4703a 	and	r2,r5,r3
   46140:	21000104 	addi	r4,r4,4
   46144:	103ffc26 	beq	r2,zero,46138 <__alt_data_end+0xfffdf038>
   46148:	02bfff04 	movi	r10,-4
   4614c:	024003c4 	movi	r9,15
   46150:	21800044 	addi	r6,r4,1
   46154:	318d883a 	add	r6,r6,r6
   46158:	318d883a 	add	r6,r6,r6
   4615c:	318d883a 	add	r6,r6,r6
   46160:	998d883a 	add	r6,r19,r6
   46164:	333ffe04 	addi	r12,r6,-8
   46168:	2017883a 	mov	r11,r4
   4616c:	31800104 	addi	r6,r6,4
   46170:	34000017 	ldw	r16,0(r6)
   46174:	31fffd04 	addi	r7,r6,-12
   46178:	81c0041e 	bne	r16,r7,4618c <_malloc_r+0x1dc>
   4617c:	0000fb06 	br	4656c <_malloc_r+0x5bc>
   46180:	1801030e 	bge	r3,zero,46590 <_malloc_r+0x5e0>
   46184:	84000317 	ldw	r16,12(r16)
   46188:	81c0f826 	beq	r16,r7,4656c <_malloc_r+0x5bc>
   4618c:	80800117 	ldw	r2,4(r16)
   46190:	1284703a 	and	r2,r2,r10
   46194:	1447c83a 	sub	r3,r2,r17
   46198:	48fff90e 	bge	r9,r3,46180 <__alt_data_end+0xfffdf080>
   4619c:	80800317 	ldw	r2,12(r16)
   461a0:	81000217 	ldw	r4,8(r16)
   461a4:	89400054 	ori	r5,r17,1
   461a8:	81400115 	stw	r5,4(r16)
   461ac:	20800315 	stw	r2,12(r4)
   461b0:	11000215 	stw	r4,8(r2)
   461b4:	8463883a 	add	r17,r16,r17
   461b8:	9c400515 	stw	r17,20(r19)
   461bc:	9c400415 	stw	r17,16(r19)
   461c0:	18800054 	ori	r2,r3,1
   461c4:	88800115 	stw	r2,4(r17)
   461c8:	8a000315 	stw	r8,12(r17)
   461cc:	8a000215 	stw	r8,8(r17)
   461d0:	88e3883a 	add	r17,r17,r3
   461d4:	88c00015 	stw	r3,0(r17)
   461d8:	9009883a 	mov	r4,r18
   461dc:	004d43c0 	call	4d43c <__malloc_unlock>
   461e0:	80800204 	addi	r2,r16,8
   461e4:	00001b06 	br	46254 <_malloc_r+0x2a4>
   461e8:	04400404 	movi	r17,16
   461ec:	89402536 	bltu	r17,r5,46284 <_malloc_r+0x2d4>
   461f0:	004d4180 	call	4d418 <__malloc_lock>
   461f4:	00800184 	movi	r2,6
   461f8:	01000084 	movi	r4,2
   461fc:	04c00174 	movhi	r19,5
   46200:	1085883a 	add	r2,r2,r2
   46204:	9cffa304 	addi	r19,r19,-372
   46208:	1085883a 	add	r2,r2,r2
   4620c:	9885883a 	add	r2,r19,r2
   46210:	14000117 	ldw	r16,4(r2)
   46214:	10fffe04 	addi	r3,r2,-8
   46218:	80c0d926 	beq	r16,r3,46580 <_malloc_r+0x5d0>
   4621c:	80c00117 	ldw	r3,4(r16)
   46220:	81000317 	ldw	r4,12(r16)
   46224:	00bfff04 	movi	r2,-4
   46228:	1884703a 	and	r2,r3,r2
   4622c:	81400217 	ldw	r5,8(r16)
   46230:	8085883a 	add	r2,r16,r2
   46234:	10c00117 	ldw	r3,4(r2)
   46238:	29000315 	stw	r4,12(r5)
   4623c:	21400215 	stw	r5,8(r4)
   46240:	18c00054 	ori	r3,r3,1
   46244:	10c00115 	stw	r3,4(r2)
   46248:	9009883a 	mov	r4,r18
   4624c:	004d43c0 	call	4d43c <__malloc_unlock>
   46250:	80800204 	addi	r2,r16,8
   46254:	dfc00a17 	ldw	ra,40(sp)
   46258:	df000917 	ldw	fp,36(sp)
   4625c:	ddc00817 	ldw	r23,32(sp)
   46260:	dd800717 	ldw	r22,28(sp)
   46264:	dd400617 	ldw	r21,24(sp)
   46268:	dd000517 	ldw	r20,20(sp)
   4626c:	dcc00417 	ldw	r19,16(sp)
   46270:	dc800317 	ldw	r18,12(sp)
   46274:	dc400217 	ldw	r17,8(sp)
   46278:	dc000117 	ldw	r16,4(sp)
   4627c:	dec00b04 	addi	sp,sp,44
   46280:	f800283a 	ret
   46284:	00800304 	movi	r2,12
   46288:	90800015 	stw	r2,0(r18)
   4628c:	0005883a 	mov	r2,zero
   46290:	003ff006 	br	46254 <__alt_data_end+0xfffdf154>
   46294:	01002004 	movi	r4,128
   46298:	02001004 	movi	r8,64
   4629c:	01c00fc4 	movi	r7,63
   462a0:	003f6106 	br	46028 <__alt_data_end+0xfffdef28>
   462a4:	4009883a 	mov	r4,r8
   462a8:	003f7506 	br	46080 <__alt_data_end+0xfffdef80>
   462ac:	81000317 	ldw	r4,12(r16)
   462b0:	003fde06 	br	4622c <__alt_data_end+0xfffdf12c>
   462b4:	81c5883a 	add	r2,r16,r7
   462b8:	11400117 	ldw	r5,4(r2)
   462bc:	9009883a 	mov	r4,r18
   462c0:	29400054 	ori	r5,r5,1
   462c4:	11400115 	stw	r5,4(r2)
   462c8:	004d43c0 	call	4d43c <__malloc_unlock>
   462cc:	80800204 	addi	r2,r16,8
   462d0:	003fe006 	br	46254 <__alt_data_end+0xfffdf154>
   462d4:	9c000217 	ldw	r16,8(r19)
   462d8:	00bfff04 	movi	r2,-4
   462dc:	85800117 	ldw	r22,4(r16)
   462e0:	b0ac703a 	and	r22,r22,r2
   462e4:	b4400336 	bltu	r22,r17,462f4 <_malloc_r+0x344>
   462e8:	b445c83a 	sub	r2,r22,r17
   462ec:	00c003c4 	movi	r3,15
   462f0:	18805d16 	blt	r3,r2,46468 <_malloc_r+0x4b8>
   462f4:	05c00174 	movhi	r23,5
   462f8:	00800174 	movhi	r2,5
   462fc:	108bf704 	addi	r2,r2,12252
   46300:	bdc52a04 	addi	r23,r23,5288
   46304:	15400017 	ldw	r21,0(r2)
   46308:	b8c00017 	ldw	r3,0(r23)
   4630c:	00bfffc4 	movi	r2,-1
   46310:	858d883a 	add	r6,r16,r22
   46314:	8d6b883a 	add	r21,r17,r21
   46318:	1880ea26 	beq	r3,r2,466c4 <_malloc_r+0x714>
   4631c:	ad4403c4 	addi	r21,r21,4111
   46320:	00bc0004 	movi	r2,-4096
   46324:	a8aa703a 	and	r21,r21,r2
   46328:	a80b883a 	mov	r5,r21
   4632c:	9009883a 	mov	r4,r18
   46330:	d9800015 	stw	r6,0(sp)
   46334:	00482400 	call	48240 <_sbrk_r>
   46338:	1029883a 	mov	r20,r2
   4633c:	00bfffc4 	movi	r2,-1
   46340:	d9800017 	ldw	r6,0(sp)
   46344:	a080e826 	beq	r20,r2,466e8 <_malloc_r+0x738>
   46348:	a180a636 	bltu	r20,r6,465e4 <_malloc_r+0x634>
   4634c:	07000174 	movhi	fp,5
   46350:	e70bff04 	addi	fp,fp,12284
   46354:	e0800017 	ldw	r2,0(fp)
   46358:	a887883a 	add	r3,r21,r2
   4635c:	e0c00015 	stw	r3,0(fp)
   46360:	3500e626 	beq	r6,r20,466fc <_malloc_r+0x74c>
   46364:	b9000017 	ldw	r4,0(r23)
   46368:	00bfffc4 	movi	r2,-1
   4636c:	2080ee26 	beq	r4,r2,46728 <_malloc_r+0x778>
   46370:	a185c83a 	sub	r2,r20,r6
   46374:	10c5883a 	add	r2,r2,r3
   46378:	e0800015 	stw	r2,0(fp)
   4637c:	a0c001cc 	andi	r3,r20,7
   46380:	1800bc26 	beq	r3,zero,46674 <_malloc_r+0x6c4>
   46384:	a0e9c83a 	sub	r20,r20,r3
   46388:	00840204 	movi	r2,4104
   4638c:	a5000204 	addi	r20,r20,8
   46390:	10c7c83a 	sub	r3,r2,r3
   46394:	a545883a 	add	r2,r20,r21
   46398:	1083ffcc 	andi	r2,r2,4095
   4639c:	18abc83a 	sub	r21,r3,r2
   463a0:	a80b883a 	mov	r5,r21
   463a4:	9009883a 	mov	r4,r18
   463a8:	00482400 	call	48240 <_sbrk_r>
   463ac:	00ffffc4 	movi	r3,-1
   463b0:	10c0e126 	beq	r2,r3,46738 <_malloc_r+0x788>
   463b4:	1505c83a 	sub	r2,r2,r20
   463b8:	1545883a 	add	r2,r2,r21
   463bc:	10800054 	ori	r2,r2,1
   463c0:	e0c00017 	ldw	r3,0(fp)
   463c4:	9d000215 	stw	r20,8(r19)
   463c8:	a0800115 	stw	r2,4(r20)
   463cc:	a8c7883a 	add	r3,r21,r3
   463d0:	e0c00015 	stw	r3,0(fp)
   463d4:	84c00e26 	beq	r16,r19,46410 <_malloc_r+0x460>
   463d8:	018003c4 	movi	r6,15
   463dc:	3580a72e 	bgeu	r6,r22,4667c <_malloc_r+0x6cc>
   463e0:	81400117 	ldw	r5,4(r16)
   463e4:	013ffe04 	movi	r4,-8
   463e8:	b0bffd04 	addi	r2,r22,-12
   463ec:	1104703a 	and	r2,r2,r4
   463f0:	2900004c 	andi	r4,r5,1
   463f4:	2088b03a 	or	r4,r4,r2
   463f8:	81000115 	stw	r4,4(r16)
   463fc:	01400144 	movi	r5,5
   46400:	8089883a 	add	r4,r16,r2
   46404:	21400115 	stw	r5,4(r4)
   46408:	21400215 	stw	r5,8(r4)
   4640c:	3080cd36 	bltu	r6,r2,46744 <_malloc_r+0x794>
   46410:	00800174 	movhi	r2,5
   46414:	108bf604 	addi	r2,r2,12248
   46418:	11000017 	ldw	r4,0(r2)
   4641c:	20c0012e 	bgeu	r4,r3,46424 <_malloc_r+0x474>
   46420:	10c00015 	stw	r3,0(r2)
   46424:	00800174 	movhi	r2,5
   46428:	108bf504 	addi	r2,r2,12244
   4642c:	11000017 	ldw	r4,0(r2)
   46430:	9c000217 	ldw	r16,8(r19)
   46434:	20c0012e 	bgeu	r4,r3,4643c <_malloc_r+0x48c>
   46438:	10c00015 	stw	r3,0(r2)
   4643c:	80c00117 	ldw	r3,4(r16)
   46440:	00bfff04 	movi	r2,-4
   46444:	1886703a 	and	r3,r3,r2
   46448:	1c45c83a 	sub	r2,r3,r17
   4644c:	1c400236 	bltu	r3,r17,46458 <_malloc_r+0x4a8>
   46450:	00c003c4 	movi	r3,15
   46454:	18800416 	blt	r3,r2,46468 <_malloc_r+0x4b8>
   46458:	9009883a 	mov	r4,r18
   4645c:	004d43c0 	call	4d43c <__malloc_unlock>
   46460:	0005883a 	mov	r2,zero
   46464:	003f7b06 	br	46254 <__alt_data_end+0xfffdf154>
   46468:	88c00054 	ori	r3,r17,1
   4646c:	80c00115 	stw	r3,4(r16)
   46470:	8463883a 	add	r17,r16,r17
   46474:	10800054 	ori	r2,r2,1
   46478:	9c400215 	stw	r17,8(r19)
   4647c:	88800115 	stw	r2,4(r17)
   46480:	9009883a 	mov	r4,r18
   46484:	004d43c0 	call	4d43c <__malloc_unlock>
   46488:	80800204 	addi	r2,r16,8
   4648c:	003f7106 	br	46254 <__alt_data_end+0xfffdf154>
   46490:	00c00504 	movi	r3,20
   46494:	18804a2e 	bgeu	r3,r2,465c0 <_malloc_r+0x610>
   46498:	00c01504 	movi	r3,84
   4649c:	18806e36 	bltu	r3,r2,46658 <_malloc_r+0x6a8>
   464a0:	8804d33a 	srli	r2,r17,12
   464a4:	12001bc4 	addi	r8,r2,111
   464a8:	11c01b84 	addi	r7,r2,110
   464ac:	4209883a 	add	r4,r8,r8
   464b0:	003edd06 	br	46028 <__alt_data_end+0xfffdef28>
   464b4:	3804d27a 	srli	r2,r7,9
   464b8:	00c00104 	movi	r3,4
   464bc:	1880442e 	bgeu	r3,r2,465d0 <_malloc_r+0x620>
   464c0:	00c00504 	movi	r3,20
   464c4:	18808136 	bltu	r3,r2,466cc <_malloc_r+0x71c>
   464c8:	11401704 	addi	r5,r2,92
   464cc:	10c016c4 	addi	r3,r2,91
   464d0:	294b883a 	add	r5,r5,r5
   464d4:	294b883a 	add	r5,r5,r5
   464d8:	294b883a 	add	r5,r5,r5
   464dc:	994b883a 	add	r5,r19,r5
   464e0:	28800017 	ldw	r2,0(r5)
   464e4:	01800174 	movhi	r6,5
   464e8:	297ffe04 	addi	r5,r5,-8
   464ec:	31bfa304 	addi	r6,r6,-372
   464f0:	28806526 	beq	r5,r2,46688 <_malloc_r+0x6d8>
   464f4:	01bfff04 	movi	r6,-4
   464f8:	10c00117 	ldw	r3,4(r2)
   464fc:	1986703a 	and	r3,r3,r6
   46500:	38c0022e 	bgeu	r7,r3,4650c <_malloc_r+0x55c>
   46504:	10800217 	ldw	r2,8(r2)
   46508:	28bffb1e 	bne	r5,r2,464f8 <__alt_data_end+0xfffdf3f8>
   4650c:	11400317 	ldw	r5,12(r2)
   46510:	98c00117 	ldw	r3,4(r19)
   46514:	81400315 	stw	r5,12(r16)
   46518:	80800215 	stw	r2,8(r16)
   4651c:	2c000215 	stw	r16,8(r5)
   46520:	14000315 	stw	r16,12(r2)
   46524:	003ef806 	br	46108 <__alt_data_end+0xfffdf008>
   46528:	88c00054 	ori	r3,r17,1
   4652c:	80c00115 	stw	r3,4(r16)
   46530:	8463883a 	add	r17,r16,r17
   46534:	34400515 	stw	r17,20(r6)
   46538:	34400415 	stw	r17,16(r6)
   4653c:	10c00054 	ori	r3,r2,1
   46540:	8a000315 	stw	r8,12(r17)
   46544:	8a000215 	stw	r8,8(r17)
   46548:	88c00115 	stw	r3,4(r17)
   4654c:	88a3883a 	add	r17,r17,r2
   46550:	88800015 	stw	r2,0(r17)
   46554:	9009883a 	mov	r4,r18
   46558:	004d43c0 	call	4d43c <__malloc_unlock>
   4655c:	80800204 	addi	r2,r16,8
   46560:	003f3c06 	br	46254 <__alt_data_end+0xfffdf154>
   46564:	30c00117 	ldw	r3,4(r6)
   46568:	003ee706 	br	46108 <__alt_data_end+0xfffdf008>
   4656c:	5ac00044 	addi	r11,r11,1
   46570:	588000cc 	andi	r2,r11,3
   46574:	31800204 	addi	r6,r6,8
   46578:	103efd1e 	bne	r2,zero,46170 <__alt_data_end+0xfffdf070>
   4657c:	00002406 	br	46610 <_malloc_r+0x660>
   46580:	14000317 	ldw	r16,12(r2)
   46584:	143f251e 	bne	r2,r16,4621c <__alt_data_end+0xfffdf11c>
   46588:	21000084 	addi	r4,r4,2
   4658c:	003ebc06 	br	46080 <__alt_data_end+0xfffdef80>
   46590:	8085883a 	add	r2,r16,r2
   46594:	10c00117 	ldw	r3,4(r2)
   46598:	81000317 	ldw	r4,12(r16)
   4659c:	81400217 	ldw	r5,8(r16)
   465a0:	18c00054 	ori	r3,r3,1
   465a4:	10c00115 	stw	r3,4(r2)
   465a8:	29000315 	stw	r4,12(r5)
   465ac:	21400215 	stw	r5,8(r4)
   465b0:	9009883a 	mov	r4,r18
   465b4:	004d43c0 	call	4d43c <__malloc_unlock>
   465b8:	80800204 	addi	r2,r16,8
   465bc:	003f2506 	br	46254 <__alt_data_end+0xfffdf154>
   465c0:	12001704 	addi	r8,r2,92
   465c4:	11c016c4 	addi	r7,r2,91
   465c8:	4209883a 	add	r4,r8,r8
   465cc:	003e9606 	br	46028 <__alt_data_end+0xfffdef28>
   465d0:	3804d1ba 	srli	r2,r7,6
   465d4:	11400e44 	addi	r5,r2,57
   465d8:	10c00e04 	addi	r3,r2,56
   465dc:	294b883a 	add	r5,r5,r5
   465e0:	003fbc06 	br	464d4 <__alt_data_end+0xfffdf3d4>
   465e4:	84ff5926 	beq	r16,r19,4634c <__alt_data_end+0xfffdf24c>
   465e8:	00800174 	movhi	r2,5
   465ec:	10bfa304 	addi	r2,r2,-372
   465f0:	14000217 	ldw	r16,8(r2)
   465f4:	00bfff04 	movi	r2,-4
   465f8:	80c00117 	ldw	r3,4(r16)
   465fc:	1886703a 	and	r3,r3,r2
   46600:	003f9106 	br	46448 <__alt_data_end+0xfffdf348>
   46604:	60800217 	ldw	r2,8(r12)
   46608:	213fffc4 	addi	r4,r4,-1
   4660c:	1300651e 	bne	r2,r12,467a4 <_malloc_r+0x7f4>
   46610:	208000cc 	andi	r2,r4,3
   46614:	633ffe04 	addi	r12,r12,-8
   46618:	103ffa1e 	bne	r2,zero,46604 <__alt_data_end+0xfffdf504>
   4661c:	98800117 	ldw	r2,4(r19)
   46620:	0146303a 	nor	r3,zero,r5
   46624:	1884703a 	and	r2,r3,r2
   46628:	98800115 	stw	r2,4(r19)
   4662c:	294b883a 	add	r5,r5,r5
   46630:	117f2836 	bltu	r2,r5,462d4 <__alt_data_end+0xfffdf1d4>
   46634:	283f2726 	beq	r5,zero,462d4 <__alt_data_end+0xfffdf1d4>
   46638:	2886703a 	and	r3,r5,r2
   4663c:	5809883a 	mov	r4,r11
   46640:	183ec31e 	bne	r3,zero,46150 <__alt_data_end+0xfffdf050>
   46644:	294b883a 	add	r5,r5,r5
   46648:	2886703a 	and	r3,r5,r2
   4664c:	21000104 	addi	r4,r4,4
   46650:	183ffc26 	beq	r3,zero,46644 <__alt_data_end+0xfffdf544>
   46654:	003ebe06 	br	46150 <__alt_data_end+0xfffdf050>
   46658:	00c05504 	movi	r3,340
   4665c:	18801236 	bltu	r3,r2,466a8 <_malloc_r+0x6f8>
   46660:	8804d3fa 	srli	r2,r17,15
   46664:	12001e04 	addi	r8,r2,120
   46668:	11c01dc4 	addi	r7,r2,119
   4666c:	4209883a 	add	r4,r8,r8
   46670:	003e6d06 	br	46028 <__alt_data_end+0xfffdef28>
   46674:	00c40004 	movi	r3,4096
   46678:	003f4606 	br	46394 <__alt_data_end+0xfffdf294>
   4667c:	00800044 	movi	r2,1
   46680:	a0800115 	stw	r2,4(r20)
   46684:	003f7406 	br	46458 <__alt_data_end+0xfffdf358>
   46688:	1805d0ba 	srai	r2,r3,2
   4668c:	01c00044 	movi	r7,1
   46690:	30c00117 	ldw	r3,4(r6)
   46694:	388e983a 	sll	r7,r7,r2
   46698:	2805883a 	mov	r2,r5
   4669c:	38c6b03a 	or	r3,r7,r3
   466a0:	30c00115 	stw	r3,4(r6)
   466a4:	003f9b06 	br	46514 <__alt_data_end+0xfffdf414>
   466a8:	00c15504 	movi	r3,1364
   466ac:	18801a36 	bltu	r3,r2,46718 <_malloc_r+0x768>
   466b0:	8804d4ba 	srli	r2,r17,18
   466b4:	12001f44 	addi	r8,r2,125
   466b8:	11c01f04 	addi	r7,r2,124
   466bc:	4209883a 	add	r4,r8,r8
   466c0:	003e5906 	br	46028 <__alt_data_end+0xfffdef28>
   466c4:	ad400404 	addi	r21,r21,16
   466c8:	003f1706 	br	46328 <__alt_data_end+0xfffdf228>
   466cc:	00c01504 	movi	r3,84
   466d0:	18802336 	bltu	r3,r2,46760 <_malloc_r+0x7b0>
   466d4:	3804d33a 	srli	r2,r7,12
   466d8:	11401bc4 	addi	r5,r2,111
   466dc:	10c01b84 	addi	r3,r2,110
   466e0:	294b883a 	add	r5,r5,r5
   466e4:	003f7b06 	br	464d4 <__alt_data_end+0xfffdf3d4>
   466e8:	9c000217 	ldw	r16,8(r19)
   466ec:	00bfff04 	movi	r2,-4
   466f0:	80c00117 	ldw	r3,4(r16)
   466f4:	1886703a 	and	r3,r3,r2
   466f8:	003f5306 	br	46448 <__alt_data_end+0xfffdf348>
   466fc:	3083ffcc 	andi	r2,r6,4095
   46700:	103f181e 	bne	r2,zero,46364 <__alt_data_end+0xfffdf264>
   46704:	99000217 	ldw	r4,8(r19)
   46708:	b545883a 	add	r2,r22,r21
   4670c:	10800054 	ori	r2,r2,1
   46710:	20800115 	stw	r2,4(r4)
   46714:	003f3e06 	br	46410 <__alt_data_end+0xfffdf310>
   46718:	01003f84 	movi	r4,254
   4671c:	02001fc4 	movi	r8,127
   46720:	01c01f84 	movi	r7,126
   46724:	003e4006 	br	46028 <__alt_data_end+0xfffdef28>
   46728:	00800174 	movhi	r2,5
   4672c:	10852a04 	addi	r2,r2,5288
   46730:	15000015 	stw	r20,0(r2)
   46734:	003f1106 	br	4637c <__alt_data_end+0xfffdf27c>
   46738:	00800044 	movi	r2,1
   4673c:	002b883a 	mov	r21,zero
   46740:	003f1f06 	br	463c0 <__alt_data_end+0xfffdf2c0>
   46744:	81400204 	addi	r5,r16,8
   46748:	9009883a 	mov	r4,r18
   4674c:	00453c40 	call	453c4 <_free_r>
   46750:	00800174 	movhi	r2,5
   46754:	108bff04 	addi	r2,r2,12284
   46758:	10c00017 	ldw	r3,0(r2)
   4675c:	003f2c06 	br	46410 <__alt_data_end+0xfffdf310>
   46760:	00c05504 	movi	r3,340
   46764:	18800536 	bltu	r3,r2,4677c <_malloc_r+0x7cc>
   46768:	3804d3fa 	srli	r2,r7,15
   4676c:	11401e04 	addi	r5,r2,120
   46770:	10c01dc4 	addi	r3,r2,119
   46774:	294b883a 	add	r5,r5,r5
   46778:	003f5606 	br	464d4 <__alt_data_end+0xfffdf3d4>
   4677c:	00c15504 	movi	r3,1364
   46780:	18800536 	bltu	r3,r2,46798 <_malloc_r+0x7e8>
   46784:	3804d4ba 	srli	r2,r7,18
   46788:	11401f44 	addi	r5,r2,125
   4678c:	10c01f04 	addi	r3,r2,124
   46790:	294b883a 	add	r5,r5,r5
   46794:	003f4f06 	br	464d4 <__alt_data_end+0xfffdf3d4>
   46798:	01403f84 	movi	r5,254
   4679c:	00c01f84 	movi	r3,126
   467a0:	003f4c06 	br	464d4 <__alt_data_end+0xfffdf3d4>
   467a4:	98800117 	ldw	r2,4(r19)
   467a8:	003fa006 	br	4662c <__alt_data_end+0xfffdf52c>
   467ac:	8808d0fa 	srli	r4,r17,3
   467b0:	20800044 	addi	r2,r4,1
   467b4:	1085883a 	add	r2,r2,r2
   467b8:	003e9006 	br	461fc <__alt_data_end+0xfffdf0fc>

000467bc <memchr>:
   467bc:	208000cc 	andi	r2,r4,3
   467c0:	280f883a 	mov	r7,r5
   467c4:	10003426 	beq	r2,zero,46898 <memchr+0xdc>
   467c8:	30bfffc4 	addi	r2,r6,-1
   467cc:	30001a26 	beq	r6,zero,46838 <memchr+0x7c>
   467d0:	20c00003 	ldbu	r3,0(r4)
   467d4:	29803fcc 	andi	r6,r5,255
   467d8:	30c0051e 	bne	r6,r3,467f0 <memchr+0x34>
   467dc:	00001806 	br	46840 <memchr+0x84>
   467e0:	10001526 	beq	r2,zero,46838 <memchr+0x7c>
   467e4:	20c00003 	ldbu	r3,0(r4)
   467e8:	10bfffc4 	addi	r2,r2,-1
   467ec:	30c01426 	beq	r6,r3,46840 <memchr+0x84>
   467f0:	21000044 	addi	r4,r4,1
   467f4:	20c000cc 	andi	r3,r4,3
   467f8:	183ff91e 	bne	r3,zero,467e0 <__alt_data_end+0xfffdf6e0>
   467fc:	020000c4 	movi	r8,3
   46800:	40801136 	bltu	r8,r2,46848 <memchr+0x8c>
   46804:	10000c26 	beq	r2,zero,46838 <memchr+0x7c>
   46808:	20c00003 	ldbu	r3,0(r4)
   4680c:	29403fcc 	andi	r5,r5,255
   46810:	28c00b26 	beq	r5,r3,46840 <memchr+0x84>
   46814:	20c00044 	addi	r3,r4,1
   46818:	39803fcc 	andi	r6,r7,255
   4681c:	2089883a 	add	r4,r4,r2
   46820:	00000306 	br	46830 <memchr+0x74>
   46824:	18c00044 	addi	r3,r3,1
   46828:	197fffc3 	ldbu	r5,-1(r3)
   4682c:	31400526 	beq	r6,r5,46844 <memchr+0x88>
   46830:	1805883a 	mov	r2,r3
   46834:	20fffb1e 	bne	r4,r3,46824 <__alt_data_end+0xfffdf724>
   46838:	0005883a 	mov	r2,zero
   4683c:	f800283a 	ret
   46840:	2005883a 	mov	r2,r4
   46844:	f800283a 	ret
   46848:	28c03fcc 	andi	r3,r5,255
   4684c:	1812923a 	slli	r9,r3,8
   46850:	02ffbff4 	movhi	r11,65279
   46854:	02a02074 	movhi	r10,32897
   46858:	48d2b03a 	or	r9,r9,r3
   4685c:	4806943a 	slli	r3,r9,16
   46860:	5affbfc4 	addi	r11,r11,-257
   46864:	52a02004 	addi	r10,r10,-32640
   46868:	48d2b03a 	or	r9,r9,r3
   4686c:	20c00017 	ldw	r3,0(r4)
   46870:	48c6f03a 	xor	r3,r9,r3
   46874:	1acd883a 	add	r6,r3,r11
   46878:	00c6303a 	nor	r3,zero,r3
   4687c:	30c6703a 	and	r3,r6,r3
   46880:	1a86703a 	and	r3,r3,r10
   46884:	183fe01e 	bne	r3,zero,46808 <__alt_data_end+0xfffdf708>
   46888:	10bfff04 	addi	r2,r2,-4
   4688c:	21000104 	addi	r4,r4,4
   46890:	40bff636 	bltu	r8,r2,4686c <__alt_data_end+0xfffdf76c>
   46894:	003fdb06 	br	46804 <__alt_data_end+0xfffdf704>
   46898:	3005883a 	mov	r2,r6
   4689c:	003fd706 	br	467fc <__alt_data_end+0xfffdf6fc>

000468a0 <memcpy>:
   468a0:	defffd04 	addi	sp,sp,-12
   468a4:	dfc00215 	stw	ra,8(sp)
   468a8:	dc400115 	stw	r17,4(sp)
   468ac:	dc000015 	stw	r16,0(sp)
   468b0:	00c003c4 	movi	r3,15
   468b4:	2005883a 	mov	r2,r4
   468b8:	1980452e 	bgeu	r3,r6,469d0 <memcpy+0x130>
   468bc:	2906b03a 	or	r3,r5,r4
   468c0:	18c000cc 	andi	r3,r3,3
   468c4:	1800441e 	bne	r3,zero,469d8 <memcpy+0x138>
   468c8:	347ffc04 	addi	r17,r6,-16
   468cc:	8822d13a 	srli	r17,r17,4
   468d0:	28c00104 	addi	r3,r5,4
   468d4:	23400104 	addi	r13,r4,4
   468d8:	8820913a 	slli	r16,r17,4
   468dc:	2b000204 	addi	r12,r5,8
   468e0:	22c00204 	addi	r11,r4,8
   468e4:	84000504 	addi	r16,r16,20
   468e8:	2a800304 	addi	r10,r5,12
   468ec:	22400304 	addi	r9,r4,12
   468f0:	2c21883a 	add	r16,r5,r16
   468f4:	2811883a 	mov	r8,r5
   468f8:	200f883a 	mov	r7,r4
   468fc:	41000017 	ldw	r4,0(r8)
   46900:	1fc00017 	ldw	ra,0(r3)
   46904:	63c00017 	ldw	r15,0(r12)
   46908:	39000015 	stw	r4,0(r7)
   4690c:	53800017 	ldw	r14,0(r10)
   46910:	6fc00015 	stw	ra,0(r13)
   46914:	5bc00015 	stw	r15,0(r11)
   46918:	4b800015 	stw	r14,0(r9)
   4691c:	18c00404 	addi	r3,r3,16
   46920:	39c00404 	addi	r7,r7,16
   46924:	42000404 	addi	r8,r8,16
   46928:	6b400404 	addi	r13,r13,16
   4692c:	63000404 	addi	r12,r12,16
   46930:	5ac00404 	addi	r11,r11,16
   46934:	52800404 	addi	r10,r10,16
   46938:	4a400404 	addi	r9,r9,16
   4693c:	1c3fef1e 	bne	r3,r16,468fc <__alt_data_end+0xfffdf7fc>
   46940:	89c00044 	addi	r7,r17,1
   46944:	380e913a 	slli	r7,r7,4
   46948:	310003cc 	andi	r4,r6,15
   4694c:	02c000c4 	movi	r11,3
   46950:	11c7883a 	add	r3,r2,r7
   46954:	29cb883a 	add	r5,r5,r7
   46958:	5900212e 	bgeu	r11,r4,469e0 <memcpy+0x140>
   4695c:	1813883a 	mov	r9,r3
   46960:	2811883a 	mov	r8,r5
   46964:	200f883a 	mov	r7,r4
   46968:	42800017 	ldw	r10,0(r8)
   4696c:	4a400104 	addi	r9,r9,4
   46970:	39ffff04 	addi	r7,r7,-4
   46974:	4abfff15 	stw	r10,-4(r9)
   46978:	42000104 	addi	r8,r8,4
   4697c:	59fffa36 	bltu	r11,r7,46968 <__alt_data_end+0xfffdf868>
   46980:	213fff04 	addi	r4,r4,-4
   46984:	2008d0ba 	srli	r4,r4,2
   46988:	318000cc 	andi	r6,r6,3
   4698c:	21000044 	addi	r4,r4,1
   46990:	2109883a 	add	r4,r4,r4
   46994:	2109883a 	add	r4,r4,r4
   46998:	1907883a 	add	r3,r3,r4
   4699c:	290b883a 	add	r5,r5,r4
   469a0:	30000626 	beq	r6,zero,469bc <memcpy+0x11c>
   469a4:	198d883a 	add	r6,r3,r6
   469a8:	29c00003 	ldbu	r7,0(r5)
   469ac:	18c00044 	addi	r3,r3,1
   469b0:	29400044 	addi	r5,r5,1
   469b4:	19ffffc5 	stb	r7,-1(r3)
   469b8:	19bffb1e 	bne	r3,r6,469a8 <__alt_data_end+0xfffdf8a8>
   469bc:	dfc00217 	ldw	ra,8(sp)
   469c0:	dc400117 	ldw	r17,4(sp)
   469c4:	dc000017 	ldw	r16,0(sp)
   469c8:	dec00304 	addi	sp,sp,12
   469cc:	f800283a 	ret
   469d0:	2007883a 	mov	r3,r4
   469d4:	003ff206 	br	469a0 <__alt_data_end+0xfffdf8a0>
   469d8:	2007883a 	mov	r3,r4
   469dc:	003ff106 	br	469a4 <__alt_data_end+0xfffdf8a4>
   469e0:	200d883a 	mov	r6,r4
   469e4:	003fee06 	br	469a0 <__alt_data_end+0xfffdf8a0>

000469e8 <memmove>:
   469e8:	2005883a 	mov	r2,r4
   469ec:	29000b2e 	bgeu	r5,r4,46a1c <memmove+0x34>
   469f0:	298f883a 	add	r7,r5,r6
   469f4:	21c0092e 	bgeu	r4,r7,46a1c <memmove+0x34>
   469f8:	2187883a 	add	r3,r4,r6
   469fc:	198bc83a 	sub	r5,r3,r6
   46a00:	30004826 	beq	r6,zero,46b24 <memmove+0x13c>
   46a04:	39ffffc4 	addi	r7,r7,-1
   46a08:	39000003 	ldbu	r4,0(r7)
   46a0c:	18ffffc4 	addi	r3,r3,-1
   46a10:	19000005 	stb	r4,0(r3)
   46a14:	28fffb1e 	bne	r5,r3,46a04 <__alt_data_end+0xfffdf904>
   46a18:	f800283a 	ret
   46a1c:	00c003c4 	movi	r3,15
   46a20:	1980412e 	bgeu	r3,r6,46b28 <memmove+0x140>
   46a24:	2886b03a 	or	r3,r5,r2
   46a28:	18c000cc 	andi	r3,r3,3
   46a2c:	1800401e 	bne	r3,zero,46b30 <memmove+0x148>
   46a30:	33fffc04 	addi	r15,r6,-16
   46a34:	781ed13a 	srli	r15,r15,4
   46a38:	28c00104 	addi	r3,r5,4
   46a3c:	13400104 	addi	r13,r2,4
   46a40:	781c913a 	slli	r14,r15,4
   46a44:	2b000204 	addi	r12,r5,8
   46a48:	12c00204 	addi	r11,r2,8
   46a4c:	73800504 	addi	r14,r14,20
   46a50:	2a800304 	addi	r10,r5,12
   46a54:	12400304 	addi	r9,r2,12
   46a58:	2b9d883a 	add	r14,r5,r14
   46a5c:	2811883a 	mov	r8,r5
   46a60:	100f883a 	mov	r7,r2
   46a64:	41000017 	ldw	r4,0(r8)
   46a68:	39c00404 	addi	r7,r7,16
   46a6c:	18c00404 	addi	r3,r3,16
   46a70:	393ffc15 	stw	r4,-16(r7)
   46a74:	193ffc17 	ldw	r4,-16(r3)
   46a78:	6b400404 	addi	r13,r13,16
   46a7c:	5ac00404 	addi	r11,r11,16
   46a80:	693ffc15 	stw	r4,-16(r13)
   46a84:	61000017 	ldw	r4,0(r12)
   46a88:	4a400404 	addi	r9,r9,16
   46a8c:	42000404 	addi	r8,r8,16
   46a90:	593ffc15 	stw	r4,-16(r11)
   46a94:	51000017 	ldw	r4,0(r10)
   46a98:	63000404 	addi	r12,r12,16
   46a9c:	52800404 	addi	r10,r10,16
   46aa0:	493ffc15 	stw	r4,-16(r9)
   46aa4:	1bbfef1e 	bne	r3,r14,46a64 <__alt_data_end+0xfffdf964>
   46aa8:	79000044 	addi	r4,r15,1
   46aac:	2008913a 	slli	r4,r4,4
   46ab0:	328003cc 	andi	r10,r6,15
   46ab4:	02c000c4 	movi	r11,3
   46ab8:	1107883a 	add	r3,r2,r4
   46abc:	290b883a 	add	r5,r5,r4
   46ac0:	5a801e2e 	bgeu	r11,r10,46b3c <memmove+0x154>
   46ac4:	1813883a 	mov	r9,r3
   46ac8:	2811883a 	mov	r8,r5
   46acc:	500f883a 	mov	r7,r10
   46ad0:	41000017 	ldw	r4,0(r8)
   46ad4:	4a400104 	addi	r9,r9,4
   46ad8:	39ffff04 	addi	r7,r7,-4
   46adc:	493fff15 	stw	r4,-4(r9)
   46ae0:	42000104 	addi	r8,r8,4
   46ae4:	59fffa36 	bltu	r11,r7,46ad0 <__alt_data_end+0xfffdf9d0>
   46ae8:	513fff04 	addi	r4,r10,-4
   46aec:	2008d0ba 	srli	r4,r4,2
   46af0:	318000cc 	andi	r6,r6,3
   46af4:	21000044 	addi	r4,r4,1
   46af8:	2109883a 	add	r4,r4,r4
   46afc:	2109883a 	add	r4,r4,r4
   46b00:	1907883a 	add	r3,r3,r4
   46b04:	290b883a 	add	r5,r5,r4
   46b08:	30000b26 	beq	r6,zero,46b38 <memmove+0x150>
   46b0c:	198d883a 	add	r6,r3,r6
   46b10:	29c00003 	ldbu	r7,0(r5)
   46b14:	18c00044 	addi	r3,r3,1
   46b18:	29400044 	addi	r5,r5,1
   46b1c:	19ffffc5 	stb	r7,-1(r3)
   46b20:	19bffb1e 	bne	r3,r6,46b10 <__alt_data_end+0xfffdfa10>
   46b24:	f800283a 	ret
   46b28:	1007883a 	mov	r3,r2
   46b2c:	003ff606 	br	46b08 <__alt_data_end+0xfffdfa08>
   46b30:	1007883a 	mov	r3,r2
   46b34:	003ff506 	br	46b0c <__alt_data_end+0xfffdfa0c>
   46b38:	f800283a 	ret
   46b3c:	500d883a 	mov	r6,r10
   46b40:	003ff106 	br	46b08 <__alt_data_end+0xfffdfa08>

00046b44 <memset>:
   46b44:	20c000cc 	andi	r3,r4,3
   46b48:	2005883a 	mov	r2,r4
   46b4c:	18004426 	beq	r3,zero,46c60 <memset+0x11c>
   46b50:	31ffffc4 	addi	r7,r6,-1
   46b54:	30004026 	beq	r6,zero,46c58 <memset+0x114>
   46b58:	2813883a 	mov	r9,r5
   46b5c:	200d883a 	mov	r6,r4
   46b60:	2007883a 	mov	r3,r4
   46b64:	00000406 	br	46b78 <memset+0x34>
   46b68:	3a3fffc4 	addi	r8,r7,-1
   46b6c:	31800044 	addi	r6,r6,1
   46b70:	38003926 	beq	r7,zero,46c58 <memset+0x114>
   46b74:	400f883a 	mov	r7,r8
   46b78:	18c00044 	addi	r3,r3,1
   46b7c:	32400005 	stb	r9,0(r6)
   46b80:	1a0000cc 	andi	r8,r3,3
   46b84:	403ff81e 	bne	r8,zero,46b68 <__alt_data_end+0xfffdfa68>
   46b88:	010000c4 	movi	r4,3
   46b8c:	21c02d2e 	bgeu	r4,r7,46c44 <memset+0x100>
   46b90:	29003fcc 	andi	r4,r5,255
   46b94:	200c923a 	slli	r6,r4,8
   46b98:	3108b03a 	or	r4,r6,r4
   46b9c:	200c943a 	slli	r6,r4,16
   46ba0:	218cb03a 	or	r6,r4,r6
   46ba4:	010003c4 	movi	r4,15
   46ba8:	21c0182e 	bgeu	r4,r7,46c0c <memset+0xc8>
   46bac:	3b3ffc04 	addi	r12,r7,-16
   46bb0:	6018d13a 	srli	r12,r12,4
   46bb4:	1a000104 	addi	r8,r3,4
   46bb8:	1ac00204 	addi	r11,r3,8
   46bbc:	6008913a 	slli	r4,r12,4
   46bc0:	1a800304 	addi	r10,r3,12
   46bc4:	1813883a 	mov	r9,r3
   46bc8:	21000504 	addi	r4,r4,20
   46bcc:	1909883a 	add	r4,r3,r4
   46bd0:	49800015 	stw	r6,0(r9)
   46bd4:	41800015 	stw	r6,0(r8)
   46bd8:	59800015 	stw	r6,0(r11)
   46bdc:	51800015 	stw	r6,0(r10)
   46be0:	42000404 	addi	r8,r8,16
   46be4:	4a400404 	addi	r9,r9,16
   46be8:	5ac00404 	addi	r11,r11,16
   46bec:	52800404 	addi	r10,r10,16
   46bf0:	413ff71e 	bne	r8,r4,46bd0 <__alt_data_end+0xfffdfad0>
   46bf4:	63000044 	addi	r12,r12,1
   46bf8:	6018913a 	slli	r12,r12,4
   46bfc:	39c003cc 	andi	r7,r7,15
   46c00:	010000c4 	movi	r4,3
   46c04:	1b07883a 	add	r3,r3,r12
   46c08:	21c00e2e 	bgeu	r4,r7,46c44 <memset+0x100>
   46c0c:	1813883a 	mov	r9,r3
   46c10:	3811883a 	mov	r8,r7
   46c14:	010000c4 	movi	r4,3
   46c18:	49800015 	stw	r6,0(r9)
   46c1c:	423fff04 	addi	r8,r8,-4
   46c20:	4a400104 	addi	r9,r9,4
   46c24:	223ffc36 	bltu	r4,r8,46c18 <__alt_data_end+0xfffdfb18>
   46c28:	393fff04 	addi	r4,r7,-4
   46c2c:	2008d0ba 	srli	r4,r4,2
   46c30:	39c000cc 	andi	r7,r7,3
   46c34:	21000044 	addi	r4,r4,1
   46c38:	2109883a 	add	r4,r4,r4
   46c3c:	2109883a 	add	r4,r4,r4
   46c40:	1907883a 	add	r3,r3,r4
   46c44:	38000526 	beq	r7,zero,46c5c <memset+0x118>
   46c48:	19cf883a 	add	r7,r3,r7
   46c4c:	19400005 	stb	r5,0(r3)
   46c50:	18c00044 	addi	r3,r3,1
   46c54:	38fffd1e 	bne	r7,r3,46c4c <__alt_data_end+0xfffdfb4c>
   46c58:	f800283a 	ret
   46c5c:	f800283a 	ret
   46c60:	2007883a 	mov	r3,r4
   46c64:	300f883a 	mov	r7,r6
   46c68:	003fc706 	br	46b88 <__alt_data_end+0xfffdfa88>

00046c6c <_Balloc>:
   46c6c:	20801317 	ldw	r2,76(r4)
   46c70:	defffc04 	addi	sp,sp,-16
   46c74:	dc400115 	stw	r17,4(sp)
   46c78:	dc000015 	stw	r16,0(sp)
   46c7c:	dfc00315 	stw	ra,12(sp)
   46c80:	dc800215 	stw	r18,8(sp)
   46c84:	2023883a 	mov	r17,r4
   46c88:	2821883a 	mov	r16,r5
   46c8c:	10000f26 	beq	r2,zero,46ccc <_Balloc+0x60>
   46c90:	8407883a 	add	r3,r16,r16
   46c94:	18c7883a 	add	r3,r3,r3
   46c98:	10c7883a 	add	r3,r2,r3
   46c9c:	18800017 	ldw	r2,0(r3)
   46ca0:	10001126 	beq	r2,zero,46ce8 <_Balloc+0x7c>
   46ca4:	11000017 	ldw	r4,0(r2)
   46ca8:	19000015 	stw	r4,0(r3)
   46cac:	10000415 	stw	zero,16(r2)
   46cb0:	10000315 	stw	zero,12(r2)
   46cb4:	dfc00317 	ldw	ra,12(sp)
   46cb8:	dc800217 	ldw	r18,8(sp)
   46cbc:	dc400117 	ldw	r17,4(sp)
   46cc0:	dc000017 	ldw	r16,0(sp)
   46cc4:	dec00404 	addi	sp,sp,16
   46cc8:	f800283a 	ret
   46ccc:	01800844 	movi	r6,33
   46cd0:	01400104 	movi	r5,4
   46cd4:	0049ba80 	call	49ba8 <_calloc_r>
   46cd8:	88801315 	stw	r2,76(r17)
   46cdc:	103fec1e 	bne	r2,zero,46c90 <__alt_data_end+0xfffdfb90>
   46ce0:	0005883a 	mov	r2,zero
   46ce4:	003ff306 	br	46cb4 <__alt_data_end+0xfffdfbb4>
   46ce8:	01400044 	movi	r5,1
   46cec:	2c24983a 	sll	r18,r5,r16
   46cf0:	8809883a 	mov	r4,r17
   46cf4:	91800144 	addi	r6,r18,5
   46cf8:	318d883a 	add	r6,r6,r6
   46cfc:	318d883a 	add	r6,r6,r6
   46d00:	0049ba80 	call	49ba8 <_calloc_r>
   46d04:	103ff626 	beq	r2,zero,46ce0 <__alt_data_end+0xfffdfbe0>
   46d08:	14000115 	stw	r16,4(r2)
   46d0c:	14800215 	stw	r18,8(r2)
   46d10:	003fe606 	br	46cac <__alt_data_end+0xfffdfbac>

00046d14 <_Bfree>:
   46d14:	28000826 	beq	r5,zero,46d38 <_Bfree+0x24>
   46d18:	28c00117 	ldw	r3,4(r5)
   46d1c:	20801317 	ldw	r2,76(r4)
   46d20:	18c7883a 	add	r3,r3,r3
   46d24:	18c7883a 	add	r3,r3,r3
   46d28:	10c5883a 	add	r2,r2,r3
   46d2c:	10c00017 	ldw	r3,0(r2)
   46d30:	28c00015 	stw	r3,0(r5)
   46d34:	11400015 	stw	r5,0(r2)
   46d38:	f800283a 	ret

00046d3c <__multadd>:
   46d3c:	defffa04 	addi	sp,sp,-24
   46d40:	dc800315 	stw	r18,12(sp)
   46d44:	dc400215 	stw	r17,8(sp)
   46d48:	dc000115 	stw	r16,4(sp)
   46d4c:	2823883a 	mov	r17,r5
   46d50:	2c000417 	ldw	r16,16(r5)
   46d54:	dfc00515 	stw	ra,20(sp)
   46d58:	dcc00415 	stw	r19,16(sp)
   46d5c:	2025883a 	mov	r18,r4
   46d60:	29400504 	addi	r5,r5,20
   46d64:	0011883a 	mov	r8,zero
   46d68:	28c00017 	ldw	r3,0(r5)
   46d6c:	29400104 	addi	r5,r5,4
   46d70:	42000044 	addi	r8,r8,1
   46d74:	18bfffcc 	andi	r2,r3,65535
   46d78:	1185383a 	mul	r2,r2,r6
   46d7c:	1806d43a 	srli	r3,r3,16
   46d80:	11cf883a 	add	r7,r2,r7
   46d84:	3808d43a 	srli	r4,r7,16
   46d88:	1987383a 	mul	r3,r3,r6
   46d8c:	38bfffcc 	andi	r2,r7,65535
   46d90:	1907883a 	add	r3,r3,r4
   46d94:	1808943a 	slli	r4,r3,16
   46d98:	180ed43a 	srli	r7,r3,16
   46d9c:	2085883a 	add	r2,r4,r2
   46da0:	28bfff15 	stw	r2,-4(r5)
   46da4:	443ff016 	blt	r8,r16,46d68 <__alt_data_end+0xfffdfc68>
   46da8:	38000926 	beq	r7,zero,46dd0 <__multadd+0x94>
   46dac:	88800217 	ldw	r2,8(r17)
   46db0:	80800f0e 	bge	r16,r2,46df0 <__multadd+0xb4>
   46db4:	80800144 	addi	r2,r16,5
   46db8:	1085883a 	add	r2,r2,r2
   46dbc:	1085883a 	add	r2,r2,r2
   46dc0:	8885883a 	add	r2,r17,r2
   46dc4:	11c00015 	stw	r7,0(r2)
   46dc8:	84000044 	addi	r16,r16,1
   46dcc:	8c000415 	stw	r16,16(r17)
   46dd0:	8805883a 	mov	r2,r17
   46dd4:	dfc00517 	ldw	ra,20(sp)
   46dd8:	dcc00417 	ldw	r19,16(sp)
   46ddc:	dc800317 	ldw	r18,12(sp)
   46de0:	dc400217 	ldw	r17,8(sp)
   46de4:	dc000117 	ldw	r16,4(sp)
   46de8:	dec00604 	addi	sp,sp,24
   46dec:	f800283a 	ret
   46df0:	89400117 	ldw	r5,4(r17)
   46df4:	9009883a 	mov	r4,r18
   46df8:	d9c00015 	stw	r7,0(sp)
   46dfc:	29400044 	addi	r5,r5,1
   46e00:	0046c6c0 	call	46c6c <_Balloc>
   46e04:	89800417 	ldw	r6,16(r17)
   46e08:	89400304 	addi	r5,r17,12
   46e0c:	11000304 	addi	r4,r2,12
   46e10:	31800084 	addi	r6,r6,2
   46e14:	318d883a 	add	r6,r6,r6
   46e18:	318d883a 	add	r6,r6,r6
   46e1c:	1027883a 	mov	r19,r2
   46e20:	00468a00 	call	468a0 <memcpy>
   46e24:	d9c00017 	ldw	r7,0(sp)
   46e28:	88000a26 	beq	r17,zero,46e54 <__multadd+0x118>
   46e2c:	88c00117 	ldw	r3,4(r17)
   46e30:	90801317 	ldw	r2,76(r18)
   46e34:	18c7883a 	add	r3,r3,r3
   46e38:	18c7883a 	add	r3,r3,r3
   46e3c:	10c5883a 	add	r2,r2,r3
   46e40:	10c00017 	ldw	r3,0(r2)
   46e44:	88c00015 	stw	r3,0(r17)
   46e48:	14400015 	stw	r17,0(r2)
   46e4c:	9823883a 	mov	r17,r19
   46e50:	003fd806 	br	46db4 <__alt_data_end+0xfffdfcb4>
   46e54:	9823883a 	mov	r17,r19
   46e58:	003fd606 	br	46db4 <__alt_data_end+0xfffdfcb4>

00046e5c <__s2b>:
   46e5c:	defff904 	addi	sp,sp,-28
   46e60:	dc400115 	stw	r17,4(sp)
   46e64:	dc000015 	stw	r16,0(sp)
   46e68:	2023883a 	mov	r17,r4
   46e6c:	2821883a 	mov	r16,r5
   46e70:	39000204 	addi	r4,r7,8
   46e74:	01400244 	movi	r5,9
   46e78:	dcc00315 	stw	r19,12(sp)
   46e7c:	dc800215 	stw	r18,8(sp)
   46e80:	dfc00615 	stw	ra,24(sp)
   46e84:	dd400515 	stw	r21,20(sp)
   46e88:	dd000415 	stw	r20,16(sp)
   46e8c:	3825883a 	mov	r18,r7
   46e90:	3027883a 	mov	r19,r6
   46e94:	004aed80 	call	4aed8 <__divsi3>
   46e98:	00c00044 	movi	r3,1
   46e9c:	000b883a 	mov	r5,zero
   46ea0:	1880030e 	bge	r3,r2,46eb0 <__s2b+0x54>
   46ea4:	18c7883a 	add	r3,r3,r3
   46ea8:	29400044 	addi	r5,r5,1
   46eac:	18bffd16 	blt	r3,r2,46ea4 <__alt_data_end+0xfffdfda4>
   46eb0:	8809883a 	mov	r4,r17
   46eb4:	0046c6c0 	call	46c6c <_Balloc>
   46eb8:	d8c00717 	ldw	r3,28(sp)
   46ebc:	10c00515 	stw	r3,20(r2)
   46ec0:	00c00044 	movi	r3,1
   46ec4:	10c00415 	stw	r3,16(r2)
   46ec8:	00c00244 	movi	r3,9
   46ecc:	1cc0210e 	bge	r3,r19,46f54 <__s2b+0xf8>
   46ed0:	80eb883a 	add	r21,r16,r3
   46ed4:	a829883a 	mov	r20,r21
   46ed8:	84e1883a 	add	r16,r16,r19
   46edc:	a1c00007 	ldb	r7,0(r20)
   46ee0:	01800284 	movi	r6,10
   46ee4:	a5000044 	addi	r20,r20,1
   46ee8:	100b883a 	mov	r5,r2
   46eec:	39fff404 	addi	r7,r7,-48
   46ef0:	8809883a 	mov	r4,r17
   46ef4:	0046d3c0 	call	46d3c <__multadd>
   46ef8:	a43ff81e 	bne	r20,r16,46edc <__alt_data_end+0xfffdfddc>
   46efc:	ace1883a 	add	r16,r21,r19
   46f00:	843ffe04 	addi	r16,r16,-8
   46f04:	9c800a0e 	bge	r19,r18,46f30 <__s2b+0xd4>
   46f08:	94e5c83a 	sub	r18,r18,r19
   46f0c:	84a5883a 	add	r18,r16,r18
   46f10:	81c00007 	ldb	r7,0(r16)
   46f14:	01800284 	movi	r6,10
   46f18:	84000044 	addi	r16,r16,1
   46f1c:	100b883a 	mov	r5,r2
   46f20:	39fff404 	addi	r7,r7,-48
   46f24:	8809883a 	mov	r4,r17
   46f28:	0046d3c0 	call	46d3c <__multadd>
   46f2c:	84bff81e 	bne	r16,r18,46f10 <__alt_data_end+0xfffdfe10>
   46f30:	dfc00617 	ldw	ra,24(sp)
   46f34:	dd400517 	ldw	r21,20(sp)
   46f38:	dd000417 	ldw	r20,16(sp)
   46f3c:	dcc00317 	ldw	r19,12(sp)
   46f40:	dc800217 	ldw	r18,8(sp)
   46f44:	dc400117 	ldw	r17,4(sp)
   46f48:	dc000017 	ldw	r16,0(sp)
   46f4c:	dec00704 	addi	sp,sp,28
   46f50:	f800283a 	ret
   46f54:	84000284 	addi	r16,r16,10
   46f58:	1827883a 	mov	r19,r3
   46f5c:	003fe906 	br	46f04 <__alt_data_end+0xfffdfe04>

00046f60 <__hi0bits>:
   46f60:	20bfffec 	andhi	r2,r4,65535
   46f64:	1000141e 	bne	r2,zero,46fb8 <__hi0bits+0x58>
   46f68:	2008943a 	slli	r4,r4,16
   46f6c:	00800404 	movi	r2,16
   46f70:	20ffc02c 	andhi	r3,r4,65280
   46f74:	1800021e 	bne	r3,zero,46f80 <__hi0bits+0x20>
   46f78:	2008923a 	slli	r4,r4,8
   46f7c:	10800204 	addi	r2,r2,8
   46f80:	20fc002c 	andhi	r3,r4,61440
   46f84:	1800021e 	bne	r3,zero,46f90 <__hi0bits+0x30>
   46f88:	2008913a 	slli	r4,r4,4
   46f8c:	10800104 	addi	r2,r2,4
   46f90:	20f0002c 	andhi	r3,r4,49152
   46f94:	1800031e 	bne	r3,zero,46fa4 <__hi0bits+0x44>
   46f98:	2109883a 	add	r4,r4,r4
   46f9c:	10800084 	addi	r2,r2,2
   46fa0:	2109883a 	add	r4,r4,r4
   46fa4:	20000316 	blt	r4,zero,46fb4 <__hi0bits+0x54>
   46fa8:	2110002c 	andhi	r4,r4,16384
   46fac:	2000041e 	bne	r4,zero,46fc0 <__hi0bits+0x60>
   46fb0:	00800804 	movi	r2,32
   46fb4:	f800283a 	ret
   46fb8:	0005883a 	mov	r2,zero
   46fbc:	003fec06 	br	46f70 <__alt_data_end+0xfffdfe70>
   46fc0:	10800044 	addi	r2,r2,1
   46fc4:	f800283a 	ret

00046fc8 <__lo0bits>:
   46fc8:	20c00017 	ldw	r3,0(r4)
   46fcc:	188001cc 	andi	r2,r3,7
   46fd0:	10000826 	beq	r2,zero,46ff4 <__lo0bits+0x2c>
   46fd4:	1880004c 	andi	r2,r3,1
   46fd8:	1000211e 	bne	r2,zero,47060 <__lo0bits+0x98>
   46fdc:	1880008c 	andi	r2,r3,2
   46fe0:	1000211e 	bne	r2,zero,47068 <__lo0bits+0xa0>
   46fe4:	1806d0ba 	srli	r3,r3,2
   46fe8:	00800084 	movi	r2,2
   46fec:	20c00015 	stw	r3,0(r4)
   46ff0:	f800283a 	ret
   46ff4:	18bfffcc 	andi	r2,r3,65535
   46ff8:	10001326 	beq	r2,zero,47048 <__lo0bits+0x80>
   46ffc:	0005883a 	mov	r2,zero
   47000:	19403fcc 	andi	r5,r3,255
   47004:	2800021e 	bne	r5,zero,47010 <__lo0bits+0x48>
   47008:	1806d23a 	srli	r3,r3,8
   4700c:	10800204 	addi	r2,r2,8
   47010:	194003cc 	andi	r5,r3,15
   47014:	2800021e 	bne	r5,zero,47020 <__lo0bits+0x58>
   47018:	1806d13a 	srli	r3,r3,4
   4701c:	10800104 	addi	r2,r2,4
   47020:	194000cc 	andi	r5,r3,3
   47024:	2800021e 	bne	r5,zero,47030 <__lo0bits+0x68>
   47028:	1806d0ba 	srli	r3,r3,2
   4702c:	10800084 	addi	r2,r2,2
   47030:	1940004c 	andi	r5,r3,1
   47034:	2800081e 	bne	r5,zero,47058 <__lo0bits+0x90>
   47038:	1806d07a 	srli	r3,r3,1
   4703c:	1800051e 	bne	r3,zero,47054 <__lo0bits+0x8c>
   47040:	00800804 	movi	r2,32
   47044:	f800283a 	ret
   47048:	1806d43a 	srli	r3,r3,16
   4704c:	00800404 	movi	r2,16
   47050:	003feb06 	br	47000 <__alt_data_end+0xfffdff00>
   47054:	10800044 	addi	r2,r2,1
   47058:	20c00015 	stw	r3,0(r4)
   4705c:	f800283a 	ret
   47060:	0005883a 	mov	r2,zero
   47064:	f800283a 	ret
   47068:	1806d07a 	srli	r3,r3,1
   4706c:	00800044 	movi	r2,1
   47070:	20c00015 	stw	r3,0(r4)
   47074:	f800283a 	ret

00047078 <__i2b>:
   47078:	defffd04 	addi	sp,sp,-12
   4707c:	dc000015 	stw	r16,0(sp)
   47080:	04000044 	movi	r16,1
   47084:	dc400115 	stw	r17,4(sp)
   47088:	2823883a 	mov	r17,r5
   4708c:	800b883a 	mov	r5,r16
   47090:	dfc00215 	stw	ra,8(sp)
   47094:	0046c6c0 	call	46c6c <_Balloc>
   47098:	14400515 	stw	r17,20(r2)
   4709c:	14000415 	stw	r16,16(r2)
   470a0:	dfc00217 	ldw	ra,8(sp)
   470a4:	dc400117 	ldw	r17,4(sp)
   470a8:	dc000017 	ldw	r16,0(sp)
   470ac:	dec00304 	addi	sp,sp,12
   470b0:	f800283a 	ret

000470b4 <__multiply>:
   470b4:	defffa04 	addi	sp,sp,-24
   470b8:	dcc00315 	stw	r19,12(sp)
   470bc:	dc800215 	stw	r18,8(sp)
   470c0:	34c00417 	ldw	r19,16(r6)
   470c4:	2c800417 	ldw	r18,16(r5)
   470c8:	dd000415 	stw	r20,16(sp)
   470cc:	dc400115 	stw	r17,4(sp)
   470d0:	dfc00515 	stw	ra,20(sp)
   470d4:	dc000015 	stw	r16,0(sp)
   470d8:	2829883a 	mov	r20,r5
   470dc:	3023883a 	mov	r17,r6
   470e0:	94c0050e 	bge	r18,r19,470f8 <__multiply+0x44>
   470e4:	9007883a 	mov	r3,r18
   470e8:	3029883a 	mov	r20,r6
   470ec:	9825883a 	mov	r18,r19
   470f0:	2823883a 	mov	r17,r5
   470f4:	1827883a 	mov	r19,r3
   470f8:	a0800217 	ldw	r2,8(r20)
   470fc:	94e1883a 	add	r16,r18,r19
   47100:	a1400117 	ldw	r5,4(r20)
   47104:	1400010e 	bge	r2,r16,4710c <__multiply+0x58>
   47108:	29400044 	addi	r5,r5,1
   4710c:	0046c6c0 	call	46c6c <_Balloc>
   47110:	8415883a 	add	r10,r16,r16
   47114:	12c00504 	addi	r11,r2,20
   47118:	5295883a 	add	r10,r10,r10
   4711c:	5a95883a 	add	r10,r11,r10
   47120:	5807883a 	mov	r3,r11
   47124:	5a80032e 	bgeu	r11,r10,47134 <__multiply+0x80>
   47128:	18000015 	stw	zero,0(r3)
   4712c:	18c00104 	addi	r3,r3,4
   47130:	1abffd36 	bltu	r3,r10,47128 <__alt_data_end+0xfffe0028>
   47134:	9ce7883a 	add	r19,r19,r19
   47138:	94a5883a 	add	r18,r18,r18
   4713c:	89800504 	addi	r6,r17,20
   47140:	9ce7883a 	add	r19,r19,r19
   47144:	a3400504 	addi	r13,r20,20
   47148:	94a5883a 	add	r18,r18,r18
   4714c:	34d9883a 	add	r12,r6,r19
   47150:	6c93883a 	add	r9,r13,r18
   47154:	3300422e 	bgeu	r6,r12,47260 <__multiply+0x1ac>
   47158:	37c00017 	ldw	ra,0(r6)
   4715c:	fbffffcc 	andi	r15,ra,65535
   47160:	78001b26 	beq	r15,zero,471d0 <__multiply+0x11c>
   47164:	5811883a 	mov	r8,r11
   47168:	681d883a 	mov	r14,r13
   4716c:	000f883a 	mov	r7,zero
   47170:	71000017 	ldw	r4,0(r14)
   47174:	40c00017 	ldw	r3,0(r8)
   47178:	73800104 	addi	r14,r14,4
   4717c:	217fffcc 	andi	r5,r4,65535
   47180:	2bcb383a 	mul	r5,r5,r15
   47184:	2008d43a 	srli	r4,r4,16
   47188:	1c7fffcc 	andi	r17,r3,65535
   4718c:	2c4b883a 	add	r5,r5,r17
   47190:	29cb883a 	add	r5,r5,r7
   47194:	23c9383a 	mul	r4,r4,r15
   47198:	1806d43a 	srli	r3,r3,16
   4719c:	280ed43a 	srli	r7,r5,16
   471a0:	297fffcc 	andi	r5,r5,65535
   471a4:	20c7883a 	add	r3,r4,r3
   471a8:	19c7883a 	add	r3,r3,r7
   471ac:	1808943a 	slli	r4,r3,16
   471b0:	4023883a 	mov	r17,r8
   471b4:	180ed43a 	srli	r7,r3,16
   471b8:	214ab03a 	or	r5,r4,r5
   471bc:	41400015 	stw	r5,0(r8)
   471c0:	42000104 	addi	r8,r8,4
   471c4:	727fea36 	bltu	r14,r9,47170 <__alt_data_end+0xfffe0070>
   471c8:	89c00115 	stw	r7,4(r17)
   471cc:	37c00017 	ldw	ra,0(r6)
   471d0:	f83ed43a 	srli	ra,ra,16
   471d4:	f8001f26 	beq	ra,zero,47254 <__multiply+0x1a0>
   471d8:	58c00017 	ldw	r3,0(r11)
   471dc:	681d883a 	mov	r14,r13
   471e0:	581f883a 	mov	r15,r11
   471e4:	1811883a 	mov	r8,r3
   471e8:	5825883a 	mov	r18,r11
   471ec:	000f883a 	mov	r7,zero
   471f0:	00000106 	br	471f8 <__multiply+0x144>
   471f4:	8825883a 	mov	r18,r17
   471f8:	7140000b 	ldhu	r5,0(r14)
   471fc:	4010d43a 	srli	r8,r8,16
   47200:	193fffcc 	andi	r4,r3,65535
   47204:	2fcb383a 	mul	r5,r5,ra
   47208:	7bc00104 	addi	r15,r15,4
   4720c:	73800104 	addi	r14,r14,4
   47210:	2a0b883a 	add	r5,r5,r8
   47214:	29cb883a 	add	r5,r5,r7
   47218:	2806943a 	slli	r3,r5,16
   4721c:	94400104 	addi	r17,r18,4
   47220:	280ad43a 	srli	r5,r5,16
   47224:	1908b03a 	or	r4,r3,r4
   47228:	793fff15 	stw	r4,-4(r15)
   4722c:	70ffff17 	ldw	r3,-4(r14)
   47230:	8a000017 	ldw	r8,0(r17)
   47234:	1806d43a 	srli	r3,r3,16
   47238:	413fffcc 	andi	r4,r8,65535
   4723c:	1fc7383a 	mul	r3,r3,ra
   47240:	1907883a 	add	r3,r3,r4
   47244:	1947883a 	add	r3,r3,r5
   47248:	180ed43a 	srli	r7,r3,16
   4724c:	727fe936 	bltu	r14,r9,471f4 <__alt_data_end+0xfffe00f4>
   47250:	90c00115 	stw	r3,4(r18)
   47254:	31800104 	addi	r6,r6,4
   47258:	5ac00104 	addi	r11,r11,4
   4725c:	333fbe36 	bltu	r6,r12,47158 <__alt_data_end+0xfffe0058>
   47260:	0400090e 	bge	zero,r16,47288 <__multiply+0x1d4>
   47264:	50ffff17 	ldw	r3,-4(r10)
   47268:	52bfff04 	addi	r10,r10,-4
   4726c:	18000326 	beq	r3,zero,4727c <__multiply+0x1c8>
   47270:	00000506 	br	47288 <__multiply+0x1d4>
   47274:	50c00017 	ldw	r3,0(r10)
   47278:	1800031e 	bne	r3,zero,47288 <__multiply+0x1d4>
   4727c:	843fffc4 	addi	r16,r16,-1
   47280:	52bfff04 	addi	r10,r10,-4
   47284:	803ffb1e 	bne	r16,zero,47274 <__alt_data_end+0xfffe0174>
   47288:	14000415 	stw	r16,16(r2)
   4728c:	dfc00517 	ldw	ra,20(sp)
   47290:	dd000417 	ldw	r20,16(sp)
   47294:	dcc00317 	ldw	r19,12(sp)
   47298:	dc800217 	ldw	r18,8(sp)
   4729c:	dc400117 	ldw	r17,4(sp)
   472a0:	dc000017 	ldw	r16,0(sp)
   472a4:	dec00604 	addi	sp,sp,24
   472a8:	f800283a 	ret

000472ac <__pow5mult>:
   472ac:	defffa04 	addi	sp,sp,-24
   472b0:	dcc00315 	stw	r19,12(sp)
   472b4:	dc000015 	stw	r16,0(sp)
   472b8:	dfc00515 	stw	ra,20(sp)
   472bc:	dd000415 	stw	r20,16(sp)
   472c0:	dc800215 	stw	r18,8(sp)
   472c4:	dc400115 	stw	r17,4(sp)
   472c8:	308000cc 	andi	r2,r6,3
   472cc:	3021883a 	mov	r16,r6
   472d0:	2027883a 	mov	r19,r4
   472d4:	10002f1e 	bne	r2,zero,47394 <__pow5mult+0xe8>
   472d8:	2825883a 	mov	r18,r5
   472dc:	8021d0ba 	srai	r16,r16,2
   472e0:	80001a26 	beq	r16,zero,4734c <__pow5mult+0xa0>
   472e4:	9c401217 	ldw	r17,72(r19)
   472e8:	8800061e 	bne	r17,zero,47304 <__pow5mult+0x58>
   472ec:	00003406 	br	473c0 <__pow5mult+0x114>
   472f0:	8021d07a 	srai	r16,r16,1
   472f4:	80001526 	beq	r16,zero,4734c <__pow5mult+0xa0>
   472f8:	88800017 	ldw	r2,0(r17)
   472fc:	10001c26 	beq	r2,zero,47370 <__pow5mult+0xc4>
   47300:	1023883a 	mov	r17,r2
   47304:	8080004c 	andi	r2,r16,1
   47308:	103ff926 	beq	r2,zero,472f0 <__alt_data_end+0xfffe01f0>
   4730c:	880d883a 	mov	r6,r17
   47310:	900b883a 	mov	r5,r18
   47314:	9809883a 	mov	r4,r19
   47318:	00470b40 	call	470b4 <__multiply>
   4731c:	90001b26 	beq	r18,zero,4738c <__pow5mult+0xe0>
   47320:	91000117 	ldw	r4,4(r18)
   47324:	98c01317 	ldw	r3,76(r19)
   47328:	8021d07a 	srai	r16,r16,1
   4732c:	2109883a 	add	r4,r4,r4
   47330:	2109883a 	add	r4,r4,r4
   47334:	1907883a 	add	r3,r3,r4
   47338:	19000017 	ldw	r4,0(r3)
   4733c:	91000015 	stw	r4,0(r18)
   47340:	1c800015 	stw	r18,0(r3)
   47344:	1025883a 	mov	r18,r2
   47348:	803feb1e 	bne	r16,zero,472f8 <__alt_data_end+0xfffe01f8>
   4734c:	9005883a 	mov	r2,r18
   47350:	dfc00517 	ldw	ra,20(sp)
   47354:	dd000417 	ldw	r20,16(sp)
   47358:	dcc00317 	ldw	r19,12(sp)
   4735c:	dc800217 	ldw	r18,8(sp)
   47360:	dc400117 	ldw	r17,4(sp)
   47364:	dc000017 	ldw	r16,0(sp)
   47368:	dec00604 	addi	sp,sp,24
   4736c:	f800283a 	ret
   47370:	880d883a 	mov	r6,r17
   47374:	880b883a 	mov	r5,r17
   47378:	9809883a 	mov	r4,r19
   4737c:	00470b40 	call	470b4 <__multiply>
   47380:	88800015 	stw	r2,0(r17)
   47384:	10000015 	stw	zero,0(r2)
   47388:	003fdd06 	br	47300 <__alt_data_end+0xfffe0200>
   4738c:	1025883a 	mov	r18,r2
   47390:	003fd706 	br	472f0 <__alt_data_end+0xfffe01f0>
   47394:	10bfffc4 	addi	r2,r2,-1
   47398:	1085883a 	add	r2,r2,r2
   4739c:	00c00174 	movhi	r3,5
   473a0:	18fe2004 	addi	r3,r3,-1920
   473a4:	1085883a 	add	r2,r2,r2
   473a8:	1885883a 	add	r2,r3,r2
   473ac:	11800017 	ldw	r6,0(r2)
   473b0:	000f883a 	mov	r7,zero
   473b4:	0046d3c0 	call	46d3c <__multadd>
   473b8:	1025883a 	mov	r18,r2
   473bc:	003fc706 	br	472dc <__alt_data_end+0xfffe01dc>
   473c0:	05000044 	movi	r20,1
   473c4:	a00b883a 	mov	r5,r20
   473c8:	9809883a 	mov	r4,r19
   473cc:	0046c6c0 	call	46c6c <_Balloc>
   473d0:	1023883a 	mov	r17,r2
   473d4:	00809c44 	movi	r2,625
   473d8:	88800515 	stw	r2,20(r17)
   473dc:	8d000415 	stw	r20,16(r17)
   473e0:	9c401215 	stw	r17,72(r19)
   473e4:	88000015 	stw	zero,0(r17)
   473e8:	003fc606 	br	47304 <__alt_data_end+0xfffe0204>

000473ec <__lshift>:
   473ec:	defff904 	addi	sp,sp,-28
   473f0:	dd400515 	stw	r21,20(sp)
   473f4:	dcc00315 	stw	r19,12(sp)
   473f8:	302bd17a 	srai	r21,r6,5
   473fc:	2cc00417 	ldw	r19,16(r5)
   47400:	28800217 	ldw	r2,8(r5)
   47404:	dd000415 	stw	r20,16(sp)
   47408:	ace7883a 	add	r19,r21,r19
   4740c:	dc800215 	stw	r18,8(sp)
   47410:	dc400115 	stw	r17,4(sp)
   47414:	dc000015 	stw	r16,0(sp)
   47418:	dfc00615 	stw	ra,24(sp)
   4741c:	9c000044 	addi	r16,r19,1
   47420:	2823883a 	mov	r17,r5
   47424:	3029883a 	mov	r20,r6
   47428:	2025883a 	mov	r18,r4
   4742c:	29400117 	ldw	r5,4(r5)
   47430:	1400030e 	bge	r2,r16,47440 <__lshift+0x54>
   47434:	1085883a 	add	r2,r2,r2
   47438:	29400044 	addi	r5,r5,1
   4743c:	143ffd16 	blt	r2,r16,47434 <__alt_data_end+0xfffe0334>
   47440:	9009883a 	mov	r4,r18
   47444:	0046c6c0 	call	46c6c <_Balloc>
   47448:	10c00504 	addi	r3,r2,20
   4744c:	0540070e 	bge	zero,r21,4746c <__lshift+0x80>
   47450:	ad6b883a 	add	r21,r21,r21
   47454:	ad6b883a 	add	r21,r21,r21
   47458:	1809883a 	mov	r4,r3
   4745c:	1d47883a 	add	r3,r3,r21
   47460:	20000015 	stw	zero,0(r4)
   47464:	21000104 	addi	r4,r4,4
   47468:	193ffd1e 	bne	r3,r4,47460 <__alt_data_end+0xfffe0360>
   4746c:	8a000417 	ldw	r8,16(r17)
   47470:	89000504 	addi	r4,r17,20
   47474:	a18007cc 	andi	r6,r20,31
   47478:	4211883a 	add	r8,r8,r8
   4747c:	4211883a 	add	r8,r8,r8
   47480:	2211883a 	add	r8,r4,r8
   47484:	30002326 	beq	r6,zero,47514 <__lshift+0x128>
   47488:	02400804 	movi	r9,32
   4748c:	4993c83a 	sub	r9,r9,r6
   47490:	000b883a 	mov	r5,zero
   47494:	21c00017 	ldw	r7,0(r4)
   47498:	1815883a 	mov	r10,r3
   4749c:	18c00104 	addi	r3,r3,4
   474a0:	398e983a 	sll	r7,r7,r6
   474a4:	21000104 	addi	r4,r4,4
   474a8:	394ab03a 	or	r5,r7,r5
   474ac:	197fff15 	stw	r5,-4(r3)
   474b0:	217fff17 	ldw	r5,-4(r4)
   474b4:	2a4ad83a 	srl	r5,r5,r9
   474b8:	223ff636 	bltu	r4,r8,47494 <__alt_data_end+0xfffe0394>
   474bc:	51400115 	stw	r5,4(r10)
   474c0:	28001a1e 	bne	r5,zero,4752c <__lshift+0x140>
   474c4:	843fffc4 	addi	r16,r16,-1
   474c8:	14000415 	stw	r16,16(r2)
   474cc:	88000826 	beq	r17,zero,474f0 <__lshift+0x104>
   474d0:	89000117 	ldw	r4,4(r17)
   474d4:	90c01317 	ldw	r3,76(r18)
   474d8:	2109883a 	add	r4,r4,r4
   474dc:	2109883a 	add	r4,r4,r4
   474e0:	1907883a 	add	r3,r3,r4
   474e4:	19000017 	ldw	r4,0(r3)
   474e8:	89000015 	stw	r4,0(r17)
   474ec:	1c400015 	stw	r17,0(r3)
   474f0:	dfc00617 	ldw	ra,24(sp)
   474f4:	dd400517 	ldw	r21,20(sp)
   474f8:	dd000417 	ldw	r20,16(sp)
   474fc:	dcc00317 	ldw	r19,12(sp)
   47500:	dc800217 	ldw	r18,8(sp)
   47504:	dc400117 	ldw	r17,4(sp)
   47508:	dc000017 	ldw	r16,0(sp)
   4750c:	dec00704 	addi	sp,sp,28
   47510:	f800283a 	ret
   47514:	21400017 	ldw	r5,0(r4)
   47518:	18c00104 	addi	r3,r3,4
   4751c:	21000104 	addi	r4,r4,4
   47520:	197fff15 	stw	r5,-4(r3)
   47524:	223ffb36 	bltu	r4,r8,47514 <__alt_data_end+0xfffe0414>
   47528:	003fe606 	br	474c4 <__alt_data_end+0xfffe03c4>
   4752c:	9c000084 	addi	r16,r19,2
   47530:	003fe406 	br	474c4 <__alt_data_end+0xfffe03c4>

00047534 <__mcmp>:
   47534:	20800417 	ldw	r2,16(r4)
   47538:	28c00417 	ldw	r3,16(r5)
   4753c:	10c5c83a 	sub	r2,r2,r3
   47540:	1000111e 	bne	r2,zero,47588 <__mcmp+0x54>
   47544:	18c7883a 	add	r3,r3,r3
   47548:	18c7883a 	add	r3,r3,r3
   4754c:	21000504 	addi	r4,r4,20
   47550:	29400504 	addi	r5,r5,20
   47554:	20c5883a 	add	r2,r4,r3
   47558:	28cb883a 	add	r5,r5,r3
   4755c:	00000106 	br	47564 <__mcmp+0x30>
   47560:	20800a2e 	bgeu	r4,r2,4758c <__mcmp+0x58>
   47564:	10bfff04 	addi	r2,r2,-4
   47568:	297fff04 	addi	r5,r5,-4
   4756c:	11800017 	ldw	r6,0(r2)
   47570:	28c00017 	ldw	r3,0(r5)
   47574:	30fffa26 	beq	r6,r3,47560 <__alt_data_end+0xfffe0460>
   47578:	30c00236 	bltu	r6,r3,47584 <__mcmp+0x50>
   4757c:	00800044 	movi	r2,1
   47580:	f800283a 	ret
   47584:	00bfffc4 	movi	r2,-1
   47588:	f800283a 	ret
   4758c:	0005883a 	mov	r2,zero
   47590:	f800283a 	ret

00047594 <__mdiff>:
   47594:	28c00417 	ldw	r3,16(r5)
   47598:	30800417 	ldw	r2,16(r6)
   4759c:	defffa04 	addi	sp,sp,-24
   475a0:	dcc00315 	stw	r19,12(sp)
   475a4:	dc800215 	stw	r18,8(sp)
   475a8:	dfc00515 	stw	ra,20(sp)
   475ac:	dd000415 	stw	r20,16(sp)
   475b0:	dc400115 	stw	r17,4(sp)
   475b4:	dc000015 	stw	r16,0(sp)
   475b8:	1887c83a 	sub	r3,r3,r2
   475bc:	2825883a 	mov	r18,r5
   475c0:	3027883a 	mov	r19,r6
   475c4:	1800141e 	bne	r3,zero,47618 <__mdiff+0x84>
   475c8:	1085883a 	add	r2,r2,r2
   475cc:	1085883a 	add	r2,r2,r2
   475d0:	2a000504 	addi	r8,r5,20
   475d4:	34000504 	addi	r16,r6,20
   475d8:	4087883a 	add	r3,r8,r2
   475dc:	8085883a 	add	r2,r16,r2
   475e0:	00000106 	br	475e8 <__mdiff+0x54>
   475e4:	40c0592e 	bgeu	r8,r3,4774c <__mdiff+0x1b8>
   475e8:	18ffff04 	addi	r3,r3,-4
   475ec:	10bfff04 	addi	r2,r2,-4
   475f0:	19c00017 	ldw	r7,0(r3)
   475f4:	11400017 	ldw	r5,0(r2)
   475f8:	397ffa26 	beq	r7,r5,475e4 <__alt_data_end+0xfffe04e4>
   475fc:	3940592e 	bgeu	r7,r5,47764 <__mdiff+0x1d0>
   47600:	9005883a 	mov	r2,r18
   47604:	4023883a 	mov	r17,r8
   47608:	9825883a 	mov	r18,r19
   4760c:	05000044 	movi	r20,1
   47610:	1027883a 	mov	r19,r2
   47614:	00000406 	br	47628 <__mdiff+0x94>
   47618:	18005616 	blt	r3,zero,47774 <__mdiff+0x1e0>
   4761c:	34400504 	addi	r17,r6,20
   47620:	2c000504 	addi	r16,r5,20
   47624:	0029883a 	mov	r20,zero
   47628:	91400117 	ldw	r5,4(r18)
   4762c:	0046c6c0 	call	46c6c <_Balloc>
   47630:	92400417 	ldw	r9,16(r18)
   47634:	9b000417 	ldw	r12,16(r19)
   47638:	12c00504 	addi	r11,r2,20
   4763c:	4a51883a 	add	r8,r9,r9
   47640:	6319883a 	add	r12,r12,r12
   47644:	4211883a 	add	r8,r8,r8
   47648:	6319883a 	add	r12,r12,r12
   4764c:	15000315 	stw	r20,12(r2)
   47650:	8211883a 	add	r8,r16,r8
   47654:	8b19883a 	add	r12,r17,r12
   47658:	0007883a 	mov	r3,zero
   4765c:	81400017 	ldw	r5,0(r16)
   47660:	89c00017 	ldw	r7,0(r17)
   47664:	59800104 	addi	r6,r11,4
   47668:	293fffcc 	andi	r4,r5,65535
   4766c:	20c7883a 	add	r3,r4,r3
   47670:	393fffcc 	andi	r4,r7,65535
   47674:	1909c83a 	sub	r4,r3,r4
   47678:	280ad43a 	srli	r5,r5,16
   4767c:	380ed43a 	srli	r7,r7,16
   47680:	2007d43a 	srai	r3,r4,16
   47684:	213fffcc 	andi	r4,r4,65535
   47688:	29cbc83a 	sub	r5,r5,r7
   4768c:	28c7883a 	add	r3,r5,r3
   47690:	180a943a 	slli	r5,r3,16
   47694:	8c400104 	addi	r17,r17,4
   47698:	84000104 	addi	r16,r16,4
   4769c:	2908b03a 	or	r4,r5,r4
   476a0:	59000015 	stw	r4,0(r11)
   476a4:	1807d43a 	srai	r3,r3,16
   476a8:	3015883a 	mov	r10,r6
   476ac:	3017883a 	mov	r11,r6
   476b0:	8b3fea36 	bltu	r17,r12,4765c <__alt_data_end+0xfffe055c>
   476b4:	8200162e 	bgeu	r16,r8,47710 <__mdiff+0x17c>
   476b8:	8017883a 	mov	r11,r16
   476bc:	59400017 	ldw	r5,0(r11)
   476c0:	31800104 	addi	r6,r6,4
   476c4:	5ac00104 	addi	r11,r11,4
   476c8:	293fffcc 	andi	r4,r5,65535
   476cc:	20c7883a 	add	r3,r4,r3
   476d0:	280ed43a 	srli	r7,r5,16
   476d4:	180bd43a 	srai	r5,r3,16
   476d8:	193fffcc 	andi	r4,r3,65535
   476dc:	3947883a 	add	r3,r7,r5
   476e0:	180a943a 	slli	r5,r3,16
   476e4:	1807d43a 	srai	r3,r3,16
   476e8:	2908b03a 	or	r4,r5,r4
   476ec:	313fff15 	stw	r4,-4(r6)
   476f0:	5a3ff236 	bltu	r11,r8,476bc <__alt_data_end+0xfffe05bc>
   476f4:	0406303a 	nor	r3,zero,r16
   476f8:	1a07883a 	add	r3,r3,r8
   476fc:	1806d0ba 	srli	r3,r3,2
   47700:	18c00044 	addi	r3,r3,1
   47704:	18c7883a 	add	r3,r3,r3
   47708:	18c7883a 	add	r3,r3,r3
   4770c:	50d5883a 	add	r10,r10,r3
   47710:	50ffff04 	addi	r3,r10,-4
   47714:	2000041e 	bne	r4,zero,47728 <__mdiff+0x194>
   47718:	18ffff04 	addi	r3,r3,-4
   4771c:	19000017 	ldw	r4,0(r3)
   47720:	4a7fffc4 	addi	r9,r9,-1
   47724:	203ffc26 	beq	r4,zero,47718 <__alt_data_end+0xfffe0618>
   47728:	12400415 	stw	r9,16(r2)
   4772c:	dfc00517 	ldw	ra,20(sp)
   47730:	dd000417 	ldw	r20,16(sp)
   47734:	dcc00317 	ldw	r19,12(sp)
   47738:	dc800217 	ldw	r18,8(sp)
   4773c:	dc400117 	ldw	r17,4(sp)
   47740:	dc000017 	ldw	r16,0(sp)
   47744:	dec00604 	addi	sp,sp,24
   47748:	f800283a 	ret
   4774c:	000b883a 	mov	r5,zero
   47750:	0046c6c0 	call	46c6c <_Balloc>
   47754:	00c00044 	movi	r3,1
   47758:	10c00415 	stw	r3,16(r2)
   4775c:	10000515 	stw	zero,20(r2)
   47760:	003ff206 	br	4772c <__alt_data_end+0xfffe062c>
   47764:	8023883a 	mov	r17,r16
   47768:	0029883a 	mov	r20,zero
   4776c:	4021883a 	mov	r16,r8
   47770:	003fad06 	br	47628 <__alt_data_end+0xfffe0528>
   47774:	9005883a 	mov	r2,r18
   47778:	94400504 	addi	r17,r18,20
   4777c:	9c000504 	addi	r16,r19,20
   47780:	9825883a 	mov	r18,r19
   47784:	05000044 	movi	r20,1
   47788:	1027883a 	mov	r19,r2
   4778c:	003fa606 	br	47628 <__alt_data_end+0xfffe0528>

00047790 <__ulp>:
   47790:	295ffc2c 	andhi	r5,r5,32752
   47794:	00bf3034 	movhi	r2,64704
   47798:	2887883a 	add	r3,r5,r2
   4779c:	00c0020e 	bge	zero,r3,477a8 <__ulp+0x18>
   477a0:	0005883a 	mov	r2,zero
   477a4:	f800283a 	ret
   477a8:	00c7c83a 	sub	r3,zero,r3
   477ac:	1807d53a 	srai	r3,r3,20
   477b0:	008004c4 	movi	r2,19
   477b4:	10c00b0e 	bge	r2,r3,477e4 <__ulp+0x54>
   477b8:	18bffb04 	addi	r2,r3,-20
   477bc:	01000784 	movi	r4,30
   477c0:	0007883a 	mov	r3,zero
   477c4:	20800516 	blt	r4,r2,477dc <__ulp+0x4c>
   477c8:	010007c4 	movi	r4,31
   477cc:	2089c83a 	sub	r4,r4,r2
   477d0:	00800044 	movi	r2,1
   477d4:	1104983a 	sll	r2,r2,r4
   477d8:	f800283a 	ret
   477dc:	00800044 	movi	r2,1
   477e0:	f800283a 	ret
   477e4:	01400234 	movhi	r5,8
   477e8:	28c7d83a 	sra	r3,r5,r3
   477ec:	0005883a 	mov	r2,zero
   477f0:	f800283a 	ret

000477f4 <__b2d>:
   477f4:	defffa04 	addi	sp,sp,-24
   477f8:	dc000015 	stw	r16,0(sp)
   477fc:	24000417 	ldw	r16,16(r4)
   47800:	dc400115 	stw	r17,4(sp)
   47804:	24400504 	addi	r17,r4,20
   47808:	8421883a 	add	r16,r16,r16
   4780c:	8421883a 	add	r16,r16,r16
   47810:	8c21883a 	add	r16,r17,r16
   47814:	dc800215 	stw	r18,8(sp)
   47818:	84bfff17 	ldw	r18,-4(r16)
   4781c:	dd000415 	stw	r20,16(sp)
   47820:	dcc00315 	stw	r19,12(sp)
   47824:	9009883a 	mov	r4,r18
   47828:	2829883a 	mov	r20,r5
   4782c:	dfc00515 	stw	ra,20(sp)
   47830:	0046f600 	call	46f60 <__hi0bits>
   47834:	00c00804 	movi	r3,32
   47838:	1889c83a 	sub	r4,r3,r2
   4783c:	a1000015 	stw	r4,0(r20)
   47840:	01000284 	movi	r4,10
   47844:	84ffff04 	addi	r19,r16,-4
   47848:	20801216 	blt	r4,r2,47894 <__b2d+0xa0>
   4784c:	018002c4 	movi	r6,11
   47850:	308dc83a 	sub	r6,r6,r2
   47854:	9186d83a 	srl	r3,r18,r6
   47858:	18cffc34 	orhi	r3,r3,16368
   4785c:	8cc0212e 	bgeu	r17,r19,478e4 <__b2d+0xf0>
   47860:	813ffe17 	ldw	r4,-8(r16)
   47864:	218cd83a 	srl	r6,r4,r6
   47868:	10800544 	addi	r2,r2,21
   4786c:	9084983a 	sll	r2,r18,r2
   47870:	1184b03a 	or	r2,r2,r6
   47874:	dfc00517 	ldw	ra,20(sp)
   47878:	dd000417 	ldw	r20,16(sp)
   4787c:	dcc00317 	ldw	r19,12(sp)
   47880:	dc800217 	ldw	r18,8(sp)
   47884:	dc400117 	ldw	r17,4(sp)
   47888:	dc000017 	ldw	r16,0(sp)
   4788c:	dec00604 	addi	sp,sp,24
   47890:	f800283a 	ret
   47894:	8cc00f2e 	bgeu	r17,r19,478d4 <__b2d+0xe0>
   47898:	117ffd44 	addi	r5,r2,-11
   4789c:	80bffe17 	ldw	r2,-8(r16)
   478a0:	28000e26 	beq	r5,zero,478dc <__b2d+0xe8>
   478a4:	1949c83a 	sub	r4,r3,r5
   478a8:	9164983a 	sll	r18,r18,r5
   478ac:	1106d83a 	srl	r3,r2,r4
   478b0:	81bffe04 	addi	r6,r16,-8
   478b4:	948ffc34 	orhi	r18,r18,16368
   478b8:	90c6b03a 	or	r3,r18,r3
   478bc:	89800e2e 	bgeu	r17,r6,478f8 <__b2d+0x104>
   478c0:	81bffd17 	ldw	r6,-12(r16)
   478c4:	1144983a 	sll	r2,r2,r5
   478c8:	310ad83a 	srl	r5,r6,r4
   478cc:	2884b03a 	or	r2,r5,r2
   478d0:	003fe806 	br	47874 <__alt_data_end+0xfffe0774>
   478d4:	10bffd44 	addi	r2,r2,-11
   478d8:	1000041e 	bne	r2,zero,478ec <__b2d+0xf8>
   478dc:	90cffc34 	orhi	r3,r18,16368
   478e0:	003fe406 	br	47874 <__alt_data_end+0xfffe0774>
   478e4:	000d883a 	mov	r6,zero
   478e8:	003fdf06 	br	47868 <__alt_data_end+0xfffe0768>
   478ec:	90a4983a 	sll	r18,r18,r2
   478f0:	0005883a 	mov	r2,zero
   478f4:	003ff906 	br	478dc <__alt_data_end+0xfffe07dc>
   478f8:	1144983a 	sll	r2,r2,r5
   478fc:	003fdd06 	br	47874 <__alt_data_end+0xfffe0774>

00047900 <__d2b>:
   47900:	defff804 	addi	sp,sp,-32
   47904:	dc000215 	stw	r16,8(sp)
   47908:	3021883a 	mov	r16,r6
   4790c:	dc400315 	stw	r17,12(sp)
   47910:	8022907a 	slli	r17,r16,1
   47914:	dd000615 	stw	r20,24(sp)
   47918:	2829883a 	mov	r20,r5
   4791c:	01400044 	movi	r5,1
   47920:	dcc00515 	stw	r19,20(sp)
   47924:	dc800415 	stw	r18,16(sp)
   47928:	dfc00715 	stw	ra,28(sp)
   4792c:	3825883a 	mov	r18,r7
   47930:	8822d57a 	srli	r17,r17,21
   47934:	0046c6c0 	call	46c6c <_Balloc>
   47938:	1027883a 	mov	r19,r2
   4793c:	00800434 	movhi	r2,16
   47940:	10bfffc4 	addi	r2,r2,-1
   47944:	808c703a 	and	r6,r16,r2
   47948:	88000126 	beq	r17,zero,47950 <__d2b+0x50>
   4794c:	31800434 	orhi	r6,r6,16
   47950:	d9800015 	stw	r6,0(sp)
   47954:	a0002426 	beq	r20,zero,479e8 <__d2b+0xe8>
   47958:	d9000104 	addi	r4,sp,4
   4795c:	dd000115 	stw	r20,4(sp)
   47960:	0046fc80 	call	46fc8 <__lo0bits>
   47964:	d8c00017 	ldw	r3,0(sp)
   47968:	10002f1e 	bne	r2,zero,47a28 <__d2b+0x128>
   4796c:	d9000117 	ldw	r4,4(sp)
   47970:	99000515 	stw	r4,20(r19)
   47974:	1821003a 	cmpeq	r16,r3,zero
   47978:	01000084 	movi	r4,2
   4797c:	2421c83a 	sub	r16,r4,r16
   47980:	98c00615 	stw	r3,24(r19)
   47984:	9c000415 	stw	r16,16(r19)
   47988:	88001f1e 	bne	r17,zero,47a08 <__d2b+0x108>
   4798c:	10bef384 	addi	r2,r2,-1074
   47990:	90800015 	stw	r2,0(r18)
   47994:	00900034 	movhi	r2,16384
   47998:	10bfffc4 	addi	r2,r2,-1
   4799c:	8085883a 	add	r2,r16,r2
   479a0:	1085883a 	add	r2,r2,r2
   479a4:	1085883a 	add	r2,r2,r2
   479a8:	9885883a 	add	r2,r19,r2
   479ac:	11000517 	ldw	r4,20(r2)
   479b0:	8020917a 	slli	r16,r16,5
   479b4:	0046f600 	call	46f60 <__hi0bits>
   479b8:	d8c00817 	ldw	r3,32(sp)
   479bc:	8085c83a 	sub	r2,r16,r2
   479c0:	18800015 	stw	r2,0(r3)
   479c4:	9805883a 	mov	r2,r19
   479c8:	dfc00717 	ldw	ra,28(sp)
   479cc:	dd000617 	ldw	r20,24(sp)
   479d0:	dcc00517 	ldw	r19,20(sp)
   479d4:	dc800417 	ldw	r18,16(sp)
   479d8:	dc400317 	ldw	r17,12(sp)
   479dc:	dc000217 	ldw	r16,8(sp)
   479e0:	dec00804 	addi	sp,sp,32
   479e4:	f800283a 	ret
   479e8:	d809883a 	mov	r4,sp
   479ec:	0046fc80 	call	46fc8 <__lo0bits>
   479f0:	d8c00017 	ldw	r3,0(sp)
   479f4:	04000044 	movi	r16,1
   479f8:	9c000415 	stw	r16,16(r19)
   479fc:	98c00515 	stw	r3,20(r19)
   47a00:	10800804 	addi	r2,r2,32
   47a04:	883fe126 	beq	r17,zero,4798c <__alt_data_end+0xfffe088c>
   47a08:	00c00d44 	movi	r3,53
   47a0c:	8c7ef344 	addi	r17,r17,-1075
   47a10:	88a3883a 	add	r17,r17,r2
   47a14:	1885c83a 	sub	r2,r3,r2
   47a18:	d8c00817 	ldw	r3,32(sp)
   47a1c:	94400015 	stw	r17,0(r18)
   47a20:	18800015 	stw	r2,0(r3)
   47a24:	003fe706 	br	479c4 <__alt_data_end+0xfffe08c4>
   47a28:	01000804 	movi	r4,32
   47a2c:	2089c83a 	sub	r4,r4,r2
   47a30:	1908983a 	sll	r4,r3,r4
   47a34:	d9400117 	ldw	r5,4(sp)
   47a38:	1886d83a 	srl	r3,r3,r2
   47a3c:	2148b03a 	or	r4,r4,r5
   47a40:	99000515 	stw	r4,20(r19)
   47a44:	d8c00015 	stw	r3,0(sp)
   47a48:	003fca06 	br	47974 <__alt_data_end+0xfffe0874>

00047a4c <__ratio>:
   47a4c:	defff904 	addi	sp,sp,-28
   47a50:	dc400315 	stw	r17,12(sp)
   47a54:	2823883a 	mov	r17,r5
   47a58:	d9400104 	addi	r5,sp,4
   47a5c:	dfc00615 	stw	ra,24(sp)
   47a60:	dcc00515 	stw	r19,20(sp)
   47a64:	dc800415 	stw	r18,16(sp)
   47a68:	2027883a 	mov	r19,r4
   47a6c:	dc000215 	stw	r16,8(sp)
   47a70:	00477f40 	call	477f4 <__b2d>
   47a74:	d80b883a 	mov	r5,sp
   47a78:	8809883a 	mov	r4,r17
   47a7c:	1025883a 	mov	r18,r2
   47a80:	1821883a 	mov	r16,r3
   47a84:	00477f40 	call	477f4 <__b2d>
   47a88:	8a000417 	ldw	r8,16(r17)
   47a8c:	99000417 	ldw	r4,16(r19)
   47a90:	d9400117 	ldw	r5,4(sp)
   47a94:	2209c83a 	sub	r4,r4,r8
   47a98:	2010917a 	slli	r8,r4,5
   47a9c:	d9000017 	ldw	r4,0(sp)
   47aa0:	2909c83a 	sub	r4,r5,r4
   47aa4:	4109883a 	add	r4,r8,r4
   47aa8:	01000e0e 	bge	zero,r4,47ae4 <__ratio+0x98>
   47aac:	2008953a 	slli	r4,r4,20
   47ab0:	2421883a 	add	r16,r4,r16
   47ab4:	100d883a 	mov	r6,r2
   47ab8:	180f883a 	mov	r7,r3
   47abc:	9009883a 	mov	r4,r18
   47ac0:	800b883a 	mov	r5,r16
   47ac4:	004b9380 	call	4b938 <__divdf3>
   47ac8:	dfc00617 	ldw	ra,24(sp)
   47acc:	dcc00517 	ldw	r19,20(sp)
   47ad0:	dc800417 	ldw	r18,16(sp)
   47ad4:	dc400317 	ldw	r17,12(sp)
   47ad8:	dc000217 	ldw	r16,8(sp)
   47adc:	dec00704 	addi	sp,sp,28
   47ae0:	f800283a 	ret
   47ae4:	2008953a 	slli	r4,r4,20
   47ae8:	1907c83a 	sub	r3,r3,r4
   47aec:	003ff106 	br	47ab4 <__alt_data_end+0xfffe09b4>

00047af0 <_mprec_log10>:
   47af0:	defffe04 	addi	sp,sp,-8
   47af4:	dc000015 	stw	r16,0(sp)
   47af8:	dfc00115 	stw	ra,4(sp)
   47afc:	008005c4 	movi	r2,23
   47b00:	2021883a 	mov	r16,r4
   47b04:	11000d0e 	bge	r2,r4,47b3c <_mprec_log10+0x4c>
   47b08:	0005883a 	mov	r2,zero
   47b0c:	00cffc34 	movhi	r3,16368
   47b10:	843fffc4 	addi	r16,r16,-1
   47b14:	000d883a 	mov	r6,zero
   47b18:	01d00934 	movhi	r7,16420
   47b1c:	1009883a 	mov	r4,r2
   47b20:	180b883a 	mov	r5,r3
   47b24:	00402c40 	call	402c4 <__muldf3>
   47b28:	803ff91e 	bne	r16,zero,47b10 <__alt_data_end+0xfffe0a10>
   47b2c:	dfc00117 	ldw	ra,4(sp)
   47b30:	dc000017 	ldw	r16,0(sp)
   47b34:	dec00204 	addi	sp,sp,8
   47b38:	f800283a 	ret
   47b3c:	202090fa 	slli	r16,r4,3
   47b40:	00800174 	movhi	r2,5
   47b44:	10be3704 	addi	r2,r2,-1828
   47b48:	1421883a 	add	r16,r2,r16
   47b4c:	80800017 	ldw	r2,0(r16)
   47b50:	80c00117 	ldw	r3,4(r16)
   47b54:	dfc00117 	ldw	ra,4(sp)
   47b58:	dc000017 	ldw	r16,0(sp)
   47b5c:	dec00204 	addi	sp,sp,8
   47b60:	f800283a 	ret

00047b64 <__copybits>:
   47b64:	297fffc4 	addi	r5,r5,-1
   47b68:	280fd17a 	srai	r7,r5,5
   47b6c:	30c00417 	ldw	r3,16(r6)
   47b70:	30800504 	addi	r2,r6,20
   47b74:	39c00044 	addi	r7,r7,1
   47b78:	18c7883a 	add	r3,r3,r3
   47b7c:	39cf883a 	add	r7,r7,r7
   47b80:	18c7883a 	add	r3,r3,r3
   47b84:	39cf883a 	add	r7,r7,r7
   47b88:	10c7883a 	add	r3,r2,r3
   47b8c:	21cf883a 	add	r7,r4,r7
   47b90:	10c00d2e 	bgeu	r2,r3,47bc8 <__copybits+0x64>
   47b94:	200b883a 	mov	r5,r4
   47b98:	12000017 	ldw	r8,0(r2)
   47b9c:	29400104 	addi	r5,r5,4
   47ba0:	10800104 	addi	r2,r2,4
   47ba4:	2a3fff15 	stw	r8,-4(r5)
   47ba8:	10fffb36 	bltu	r2,r3,47b98 <__alt_data_end+0xfffe0a98>
   47bac:	1985c83a 	sub	r2,r3,r6
   47bb0:	10bffac4 	addi	r2,r2,-21
   47bb4:	1004d0ba 	srli	r2,r2,2
   47bb8:	10800044 	addi	r2,r2,1
   47bbc:	1085883a 	add	r2,r2,r2
   47bc0:	1085883a 	add	r2,r2,r2
   47bc4:	2089883a 	add	r4,r4,r2
   47bc8:	21c0032e 	bgeu	r4,r7,47bd8 <__copybits+0x74>
   47bcc:	20000015 	stw	zero,0(r4)
   47bd0:	21000104 	addi	r4,r4,4
   47bd4:	21fffd36 	bltu	r4,r7,47bcc <__alt_data_end+0xfffe0acc>
   47bd8:	f800283a 	ret

00047bdc <__any_on>:
   47bdc:	20c00417 	ldw	r3,16(r4)
   47be0:	2805d17a 	srai	r2,r5,5
   47be4:	21000504 	addi	r4,r4,20
   47be8:	18800d0e 	bge	r3,r2,47c20 <__any_on+0x44>
   47bec:	18c7883a 	add	r3,r3,r3
   47bf0:	18c7883a 	add	r3,r3,r3
   47bf4:	20c7883a 	add	r3,r4,r3
   47bf8:	20c0192e 	bgeu	r4,r3,47c60 <__any_on+0x84>
   47bfc:	18bfff17 	ldw	r2,-4(r3)
   47c00:	18ffff04 	addi	r3,r3,-4
   47c04:	1000041e 	bne	r2,zero,47c18 <__any_on+0x3c>
   47c08:	20c0142e 	bgeu	r4,r3,47c5c <__any_on+0x80>
   47c0c:	18ffff04 	addi	r3,r3,-4
   47c10:	19400017 	ldw	r5,0(r3)
   47c14:	283ffc26 	beq	r5,zero,47c08 <__alt_data_end+0xfffe0b08>
   47c18:	00800044 	movi	r2,1
   47c1c:	f800283a 	ret
   47c20:	10c00a0e 	bge	r2,r3,47c4c <__any_on+0x70>
   47c24:	1085883a 	add	r2,r2,r2
   47c28:	1085883a 	add	r2,r2,r2
   47c2c:	294007cc 	andi	r5,r5,31
   47c30:	2087883a 	add	r3,r4,r2
   47c34:	283ff026 	beq	r5,zero,47bf8 <__alt_data_end+0xfffe0af8>
   47c38:	19800017 	ldw	r6,0(r3)
   47c3c:	3144d83a 	srl	r2,r6,r5
   47c40:	114a983a 	sll	r5,r2,r5
   47c44:	317ff41e 	bne	r6,r5,47c18 <__alt_data_end+0xfffe0b18>
   47c48:	003feb06 	br	47bf8 <__alt_data_end+0xfffe0af8>
   47c4c:	1085883a 	add	r2,r2,r2
   47c50:	1085883a 	add	r2,r2,r2
   47c54:	2087883a 	add	r3,r4,r2
   47c58:	003fe706 	br	47bf8 <__alt_data_end+0xfffe0af8>
   47c5c:	f800283a 	ret
   47c60:	0005883a 	mov	r2,zero
   47c64:	f800283a 	ret

00047c68 <_realloc_r>:
   47c68:	defff604 	addi	sp,sp,-40
   47c6c:	dc800215 	stw	r18,8(sp)
   47c70:	dfc00915 	stw	ra,36(sp)
   47c74:	df000815 	stw	fp,32(sp)
   47c78:	ddc00715 	stw	r23,28(sp)
   47c7c:	dd800615 	stw	r22,24(sp)
   47c80:	dd400515 	stw	r21,20(sp)
   47c84:	dd000415 	stw	r20,16(sp)
   47c88:	dcc00315 	stw	r19,12(sp)
   47c8c:	dc400115 	stw	r17,4(sp)
   47c90:	dc000015 	stw	r16,0(sp)
   47c94:	3025883a 	mov	r18,r6
   47c98:	2800b726 	beq	r5,zero,47f78 <_realloc_r+0x310>
   47c9c:	282b883a 	mov	r21,r5
   47ca0:	2029883a 	mov	r20,r4
   47ca4:	004d4180 	call	4d418 <__malloc_lock>
   47ca8:	a8bfff17 	ldw	r2,-4(r21)
   47cac:	043fff04 	movi	r16,-4
   47cb0:	90c002c4 	addi	r3,r18,11
   47cb4:	01000584 	movi	r4,22
   47cb8:	acfffe04 	addi	r19,r21,-8
   47cbc:	1420703a 	and	r16,r2,r16
   47cc0:	20c0332e 	bgeu	r4,r3,47d90 <_realloc_r+0x128>
   47cc4:	047ffe04 	movi	r17,-8
   47cc8:	1c62703a 	and	r17,r3,r17
   47ccc:	8807883a 	mov	r3,r17
   47cd0:	88005816 	blt	r17,zero,47e34 <_realloc_r+0x1cc>
   47cd4:	8c805736 	bltu	r17,r18,47e34 <_realloc_r+0x1cc>
   47cd8:	80c0300e 	bge	r16,r3,47d9c <_realloc_r+0x134>
   47cdc:	07000174 	movhi	fp,5
   47ce0:	e73fa304 	addi	fp,fp,-372
   47ce4:	e1c00217 	ldw	r7,8(fp)
   47ce8:	9c09883a 	add	r4,r19,r16
   47cec:	22000117 	ldw	r8,4(r4)
   47cf0:	21c06326 	beq	r4,r7,47e80 <_realloc_r+0x218>
   47cf4:	017fff84 	movi	r5,-2
   47cf8:	414a703a 	and	r5,r8,r5
   47cfc:	214b883a 	add	r5,r4,r5
   47d00:	29800117 	ldw	r6,4(r5)
   47d04:	3180004c 	andi	r6,r6,1
   47d08:	30003f26 	beq	r6,zero,47e08 <_realloc_r+0x1a0>
   47d0c:	1080004c 	andi	r2,r2,1
   47d10:	10008326 	beq	r2,zero,47f20 <_realloc_r+0x2b8>
   47d14:	900b883a 	mov	r5,r18
   47d18:	a009883a 	mov	r4,r20
   47d1c:	0045fb00 	call	45fb0 <_malloc_r>
   47d20:	1025883a 	mov	r18,r2
   47d24:	10011e26 	beq	r2,zero,481a0 <_realloc_r+0x538>
   47d28:	a93fff17 	ldw	r4,-4(r21)
   47d2c:	10fffe04 	addi	r3,r2,-8
   47d30:	00bfff84 	movi	r2,-2
   47d34:	2084703a 	and	r2,r4,r2
   47d38:	9885883a 	add	r2,r19,r2
   47d3c:	1880ee26 	beq	r3,r2,480f8 <_realloc_r+0x490>
   47d40:	81bfff04 	addi	r6,r16,-4
   47d44:	00800904 	movi	r2,36
   47d48:	1180b836 	bltu	r2,r6,4802c <_realloc_r+0x3c4>
   47d4c:	00c004c4 	movi	r3,19
   47d50:	19809636 	bltu	r3,r6,47fac <_realloc_r+0x344>
   47d54:	9005883a 	mov	r2,r18
   47d58:	a807883a 	mov	r3,r21
   47d5c:	19000017 	ldw	r4,0(r3)
   47d60:	11000015 	stw	r4,0(r2)
   47d64:	19000117 	ldw	r4,4(r3)
   47d68:	11000115 	stw	r4,4(r2)
   47d6c:	18c00217 	ldw	r3,8(r3)
   47d70:	10c00215 	stw	r3,8(r2)
   47d74:	a80b883a 	mov	r5,r21
   47d78:	a009883a 	mov	r4,r20
   47d7c:	00453c40 	call	453c4 <_free_r>
   47d80:	a009883a 	mov	r4,r20
   47d84:	004d43c0 	call	4d43c <__malloc_unlock>
   47d88:	9005883a 	mov	r2,r18
   47d8c:	00001206 	br	47dd8 <_realloc_r+0x170>
   47d90:	00c00404 	movi	r3,16
   47d94:	1823883a 	mov	r17,r3
   47d98:	003fce06 	br	47cd4 <__alt_data_end+0xfffe0bd4>
   47d9c:	a825883a 	mov	r18,r21
   47da0:	8445c83a 	sub	r2,r16,r17
   47da4:	00c003c4 	movi	r3,15
   47da8:	18802636 	bltu	r3,r2,47e44 <_realloc_r+0x1dc>
   47dac:	99800117 	ldw	r6,4(r19)
   47db0:	9c07883a 	add	r3,r19,r16
   47db4:	3180004c 	andi	r6,r6,1
   47db8:	3420b03a 	or	r16,r6,r16
   47dbc:	9c000115 	stw	r16,4(r19)
   47dc0:	18800117 	ldw	r2,4(r3)
   47dc4:	10800054 	ori	r2,r2,1
   47dc8:	18800115 	stw	r2,4(r3)
   47dcc:	a009883a 	mov	r4,r20
   47dd0:	004d43c0 	call	4d43c <__malloc_unlock>
   47dd4:	9005883a 	mov	r2,r18
   47dd8:	dfc00917 	ldw	ra,36(sp)
   47ddc:	df000817 	ldw	fp,32(sp)
   47de0:	ddc00717 	ldw	r23,28(sp)
   47de4:	dd800617 	ldw	r22,24(sp)
   47de8:	dd400517 	ldw	r21,20(sp)
   47dec:	dd000417 	ldw	r20,16(sp)
   47df0:	dcc00317 	ldw	r19,12(sp)
   47df4:	dc800217 	ldw	r18,8(sp)
   47df8:	dc400117 	ldw	r17,4(sp)
   47dfc:	dc000017 	ldw	r16,0(sp)
   47e00:	dec00a04 	addi	sp,sp,40
   47e04:	f800283a 	ret
   47e08:	017fff04 	movi	r5,-4
   47e0c:	414a703a 	and	r5,r8,r5
   47e10:	814d883a 	add	r6,r16,r5
   47e14:	30c01f16 	blt	r6,r3,47e94 <_realloc_r+0x22c>
   47e18:	20800317 	ldw	r2,12(r4)
   47e1c:	20c00217 	ldw	r3,8(r4)
   47e20:	a825883a 	mov	r18,r21
   47e24:	3021883a 	mov	r16,r6
   47e28:	18800315 	stw	r2,12(r3)
   47e2c:	10c00215 	stw	r3,8(r2)
   47e30:	003fdb06 	br	47da0 <__alt_data_end+0xfffe0ca0>
   47e34:	00800304 	movi	r2,12
   47e38:	a0800015 	stw	r2,0(r20)
   47e3c:	0005883a 	mov	r2,zero
   47e40:	003fe506 	br	47dd8 <__alt_data_end+0xfffe0cd8>
   47e44:	98c00117 	ldw	r3,4(r19)
   47e48:	9c4b883a 	add	r5,r19,r17
   47e4c:	11000054 	ori	r4,r2,1
   47e50:	18c0004c 	andi	r3,r3,1
   47e54:	1c62b03a 	or	r17,r3,r17
   47e58:	9c400115 	stw	r17,4(r19)
   47e5c:	29000115 	stw	r4,4(r5)
   47e60:	2885883a 	add	r2,r5,r2
   47e64:	10c00117 	ldw	r3,4(r2)
   47e68:	29400204 	addi	r5,r5,8
   47e6c:	a009883a 	mov	r4,r20
   47e70:	18c00054 	ori	r3,r3,1
   47e74:	10c00115 	stw	r3,4(r2)
   47e78:	00453c40 	call	453c4 <_free_r>
   47e7c:	003fd306 	br	47dcc <__alt_data_end+0xfffe0ccc>
   47e80:	017fff04 	movi	r5,-4
   47e84:	414a703a 	and	r5,r8,r5
   47e88:	89800404 	addi	r6,r17,16
   47e8c:	8151883a 	add	r8,r16,r5
   47e90:	4180590e 	bge	r8,r6,47ff8 <_realloc_r+0x390>
   47e94:	1080004c 	andi	r2,r2,1
   47e98:	103f9e1e 	bne	r2,zero,47d14 <__alt_data_end+0xfffe0c14>
   47e9c:	adbffe17 	ldw	r22,-8(r21)
   47ea0:	00bfff04 	movi	r2,-4
   47ea4:	9dadc83a 	sub	r22,r19,r22
   47ea8:	b1800117 	ldw	r6,4(r22)
   47eac:	3084703a 	and	r2,r6,r2
   47eb0:	20002026 	beq	r4,zero,47f34 <_realloc_r+0x2cc>
   47eb4:	80af883a 	add	r23,r16,r2
   47eb8:	b96f883a 	add	r23,r23,r5
   47ebc:	21c05f26 	beq	r4,r7,4803c <_realloc_r+0x3d4>
   47ec0:	b8c01c16 	blt	r23,r3,47f34 <_realloc_r+0x2cc>
   47ec4:	20800317 	ldw	r2,12(r4)
   47ec8:	20c00217 	ldw	r3,8(r4)
   47ecc:	81bfff04 	addi	r6,r16,-4
   47ed0:	01000904 	movi	r4,36
   47ed4:	18800315 	stw	r2,12(r3)
   47ed8:	10c00215 	stw	r3,8(r2)
   47edc:	b0c00217 	ldw	r3,8(r22)
   47ee0:	b0800317 	ldw	r2,12(r22)
   47ee4:	b4800204 	addi	r18,r22,8
   47ee8:	18800315 	stw	r2,12(r3)
   47eec:	10c00215 	stw	r3,8(r2)
   47ef0:	21801b36 	bltu	r4,r6,47f60 <_realloc_r+0x2f8>
   47ef4:	008004c4 	movi	r2,19
   47ef8:	1180352e 	bgeu	r2,r6,47fd0 <_realloc_r+0x368>
   47efc:	a8800017 	ldw	r2,0(r21)
   47f00:	b0800215 	stw	r2,8(r22)
   47f04:	a8800117 	ldw	r2,4(r21)
   47f08:	b0800315 	stw	r2,12(r22)
   47f0c:	008006c4 	movi	r2,27
   47f10:	11807f36 	bltu	r2,r6,48110 <_realloc_r+0x4a8>
   47f14:	b0800404 	addi	r2,r22,16
   47f18:	ad400204 	addi	r21,r21,8
   47f1c:	00002d06 	br	47fd4 <_realloc_r+0x36c>
   47f20:	adbffe17 	ldw	r22,-8(r21)
   47f24:	00bfff04 	movi	r2,-4
   47f28:	9dadc83a 	sub	r22,r19,r22
   47f2c:	b1000117 	ldw	r4,4(r22)
   47f30:	2084703a 	and	r2,r4,r2
   47f34:	b03f7726 	beq	r22,zero,47d14 <__alt_data_end+0xfffe0c14>
   47f38:	80af883a 	add	r23,r16,r2
   47f3c:	b8ff7516 	blt	r23,r3,47d14 <__alt_data_end+0xfffe0c14>
   47f40:	b0800317 	ldw	r2,12(r22)
   47f44:	b0c00217 	ldw	r3,8(r22)
   47f48:	81bfff04 	addi	r6,r16,-4
   47f4c:	01000904 	movi	r4,36
   47f50:	18800315 	stw	r2,12(r3)
   47f54:	10c00215 	stw	r3,8(r2)
   47f58:	b4800204 	addi	r18,r22,8
   47f5c:	21bfe52e 	bgeu	r4,r6,47ef4 <__alt_data_end+0xfffe0df4>
   47f60:	a80b883a 	mov	r5,r21
   47f64:	9009883a 	mov	r4,r18
   47f68:	00469e80 	call	469e8 <memmove>
   47f6c:	b821883a 	mov	r16,r23
   47f70:	b027883a 	mov	r19,r22
   47f74:	003f8a06 	br	47da0 <__alt_data_end+0xfffe0ca0>
   47f78:	300b883a 	mov	r5,r6
   47f7c:	dfc00917 	ldw	ra,36(sp)
   47f80:	df000817 	ldw	fp,32(sp)
   47f84:	ddc00717 	ldw	r23,28(sp)
   47f88:	dd800617 	ldw	r22,24(sp)
   47f8c:	dd400517 	ldw	r21,20(sp)
   47f90:	dd000417 	ldw	r20,16(sp)
   47f94:	dcc00317 	ldw	r19,12(sp)
   47f98:	dc800217 	ldw	r18,8(sp)
   47f9c:	dc400117 	ldw	r17,4(sp)
   47fa0:	dc000017 	ldw	r16,0(sp)
   47fa4:	dec00a04 	addi	sp,sp,40
   47fa8:	0045fb01 	jmpi	45fb0 <_malloc_r>
   47fac:	a8c00017 	ldw	r3,0(r21)
   47fb0:	90c00015 	stw	r3,0(r18)
   47fb4:	a8c00117 	ldw	r3,4(r21)
   47fb8:	90c00115 	stw	r3,4(r18)
   47fbc:	00c006c4 	movi	r3,27
   47fc0:	19804536 	bltu	r3,r6,480d8 <_realloc_r+0x470>
   47fc4:	90800204 	addi	r2,r18,8
   47fc8:	a8c00204 	addi	r3,r21,8
   47fcc:	003f6306 	br	47d5c <__alt_data_end+0xfffe0c5c>
   47fd0:	9005883a 	mov	r2,r18
   47fd4:	a8c00017 	ldw	r3,0(r21)
   47fd8:	b821883a 	mov	r16,r23
   47fdc:	b027883a 	mov	r19,r22
   47fe0:	10c00015 	stw	r3,0(r2)
   47fe4:	a8c00117 	ldw	r3,4(r21)
   47fe8:	10c00115 	stw	r3,4(r2)
   47fec:	a8c00217 	ldw	r3,8(r21)
   47ff0:	10c00215 	stw	r3,8(r2)
   47ff4:	003f6a06 	br	47da0 <__alt_data_end+0xfffe0ca0>
   47ff8:	9c67883a 	add	r19,r19,r17
   47ffc:	4445c83a 	sub	r2,r8,r17
   48000:	e4c00215 	stw	r19,8(fp)
   48004:	10800054 	ori	r2,r2,1
   48008:	98800115 	stw	r2,4(r19)
   4800c:	a8bfff17 	ldw	r2,-4(r21)
   48010:	a009883a 	mov	r4,r20
   48014:	1080004c 	andi	r2,r2,1
   48018:	1462b03a 	or	r17,r2,r17
   4801c:	ac7fff15 	stw	r17,-4(r21)
   48020:	004d43c0 	call	4d43c <__malloc_unlock>
   48024:	a805883a 	mov	r2,r21
   48028:	003f6b06 	br	47dd8 <__alt_data_end+0xfffe0cd8>
   4802c:	a80b883a 	mov	r5,r21
   48030:	9009883a 	mov	r4,r18
   48034:	00469e80 	call	469e8 <memmove>
   48038:	003f4e06 	br	47d74 <__alt_data_end+0xfffe0c74>
   4803c:	89000404 	addi	r4,r17,16
   48040:	b93fbc16 	blt	r23,r4,47f34 <__alt_data_end+0xfffe0e34>
   48044:	b0800317 	ldw	r2,12(r22)
   48048:	b0c00217 	ldw	r3,8(r22)
   4804c:	81bfff04 	addi	r6,r16,-4
   48050:	01000904 	movi	r4,36
   48054:	18800315 	stw	r2,12(r3)
   48058:	10c00215 	stw	r3,8(r2)
   4805c:	b4800204 	addi	r18,r22,8
   48060:	21804336 	bltu	r4,r6,48170 <_realloc_r+0x508>
   48064:	008004c4 	movi	r2,19
   48068:	11803f2e 	bgeu	r2,r6,48168 <_realloc_r+0x500>
   4806c:	a8800017 	ldw	r2,0(r21)
   48070:	b0800215 	stw	r2,8(r22)
   48074:	a8800117 	ldw	r2,4(r21)
   48078:	b0800315 	stw	r2,12(r22)
   4807c:	008006c4 	movi	r2,27
   48080:	11803f36 	bltu	r2,r6,48180 <_realloc_r+0x518>
   48084:	b0800404 	addi	r2,r22,16
   48088:	ad400204 	addi	r21,r21,8
   4808c:	a8c00017 	ldw	r3,0(r21)
   48090:	10c00015 	stw	r3,0(r2)
   48094:	a8c00117 	ldw	r3,4(r21)
   48098:	10c00115 	stw	r3,4(r2)
   4809c:	a8c00217 	ldw	r3,8(r21)
   480a0:	10c00215 	stw	r3,8(r2)
   480a4:	b447883a 	add	r3,r22,r17
   480a8:	bc45c83a 	sub	r2,r23,r17
   480ac:	e0c00215 	stw	r3,8(fp)
   480b0:	10800054 	ori	r2,r2,1
   480b4:	18800115 	stw	r2,4(r3)
   480b8:	b0800117 	ldw	r2,4(r22)
   480bc:	a009883a 	mov	r4,r20
   480c0:	1080004c 	andi	r2,r2,1
   480c4:	1462b03a 	or	r17,r2,r17
   480c8:	b4400115 	stw	r17,4(r22)
   480cc:	004d43c0 	call	4d43c <__malloc_unlock>
   480d0:	9005883a 	mov	r2,r18
   480d4:	003f4006 	br	47dd8 <__alt_data_end+0xfffe0cd8>
   480d8:	a8c00217 	ldw	r3,8(r21)
   480dc:	90c00215 	stw	r3,8(r18)
   480e0:	a8c00317 	ldw	r3,12(r21)
   480e4:	90c00315 	stw	r3,12(r18)
   480e8:	30801126 	beq	r6,r2,48130 <_realloc_r+0x4c8>
   480ec:	90800404 	addi	r2,r18,16
   480f0:	a8c00404 	addi	r3,r21,16
   480f4:	003f1906 	br	47d5c <__alt_data_end+0xfffe0c5c>
   480f8:	90ffff17 	ldw	r3,-4(r18)
   480fc:	00bfff04 	movi	r2,-4
   48100:	a825883a 	mov	r18,r21
   48104:	1884703a 	and	r2,r3,r2
   48108:	80a1883a 	add	r16,r16,r2
   4810c:	003f2406 	br	47da0 <__alt_data_end+0xfffe0ca0>
   48110:	a8800217 	ldw	r2,8(r21)
   48114:	b0800415 	stw	r2,16(r22)
   48118:	a8800317 	ldw	r2,12(r21)
   4811c:	b0800515 	stw	r2,20(r22)
   48120:	31000a26 	beq	r6,r4,4814c <_realloc_r+0x4e4>
   48124:	b0800604 	addi	r2,r22,24
   48128:	ad400404 	addi	r21,r21,16
   4812c:	003fa906 	br	47fd4 <__alt_data_end+0xfffe0ed4>
   48130:	a9000417 	ldw	r4,16(r21)
   48134:	90800604 	addi	r2,r18,24
   48138:	a8c00604 	addi	r3,r21,24
   4813c:	91000415 	stw	r4,16(r18)
   48140:	a9000517 	ldw	r4,20(r21)
   48144:	91000515 	stw	r4,20(r18)
   48148:	003f0406 	br	47d5c <__alt_data_end+0xfffe0c5c>
   4814c:	a8c00417 	ldw	r3,16(r21)
   48150:	ad400604 	addi	r21,r21,24
   48154:	b0800804 	addi	r2,r22,32
   48158:	b0c00615 	stw	r3,24(r22)
   4815c:	a8ffff17 	ldw	r3,-4(r21)
   48160:	b0c00715 	stw	r3,28(r22)
   48164:	003f9b06 	br	47fd4 <__alt_data_end+0xfffe0ed4>
   48168:	9005883a 	mov	r2,r18
   4816c:	003fc706 	br	4808c <__alt_data_end+0xfffe0f8c>
   48170:	a80b883a 	mov	r5,r21
   48174:	9009883a 	mov	r4,r18
   48178:	00469e80 	call	469e8 <memmove>
   4817c:	003fc906 	br	480a4 <__alt_data_end+0xfffe0fa4>
   48180:	a8800217 	ldw	r2,8(r21)
   48184:	b0800415 	stw	r2,16(r22)
   48188:	a8800317 	ldw	r2,12(r21)
   4818c:	b0800515 	stw	r2,20(r22)
   48190:	31000726 	beq	r6,r4,481b0 <_realloc_r+0x548>
   48194:	b0800604 	addi	r2,r22,24
   48198:	ad400404 	addi	r21,r21,16
   4819c:	003fbb06 	br	4808c <__alt_data_end+0xfffe0f8c>
   481a0:	a009883a 	mov	r4,r20
   481a4:	004d43c0 	call	4d43c <__malloc_unlock>
   481a8:	0005883a 	mov	r2,zero
   481ac:	003f0a06 	br	47dd8 <__alt_data_end+0xfffe0cd8>
   481b0:	a8c00417 	ldw	r3,16(r21)
   481b4:	ad400604 	addi	r21,r21,24
   481b8:	b0800804 	addi	r2,r22,32
   481bc:	b0c00615 	stw	r3,24(r22)
   481c0:	a8ffff17 	ldw	r3,-4(r21)
   481c4:	b0c00715 	stw	r3,28(r22)
   481c8:	003fb006 	br	4808c <__alt_data_end+0xfffe0f8c>

000481cc <__fpclassifyd>:
   481cc:	00a00034 	movhi	r2,32768
   481d0:	10bfffc4 	addi	r2,r2,-1
   481d4:	2884703a 	and	r2,r5,r2
   481d8:	10000726 	beq	r2,zero,481f8 <__fpclassifyd+0x2c>
   481dc:	00fffc34 	movhi	r3,65520
   481e0:	019ff834 	movhi	r6,32736
   481e4:	28c7883a 	add	r3,r5,r3
   481e8:	31bfffc4 	addi	r6,r6,-1
   481ec:	30c00536 	bltu	r6,r3,48204 <__fpclassifyd+0x38>
   481f0:	00800104 	movi	r2,4
   481f4:	f800283a 	ret
   481f8:	2000021e 	bne	r4,zero,48204 <__fpclassifyd+0x38>
   481fc:	00800084 	movi	r2,2
   48200:	f800283a 	ret
   48204:	00dffc34 	movhi	r3,32752
   48208:	019ff834 	movhi	r6,32736
   4820c:	28cb883a 	add	r5,r5,r3
   48210:	31bfffc4 	addi	r6,r6,-1
   48214:	317ff62e 	bgeu	r6,r5,481f0 <__alt_data_end+0xfffe10f0>
   48218:	01400434 	movhi	r5,16
   4821c:	297fffc4 	addi	r5,r5,-1
   48220:	28800236 	bltu	r5,r2,4822c <__fpclassifyd+0x60>
   48224:	008000c4 	movi	r2,3
   48228:	f800283a 	ret
   4822c:	10c00226 	beq	r2,r3,48238 <__fpclassifyd+0x6c>
   48230:	0005883a 	mov	r2,zero
   48234:	f800283a 	ret
   48238:	2005003a 	cmpeq	r2,r4,zero
   4823c:	f800283a 	ret

00048240 <_sbrk_r>:
   48240:	defffd04 	addi	sp,sp,-12
   48244:	dc000015 	stw	r16,0(sp)
   48248:	04000174 	movhi	r16,5
   4824c:	dc400115 	stw	r17,4(sp)
   48250:	840bf804 	addi	r16,r16,12256
   48254:	2023883a 	mov	r17,r4
   48258:	2809883a 	mov	r4,r5
   4825c:	dfc00215 	stw	ra,8(sp)
   48260:	80000015 	stw	zero,0(r16)
   48264:	004d5fc0 	call	4d5fc <sbrk>
   48268:	00ffffc4 	movi	r3,-1
   4826c:	10c00526 	beq	r2,r3,48284 <_sbrk_r+0x44>
   48270:	dfc00217 	ldw	ra,8(sp)
   48274:	dc400117 	ldw	r17,4(sp)
   48278:	dc000017 	ldw	r16,0(sp)
   4827c:	dec00304 	addi	sp,sp,12
   48280:	f800283a 	ret
   48284:	80c00017 	ldw	r3,0(r16)
   48288:	183ff926 	beq	r3,zero,48270 <__alt_data_end+0xfffe1170>
   4828c:	88c00015 	stw	r3,0(r17)
   48290:	003ff706 	br	48270 <__alt_data_end+0xfffe1170>

00048294 <__sread>:
   48294:	defffe04 	addi	sp,sp,-8
   48298:	dc000015 	stw	r16,0(sp)
   4829c:	2821883a 	mov	r16,r5
   482a0:	2940038f 	ldh	r5,14(r5)
   482a4:	dfc00115 	stw	ra,4(sp)
   482a8:	004a0880 	call	4a088 <_read_r>
   482ac:	10000716 	blt	r2,zero,482cc <__sread+0x38>
   482b0:	80c01417 	ldw	r3,80(r16)
   482b4:	1887883a 	add	r3,r3,r2
   482b8:	80c01415 	stw	r3,80(r16)
   482bc:	dfc00117 	ldw	ra,4(sp)
   482c0:	dc000017 	ldw	r16,0(sp)
   482c4:	dec00204 	addi	sp,sp,8
   482c8:	f800283a 	ret
   482cc:	80c0030b 	ldhu	r3,12(r16)
   482d0:	18fbffcc 	andi	r3,r3,61439
   482d4:	80c0030d 	sth	r3,12(r16)
   482d8:	dfc00117 	ldw	ra,4(sp)
   482dc:	dc000017 	ldw	r16,0(sp)
   482e0:	dec00204 	addi	sp,sp,8
   482e4:	f800283a 	ret

000482e8 <__seofread>:
   482e8:	0005883a 	mov	r2,zero
   482ec:	f800283a 	ret

000482f0 <__swrite>:
   482f0:	2880030b 	ldhu	r2,12(r5)
   482f4:	defffb04 	addi	sp,sp,-20
   482f8:	dcc00315 	stw	r19,12(sp)
   482fc:	dc800215 	stw	r18,8(sp)
   48300:	dc400115 	stw	r17,4(sp)
   48304:	dc000015 	stw	r16,0(sp)
   48308:	dfc00415 	stw	ra,16(sp)
   4830c:	10c0400c 	andi	r3,r2,256
   48310:	2821883a 	mov	r16,r5
   48314:	2023883a 	mov	r17,r4
   48318:	3025883a 	mov	r18,r6
   4831c:	3827883a 	mov	r19,r7
   48320:	18000526 	beq	r3,zero,48338 <__swrite+0x48>
   48324:	2940038f 	ldh	r5,14(r5)
   48328:	01c00084 	movi	r7,2
   4832c:	000d883a 	mov	r6,zero
   48330:	004a0280 	call	4a028 <_lseek_r>
   48334:	8080030b 	ldhu	r2,12(r16)
   48338:	8140038f 	ldh	r5,14(r16)
   4833c:	10bbffcc 	andi	r2,r2,61439
   48340:	980f883a 	mov	r7,r19
   48344:	900d883a 	mov	r6,r18
   48348:	8809883a 	mov	r4,r17
   4834c:	8080030d 	sth	r2,12(r16)
   48350:	dfc00417 	ldw	ra,16(sp)
   48354:	dcc00317 	ldw	r19,12(sp)
   48358:	dc800217 	ldw	r18,8(sp)
   4835c:	dc400117 	ldw	r17,4(sp)
   48360:	dc000017 	ldw	r16,0(sp)
   48364:	dec00504 	addi	sp,sp,20
   48368:	0049af41 	jmpi	49af4 <_write_r>

0004836c <__sseek>:
   4836c:	defffe04 	addi	sp,sp,-8
   48370:	dc000015 	stw	r16,0(sp)
   48374:	2821883a 	mov	r16,r5
   48378:	2940038f 	ldh	r5,14(r5)
   4837c:	dfc00115 	stw	ra,4(sp)
   48380:	004a0280 	call	4a028 <_lseek_r>
   48384:	00ffffc4 	movi	r3,-1
   48388:	10c00826 	beq	r2,r3,483ac <__sseek+0x40>
   4838c:	80c0030b 	ldhu	r3,12(r16)
   48390:	80801415 	stw	r2,80(r16)
   48394:	18c40014 	ori	r3,r3,4096
   48398:	80c0030d 	sth	r3,12(r16)
   4839c:	dfc00117 	ldw	ra,4(sp)
   483a0:	dc000017 	ldw	r16,0(sp)
   483a4:	dec00204 	addi	sp,sp,8
   483a8:	f800283a 	ret
   483ac:	80c0030b 	ldhu	r3,12(r16)
   483b0:	18fbffcc 	andi	r3,r3,61439
   483b4:	80c0030d 	sth	r3,12(r16)
   483b8:	dfc00117 	ldw	ra,4(sp)
   483bc:	dc000017 	ldw	r16,0(sp)
   483c0:	dec00204 	addi	sp,sp,8
   483c4:	f800283a 	ret

000483c8 <__sclose>:
   483c8:	2940038f 	ldh	r5,14(r5)
   483cc:	0049b541 	jmpi	49b54 <_close_r>

000483d0 <strcmp>:
   483d0:	2144b03a 	or	r2,r4,r5
   483d4:	108000cc 	andi	r2,r2,3
   483d8:	1000171e 	bne	r2,zero,48438 <strcmp+0x68>
   483dc:	20800017 	ldw	r2,0(r4)
   483e0:	28c00017 	ldw	r3,0(r5)
   483e4:	10c0141e 	bne	r2,r3,48438 <strcmp+0x68>
   483e8:	027fbff4 	movhi	r9,65279
   483ec:	4a7fbfc4 	addi	r9,r9,-257
   483f0:	0086303a 	nor	r3,zero,r2
   483f4:	02202074 	movhi	r8,32897
   483f8:	1245883a 	add	r2,r2,r9
   483fc:	42202004 	addi	r8,r8,-32640
   48400:	10c4703a 	and	r2,r2,r3
   48404:	1204703a 	and	r2,r2,r8
   48408:	10000226 	beq	r2,zero,48414 <strcmp+0x44>
   4840c:	00002306 	br	4849c <strcmp+0xcc>
   48410:	1000221e 	bne	r2,zero,4849c <strcmp+0xcc>
   48414:	21000104 	addi	r4,r4,4
   48418:	20c00017 	ldw	r3,0(r4)
   4841c:	29400104 	addi	r5,r5,4
   48420:	29800017 	ldw	r6,0(r5)
   48424:	1a4f883a 	add	r7,r3,r9
   48428:	00c4303a 	nor	r2,zero,r3
   4842c:	3884703a 	and	r2,r7,r2
   48430:	1204703a 	and	r2,r2,r8
   48434:	19bff626 	beq	r3,r6,48410 <__alt_data_end+0xfffe1310>
   48438:	20800003 	ldbu	r2,0(r4)
   4843c:	10c03fcc 	andi	r3,r2,255
   48440:	18c0201c 	xori	r3,r3,128
   48444:	18ffe004 	addi	r3,r3,-128
   48448:	18000c26 	beq	r3,zero,4847c <strcmp+0xac>
   4844c:	29800007 	ldb	r6,0(r5)
   48450:	19800326 	beq	r3,r6,48460 <strcmp+0x90>
   48454:	00001306 	br	484a4 <strcmp+0xd4>
   48458:	29800007 	ldb	r6,0(r5)
   4845c:	11800b1e 	bne	r2,r6,4848c <strcmp+0xbc>
   48460:	21000044 	addi	r4,r4,1
   48464:	20c00003 	ldbu	r3,0(r4)
   48468:	29400044 	addi	r5,r5,1
   4846c:	18803fcc 	andi	r2,r3,255
   48470:	1080201c 	xori	r2,r2,128
   48474:	10bfe004 	addi	r2,r2,-128
   48478:	103ff71e 	bne	r2,zero,48458 <__alt_data_end+0xfffe1358>
   4847c:	0007883a 	mov	r3,zero
   48480:	28800003 	ldbu	r2,0(r5)
   48484:	1885c83a 	sub	r2,r3,r2
   48488:	f800283a 	ret
   4848c:	28800003 	ldbu	r2,0(r5)
   48490:	18c03fcc 	andi	r3,r3,255
   48494:	1885c83a 	sub	r2,r3,r2
   48498:	f800283a 	ret
   4849c:	0005883a 	mov	r2,zero
   484a0:	f800283a 	ret
   484a4:	10c03fcc 	andi	r3,r2,255
   484a8:	003ff506 	br	48480 <__alt_data_end+0xfffe1380>

000484ac <__sprint_r.part.0>:
   484ac:	28801917 	ldw	r2,100(r5)
   484b0:	defff604 	addi	sp,sp,-40
   484b4:	dd400515 	stw	r21,20(sp)
   484b8:	dfc00915 	stw	ra,36(sp)
   484bc:	df000815 	stw	fp,32(sp)
   484c0:	ddc00715 	stw	r23,28(sp)
   484c4:	dd800615 	stw	r22,24(sp)
   484c8:	dd000415 	stw	r20,16(sp)
   484cc:	dcc00315 	stw	r19,12(sp)
   484d0:	dc800215 	stw	r18,8(sp)
   484d4:	dc400115 	stw	r17,4(sp)
   484d8:	dc000015 	stw	r16,0(sp)
   484dc:	1088000c 	andi	r2,r2,8192
   484e0:	302b883a 	mov	r21,r6
   484e4:	10002e26 	beq	r2,zero,485a0 <__sprint_r.part.0+0xf4>
   484e8:	30800217 	ldw	r2,8(r6)
   484ec:	35800017 	ldw	r22,0(r6)
   484f0:	10002926 	beq	r2,zero,48598 <__sprint_r.part.0+0xec>
   484f4:	2827883a 	mov	r19,r5
   484f8:	2029883a 	mov	r20,r4
   484fc:	b5c00104 	addi	r23,r22,4
   48500:	04bfffc4 	movi	r18,-1
   48504:	bc400017 	ldw	r17,0(r23)
   48508:	b4000017 	ldw	r16,0(r22)
   4850c:	0039883a 	mov	fp,zero
   48510:	8822d0ba 	srli	r17,r17,2
   48514:	8800031e 	bne	r17,zero,48524 <__sprint_r.part.0+0x78>
   48518:	00001806 	br	4857c <__sprint_r.part.0+0xd0>
   4851c:	84000104 	addi	r16,r16,4
   48520:	8f001526 	beq	r17,fp,48578 <__sprint_r.part.0+0xcc>
   48524:	81400017 	ldw	r5,0(r16)
   48528:	980d883a 	mov	r6,r19
   4852c:	a009883a 	mov	r4,r20
   48530:	0049ed40 	call	49ed4 <_fputwc_r>
   48534:	e7000044 	addi	fp,fp,1
   48538:	14bff81e 	bne	r2,r18,4851c <__alt_data_end+0xfffe141c>
   4853c:	9005883a 	mov	r2,r18
   48540:	a8000215 	stw	zero,8(r21)
   48544:	a8000115 	stw	zero,4(r21)
   48548:	dfc00917 	ldw	ra,36(sp)
   4854c:	df000817 	ldw	fp,32(sp)
   48550:	ddc00717 	ldw	r23,28(sp)
   48554:	dd800617 	ldw	r22,24(sp)
   48558:	dd400517 	ldw	r21,20(sp)
   4855c:	dd000417 	ldw	r20,16(sp)
   48560:	dcc00317 	ldw	r19,12(sp)
   48564:	dc800217 	ldw	r18,8(sp)
   48568:	dc400117 	ldw	r17,4(sp)
   4856c:	dc000017 	ldw	r16,0(sp)
   48570:	dec00a04 	addi	sp,sp,40
   48574:	f800283a 	ret
   48578:	a8800217 	ldw	r2,8(r21)
   4857c:	8c63883a 	add	r17,r17,r17
   48580:	8c63883a 	add	r17,r17,r17
   48584:	1445c83a 	sub	r2,r2,r17
   48588:	a8800215 	stw	r2,8(r21)
   4858c:	b5800204 	addi	r22,r22,8
   48590:	bdc00204 	addi	r23,r23,8
   48594:	103fdb1e 	bne	r2,zero,48504 <__alt_data_end+0xfffe1404>
   48598:	0005883a 	mov	r2,zero
   4859c:	003fe806 	br	48540 <__alt_data_end+0xfffe1440>
   485a0:	00456d40 	call	456d4 <__sfvwrite_r>
   485a4:	003fe606 	br	48540 <__alt_data_end+0xfffe1440>

000485a8 <__sprint_r>:
   485a8:	30c00217 	ldw	r3,8(r6)
   485ac:	18000126 	beq	r3,zero,485b4 <__sprint_r+0xc>
   485b0:	00484ac1 	jmpi	484ac <__sprint_r.part.0>
   485b4:	30000115 	stw	zero,4(r6)
   485b8:	0005883a 	mov	r2,zero
   485bc:	f800283a 	ret

000485c0 <___vfiprintf_internal_r>:
   485c0:	deffc904 	addi	sp,sp,-220
   485c4:	df003515 	stw	fp,212(sp)
   485c8:	dd003115 	stw	r20,196(sp)
   485cc:	dfc03615 	stw	ra,216(sp)
   485d0:	ddc03415 	stw	r23,208(sp)
   485d4:	dd803315 	stw	r22,204(sp)
   485d8:	dd403215 	stw	r21,200(sp)
   485dc:	dcc03015 	stw	r19,192(sp)
   485e0:	dc802f15 	stw	r18,188(sp)
   485e4:	dc402e15 	stw	r17,184(sp)
   485e8:	dc002d15 	stw	r16,180(sp)
   485ec:	d9002015 	stw	r4,128(sp)
   485f0:	d9c02215 	stw	r7,136(sp)
   485f4:	2829883a 	mov	r20,r5
   485f8:	3039883a 	mov	fp,r6
   485fc:	20000226 	beq	r4,zero,48608 <___vfiprintf_internal_r+0x48>
   48600:	20800e17 	ldw	r2,56(r4)
   48604:	1000cf26 	beq	r2,zero,48944 <___vfiprintf_internal_r+0x384>
   48608:	a080030b 	ldhu	r2,12(r20)
   4860c:	10c8000c 	andi	r3,r2,8192
   48610:	1800061e 	bne	r3,zero,4862c <___vfiprintf_internal_r+0x6c>
   48614:	a1001917 	ldw	r4,100(r20)
   48618:	00f7ffc4 	movi	r3,-8193
   4861c:	10880014 	ori	r2,r2,8192
   48620:	20c6703a 	and	r3,r4,r3
   48624:	a080030d 	sth	r2,12(r20)
   48628:	a0c01915 	stw	r3,100(r20)
   4862c:	10c0020c 	andi	r3,r2,8
   48630:	1800a926 	beq	r3,zero,488d8 <___vfiprintf_internal_r+0x318>
   48634:	a0c00417 	ldw	r3,16(r20)
   48638:	1800a726 	beq	r3,zero,488d8 <___vfiprintf_internal_r+0x318>
   4863c:	1080068c 	andi	r2,r2,26
   48640:	00c00284 	movi	r3,10
   48644:	10c0ac26 	beq	r2,r3,488f8 <___vfiprintf_internal_r+0x338>
   48648:	da801a04 	addi	r10,sp,104
   4864c:	da801e15 	stw	r10,120(sp)
   48650:	d8801e17 	ldw	r2,120(sp)
   48654:	da8019c4 	addi	r10,sp,103
   48658:	05800174 	movhi	r22,5
   4865c:	05c00174 	movhi	r23,5
   48660:	da801f15 	stw	r10,124(sp)
   48664:	1295c83a 	sub	r10,r2,r10
   48668:	b5be6d04 	addi	r22,r22,-1612
   4866c:	bdfe6904 	addi	r23,r23,-1628
   48670:	dec01a15 	stw	sp,104(sp)
   48674:	d8001c15 	stw	zero,112(sp)
   48678:	d8001b15 	stw	zero,108(sp)
   4867c:	d8002615 	stw	zero,152(sp)
   48680:	d8002315 	stw	zero,140(sp)
   48684:	da802715 	stw	r10,156(sp)
   48688:	d811883a 	mov	r8,sp
   4868c:	dd002115 	stw	r20,132(sp)
   48690:	e021883a 	mov	r16,fp
   48694:	80800007 	ldb	r2,0(r16)
   48698:	1003ea26 	beq	r2,zero,49644 <___vfiprintf_internal_r+0x1084>
   4869c:	00c00944 	movi	r3,37
   486a0:	8025883a 	mov	r18,r16
   486a4:	10c0021e 	bne	r2,r3,486b0 <___vfiprintf_internal_r+0xf0>
   486a8:	00001606 	br	48704 <___vfiprintf_internal_r+0x144>
   486ac:	10c00326 	beq	r2,r3,486bc <___vfiprintf_internal_r+0xfc>
   486b0:	94800044 	addi	r18,r18,1
   486b4:	90800007 	ldb	r2,0(r18)
   486b8:	103ffc1e 	bne	r2,zero,486ac <__alt_data_end+0xfffe15ac>
   486bc:	9423c83a 	sub	r17,r18,r16
   486c0:	88001026 	beq	r17,zero,48704 <___vfiprintf_internal_r+0x144>
   486c4:	d8c01c17 	ldw	r3,112(sp)
   486c8:	d8801b17 	ldw	r2,108(sp)
   486cc:	44000015 	stw	r16,0(r8)
   486d0:	88c7883a 	add	r3,r17,r3
   486d4:	10800044 	addi	r2,r2,1
   486d8:	44400115 	stw	r17,4(r8)
   486dc:	d8c01c15 	stw	r3,112(sp)
   486e0:	d8801b15 	stw	r2,108(sp)
   486e4:	010001c4 	movi	r4,7
   486e8:	2080760e 	bge	r4,r2,488c4 <___vfiprintf_internal_r+0x304>
   486ec:	1803821e 	bne	r3,zero,494f8 <___vfiprintf_internal_r+0xf38>
   486f0:	da802317 	ldw	r10,140(sp)
   486f4:	d8001b15 	stw	zero,108(sp)
   486f8:	d811883a 	mov	r8,sp
   486fc:	5455883a 	add	r10,r10,r17
   48700:	da802315 	stw	r10,140(sp)
   48704:	90800007 	ldb	r2,0(r18)
   48708:	10044626 	beq	r2,zero,49824 <___vfiprintf_internal_r+0x1264>
   4870c:	90c00047 	ldb	r3,1(r18)
   48710:	94000044 	addi	r16,r18,1
   48714:	d8001d85 	stb	zero,118(sp)
   48718:	0009883a 	mov	r4,zero
   4871c:	000f883a 	mov	r7,zero
   48720:	027fffc4 	movi	r9,-1
   48724:	0023883a 	mov	r17,zero
   48728:	0029883a 	mov	r20,zero
   4872c:	01401604 	movi	r5,88
   48730:	01800244 	movi	r6,9
   48734:	03400a84 	movi	r13,42
   48738:	03001b04 	movi	r12,108
   4873c:	84000044 	addi	r16,r16,1
   48740:	18bff804 	addi	r2,r3,-32
   48744:	28827336 	bltu	r5,r2,49114 <___vfiprintf_internal_r+0xb54>
   48748:	100490ba 	slli	r2,r2,2
   4874c:	02800174 	movhi	r10,5
   48750:	52a1d804 	addi	r10,r10,-30880
   48754:	1285883a 	add	r2,r2,r10
   48758:	10800017 	ldw	r2,0(r2)
   4875c:	1000683a 	jmp	r2
   48760:	00048e48 	cmpgei	zero,zero,4665
   48764:	00049114 	movui	zero,4676
   48768:	00049114 	movui	zero,4676
   4876c:	00048e68 	cmpgeui	zero,zero,4665
   48770:	00049114 	movui	zero,4676
   48774:	00049114 	movui	zero,4676
   48778:	00049114 	movui	zero,4676
   4877c:	00049114 	movui	zero,4676
   48780:	00049114 	movui	zero,4676
   48784:	00049114 	movui	zero,4676
   48788:	00049050 	cmplti	zero,zero,4673
   4878c:	0004906c 	andhi	zero,zero,4673
   48790:	00049114 	movui	zero,4676
   48794:	00048954 	movui	zero,4645
   48798:	0004907c 	xorhi	zero,zero,4673
   4879c:	00049114 	movui	zero,4676
   487a0:	00048e74 	movhi	zero,4665
   487a4:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   487a8:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   487ac:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   487b0:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   487b4:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   487b8:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   487bc:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   487c0:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   487c4:	00048e80 	call	48e8 <__alt_mem_onchip_memory2-0x3b718>
   487c8:	00049114 	movui	zero,4676
   487cc:	00049114 	movui	zero,4676
   487d0:	00049114 	movui	zero,4676
   487d4:	00049114 	movui	zero,4676
   487d8:	00049114 	movui	zero,4676
   487dc:	00049114 	movui	zero,4676
   487e0:	00049114 	movui	zero,4676
   487e4:	00049114 	movui	zero,4676
   487e8:	00049114 	movui	zero,4676
   487ec:	00049114 	movui	zero,4676
   487f0:	00048eac 	andhi	zero,zero,4666
   487f4:	00049114 	movui	zero,4676
   487f8:	00049114 	movui	zero,4676
   487fc:	00049114 	movui	zero,4676
   48800:	00049114 	movui	zero,4676
   48804:	00049114 	movui	zero,4676
   48808:	00049114 	movui	zero,4676
   4880c:	00049114 	movui	zero,4676
   48810:	00049114 	movui	zero,4676
   48814:	00049114 	movui	zero,4676
   48818:	00049114 	movui	zero,4676
   4881c:	00048ee4 	muli	zero,zero,4667
   48820:	00049114 	movui	zero,4676
   48824:	00049114 	movui	zero,4676
   48828:	00049114 	movui	zero,4676
   4882c:	00049114 	movui	zero,4676
   48830:	00049114 	movui	zero,4676
   48834:	00048f3c 	xorhi	zero,zero,4668
   48838:	00049114 	movui	zero,4676
   4883c:	00049114 	movui	zero,4676
   48840:	00048fac 	andhi	zero,zero,4670
   48844:	00049114 	movui	zero,4676
   48848:	00049114 	movui	zero,4676
   4884c:	00049114 	movui	zero,4676
   48850:	00049114 	movui	zero,4676
   48854:	00049114 	movui	zero,4676
   48858:	00049114 	movui	zero,4676
   4885c:	00049114 	movui	zero,4676
   48860:	00049114 	movui	zero,4676
   48864:	00049114 	movui	zero,4676
   48868:	00049114 	movui	zero,4676
   4886c:	00048d58 	cmpnei	zero,zero,4661
   48870:	00048d84 	movi	zero,4662
   48874:	00049114 	movui	zero,4676
   48878:	00049114 	movui	zero,4676
   4887c:	00049114 	movui	zero,4676
   48880:	000490bc 	xorhi	zero,zero,4674
   48884:	00048d84 	movi	zero,4662
   48888:	00049114 	movui	zero,4676
   4888c:	00049114 	movui	zero,4676
   48890:	00048c18 	cmpnei	zero,zero,4656
   48894:	00049114 	movui	zero,4676
   48898:	00048c28 	cmpgeui	zero,zero,4656
   4889c:	00048c64 	muli	zero,zero,4657
   488a0:	00048960 	cmpeqi	zero,zero,4645
   488a4:	00048c0c 	andi	zero,zero,4656
   488a8:	00049114 	movui	zero,4676
   488ac:	00048fe8 	cmpgeui	zero,zero,4671
   488b0:	00049114 	movui	zero,4676
   488b4:	00049040 	call	4904 <__alt_mem_onchip_memory2-0x3b6fc>
   488b8:	00049114 	movui	zero,4676
   488bc:	00049114 	movui	zero,4676
   488c0:	00048d04 	movi	zero,4660
   488c4:	42000204 	addi	r8,r8,8
   488c8:	da802317 	ldw	r10,140(sp)
   488cc:	5455883a 	add	r10,r10,r17
   488d0:	da802315 	stw	r10,140(sp)
   488d4:	003f8b06 	br	48704 <__alt_data_end+0xfffe1604>
   488d8:	d9002017 	ldw	r4,128(sp)
   488dc:	a00b883a 	mov	r5,r20
   488e0:	004327c0 	call	4327c <__swsetup_r>
   488e4:	1003b11e 	bne	r2,zero,497ac <___vfiprintf_internal_r+0x11ec>
   488e8:	a080030b 	ldhu	r2,12(r20)
   488ec:	00c00284 	movi	r3,10
   488f0:	1080068c 	andi	r2,r2,26
   488f4:	10ff541e 	bne	r2,r3,48648 <__alt_data_end+0xfffe1548>
   488f8:	a080038f 	ldh	r2,14(r20)
   488fc:	103f5216 	blt	r2,zero,48648 <__alt_data_end+0xfffe1548>
   48900:	d9c02217 	ldw	r7,136(sp)
   48904:	d9002017 	ldw	r4,128(sp)
   48908:	e00d883a 	mov	r6,fp
   4890c:	a00b883a 	mov	r5,r20
   48910:	0049a380 	call	49a38 <__sbprintf>
   48914:	dfc03617 	ldw	ra,216(sp)
   48918:	df003517 	ldw	fp,212(sp)
   4891c:	ddc03417 	ldw	r23,208(sp)
   48920:	dd803317 	ldw	r22,204(sp)
   48924:	dd403217 	ldw	r21,200(sp)
   48928:	dd003117 	ldw	r20,196(sp)
   4892c:	dcc03017 	ldw	r19,192(sp)
   48930:	dc802f17 	ldw	r18,188(sp)
   48934:	dc402e17 	ldw	r17,184(sp)
   48938:	dc002d17 	ldw	r16,180(sp)
   4893c:	dec03704 	addi	sp,sp,220
   48940:	f800283a 	ret
   48944:	00452500 	call	45250 <__sinit>
   48948:	003f2f06 	br	48608 <__alt_data_end+0xfffe1508>
   4894c:	0463c83a 	sub	r17,zero,r17
   48950:	d8802215 	stw	r2,136(sp)
   48954:	a5000114 	ori	r20,r20,4
   48958:	80c00007 	ldb	r3,0(r16)
   4895c:	003f7706 	br	4873c <__alt_data_end+0xfffe163c>
   48960:	00800c04 	movi	r2,48
   48964:	da802217 	ldw	r10,136(sp)
   48968:	d8801d05 	stb	r2,116(sp)
   4896c:	00801e04 	movi	r2,120
   48970:	d8801d45 	stb	r2,117(sp)
   48974:	d8001d85 	stb	zero,118(sp)
   48978:	50c00104 	addi	r3,r10,4
   4897c:	54800017 	ldw	r18,0(r10)
   48980:	0027883a 	mov	r19,zero
   48984:	a0800094 	ori	r2,r20,2
   48988:	48030b16 	blt	r9,zero,495b8 <___vfiprintf_internal_r+0xff8>
   4898c:	00bfdfc4 	movi	r2,-129
   48990:	a096703a 	and	r11,r20,r2
   48994:	d8c02215 	stw	r3,136(sp)
   48998:	5d000094 	ori	r20,r11,2
   4899c:	90032b1e 	bne	r18,zero,4964c <___vfiprintf_internal_r+0x108c>
   489a0:	00800174 	movhi	r2,5
   489a4:	10be0804 	addi	r2,r2,-2016
   489a8:	d8802615 	stw	r2,152(sp)
   489ac:	0039883a 	mov	fp,zero
   489b0:	48017b1e 	bne	r9,zero,48fa0 <___vfiprintf_internal_r+0x9e0>
   489b4:	0013883a 	mov	r9,zero
   489b8:	0027883a 	mov	r19,zero
   489bc:	dd401a04 	addi	r21,sp,104
   489c0:	4825883a 	mov	r18,r9
   489c4:	4cc0010e 	bge	r9,r19,489cc <___vfiprintf_internal_r+0x40c>
   489c8:	9825883a 	mov	r18,r19
   489cc:	e7003fcc 	andi	fp,fp,255
   489d0:	e700201c 	xori	fp,fp,128
   489d4:	e73fe004 	addi	fp,fp,-128
   489d8:	e0000126 	beq	fp,zero,489e0 <___vfiprintf_internal_r+0x420>
   489dc:	94800044 	addi	r18,r18,1
   489e0:	a380008c 	andi	r14,r20,2
   489e4:	70000126 	beq	r14,zero,489ec <___vfiprintf_internal_r+0x42c>
   489e8:	94800084 	addi	r18,r18,2
   489ec:	a700210c 	andi	fp,r20,132
   489f0:	e001df1e 	bne	fp,zero,49170 <___vfiprintf_internal_r+0xbb0>
   489f4:	8c87c83a 	sub	r3,r17,r18
   489f8:	00c1dd0e 	bge	zero,r3,49170 <___vfiprintf_internal_r+0xbb0>
   489fc:	01c00404 	movi	r7,16
   48a00:	d8801c17 	ldw	r2,112(sp)
   48a04:	38c3ad0e 	bge	r7,r3,498bc <___vfiprintf_internal_r+0x12fc>
   48a08:	02800174 	movhi	r10,5
   48a0c:	52be6d04 	addi	r10,r10,-1612
   48a10:	dc002915 	stw	r16,164(sp)
   48a14:	d9801b17 	ldw	r6,108(sp)
   48a18:	da802415 	stw	r10,144(sp)
   48a1c:	03c001c4 	movi	r15,7
   48a20:	da402515 	stw	r9,148(sp)
   48a24:	db802815 	stw	r14,160(sp)
   48a28:	1821883a 	mov	r16,r3
   48a2c:	00000506 	br	48a44 <___vfiprintf_internal_r+0x484>
   48a30:	31400084 	addi	r5,r6,2
   48a34:	42000204 	addi	r8,r8,8
   48a38:	200d883a 	mov	r6,r4
   48a3c:	843ffc04 	addi	r16,r16,-16
   48a40:	3c000d0e 	bge	r7,r16,48a78 <___vfiprintf_internal_r+0x4b8>
   48a44:	10800404 	addi	r2,r2,16
   48a48:	31000044 	addi	r4,r6,1
   48a4c:	45800015 	stw	r22,0(r8)
   48a50:	41c00115 	stw	r7,4(r8)
   48a54:	d8801c15 	stw	r2,112(sp)
   48a58:	d9001b15 	stw	r4,108(sp)
   48a5c:	793ff40e 	bge	r15,r4,48a30 <__alt_data_end+0xfffe1930>
   48a60:	1001b51e 	bne	r2,zero,49138 <___vfiprintf_internal_r+0xb78>
   48a64:	843ffc04 	addi	r16,r16,-16
   48a68:	000d883a 	mov	r6,zero
   48a6c:	01400044 	movi	r5,1
   48a70:	d811883a 	mov	r8,sp
   48a74:	3c3ff316 	blt	r7,r16,48a44 <__alt_data_end+0xfffe1944>
   48a78:	8007883a 	mov	r3,r16
   48a7c:	da402517 	ldw	r9,148(sp)
   48a80:	db802817 	ldw	r14,160(sp)
   48a84:	dc002917 	ldw	r16,164(sp)
   48a88:	da802417 	ldw	r10,144(sp)
   48a8c:	1885883a 	add	r2,r3,r2
   48a90:	40c00115 	stw	r3,4(r8)
   48a94:	42800015 	stw	r10,0(r8)
   48a98:	d8801c15 	stw	r2,112(sp)
   48a9c:	d9401b15 	stw	r5,108(sp)
   48aa0:	00c001c4 	movi	r3,7
   48aa4:	19426016 	blt	r3,r5,49428 <___vfiprintf_internal_r+0xe68>
   48aa8:	d8c01d87 	ldb	r3,118(sp)
   48aac:	42000204 	addi	r8,r8,8
   48ab0:	29000044 	addi	r4,r5,1
   48ab4:	1801b31e 	bne	r3,zero,49184 <___vfiprintf_internal_r+0xbc4>
   48ab8:	7001c026 	beq	r14,zero,491bc <___vfiprintf_internal_r+0xbfc>
   48abc:	d8c01d04 	addi	r3,sp,116
   48ac0:	10800084 	addi	r2,r2,2
   48ac4:	40c00015 	stw	r3,0(r8)
   48ac8:	00c00084 	movi	r3,2
   48acc:	40c00115 	stw	r3,4(r8)
   48ad0:	d8801c15 	stw	r2,112(sp)
   48ad4:	d9001b15 	stw	r4,108(sp)
   48ad8:	00c001c4 	movi	r3,7
   48adc:	1902650e 	bge	r3,r4,49474 <___vfiprintf_internal_r+0xeb4>
   48ae0:	10029a1e 	bne	r2,zero,4954c <___vfiprintf_internal_r+0xf8c>
   48ae4:	00c02004 	movi	r3,128
   48ae8:	01000044 	movi	r4,1
   48aec:	000b883a 	mov	r5,zero
   48af0:	d811883a 	mov	r8,sp
   48af4:	e0c1b31e 	bne	fp,r3,491c4 <___vfiprintf_internal_r+0xc04>
   48af8:	8cb9c83a 	sub	fp,r17,r18
   48afc:	0701b10e 	bge	zero,fp,491c4 <___vfiprintf_internal_r+0xc04>
   48b00:	01c00404 	movi	r7,16
   48b04:	3f03890e 	bge	r7,fp,4992c <___vfiprintf_internal_r+0x136c>
   48b08:	00c00174 	movhi	r3,5
   48b0c:	18fe6904 	addi	r3,r3,-1628
   48b10:	d8c02415 	stw	r3,144(sp)
   48b14:	8007883a 	mov	r3,r16
   48b18:	034001c4 	movi	r13,7
   48b1c:	e021883a 	mov	r16,fp
   48b20:	da402515 	stw	r9,148(sp)
   48b24:	1839883a 	mov	fp,r3
   48b28:	00000506 	br	48b40 <___vfiprintf_internal_r+0x580>
   48b2c:	29800084 	addi	r6,r5,2
   48b30:	42000204 	addi	r8,r8,8
   48b34:	180b883a 	mov	r5,r3
   48b38:	843ffc04 	addi	r16,r16,-16
   48b3c:	3c000d0e 	bge	r7,r16,48b74 <___vfiprintf_internal_r+0x5b4>
   48b40:	10800404 	addi	r2,r2,16
   48b44:	28c00044 	addi	r3,r5,1
   48b48:	45c00015 	stw	r23,0(r8)
   48b4c:	41c00115 	stw	r7,4(r8)
   48b50:	d8801c15 	stw	r2,112(sp)
   48b54:	d8c01b15 	stw	r3,108(sp)
   48b58:	68fff40e 	bge	r13,r3,48b2c <__alt_data_end+0xfffe1a2c>
   48b5c:	1002241e 	bne	r2,zero,493f0 <___vfiprintf_internal_r+0xe30>
   48b60:	843ffc04 	addi	r16,r16,-16
   48b64:	01800044 	movi	r6,1
   48b68:	000b883a 	mov	r5,zero
   48b6c:	d811883a 	mov	r8,sp
   48b70:	3c3ff316 	blt	r7,r16,48b40 <__alt_data_end+0xfffe1a40>
   48b74:	da402517 	ldw	r9,148(sp)
   48b78:	e007883a 	mov	r3,fp
   48b7c:	8039883a 	mov	fp,r16
   48b80:	1821883a 	mov	r16,r3
   48b84:	d8c02417 	ldw	r3,144(sp)
   48b88:	1705883a 	add	r2,r2,fp
   48b8c:	47000115 	stw	fp,4(r8)
   48b90:	40c00015 	stw	r3,0(r8)
   48b94:	d8801c15 	stw	r2,112(sp)
   48b98:	d9801b15 	stw	r6,108(sp)
   48b9c:	00c001c4 	movi	r3,7
   48ba0:	19827616 	blt	r3,r6,4957c <___vfiprintf_internal_r+0xfbc>
   48ba4:	4cf9c83a 	sub	fp,r9,r19
   48ba8:	42000204 	addi	r8,r8,8
   48bac:	31000044 	addi	r4,r6,1
   48bb0:	300b883a 	mov	r5,r6
   48bb4:	07018516 	blt	zero,fp,491cc <___vfiprintf_internal_r+0xc0c>
   48bb8:	9885883a 	add	r2,r19,r2
   48bbc:	45400015 	stw	r21,0(r8)
   48bc0:	44c00115 	stw	r19,4(r8)
   48bc4:	d8801c15 	stw	r2,112(sp)
   48bc8:	d9001b15 	stw	r4,108(sp)
   48bcc:	00c001c4 	movi	r3,7
   48bd0:	1901dd0e 	bge	r3,r4,49348 <___vfiprintf_internal_r+0xd88>
   48bd4:	1002401e 	bne	r2,zero,494d8 <___vfiprintf_internal_r+0xf18>
   48bd8:	d8001b15 	stw	zero,108(sp)
   48bdc:	a2c0010c 	andi	r11,r20,4
   48be0:	58000226 	beq	r11,zero,48bec <___vfiprintf_internal_r+0x62c>
   48be4:	8ca7c83a 	sub	r19,r17,r18
   48be8:	04c2f216 	blt	zero,r19,497b4 <___vfiprintf_internal_r+0x11f4>
   48bec:	8c80010e 	bge	r17,r18,48bf4 <___vfiprintf_internal_r+0x634>
   48bf0:	9023883a 	mov	r17,r18
   48bf4:	da802317 	ldw	r10,140(sp)
   48bf8:	5455883a 	add	r10,r10,r17
   48bfc:	da802315 	stw	r10,140(sp)
   48c00:	d8001b15 	stw	zero,108(sp)
   48c04:	d811883a 	mov	r8,sp
   48c08:	003ea206 	br	48694 <__alt_data_end+0xfffe1594>
   48c0c:	a5000814 	ori	r20,r20,32
   48c10:	80c00007 	ldb	r3,0(r16)
   48c14:	003ec906 	br	4873c <__alt_data_end+0xfffe163c>
   48c18:	80c00007 	ldb	r3,0(r16)
   48c1c:	1b030926 	beq	r3,r12,49844 <___vfiprintf_internal_r+0x1284>
   48c20:	a5000414 	ori	r20,r20,16
   48c24:	003ec506 	br	4873c <__alt_data_end+0xfffe163c>
   48c28:	21003fcc 	andi	r4,r4,255
   48c2c:	20035e1e 	bne	r4,zero,499a8 <___vfiprintf_internal_r+0x13e8>
   48c30:	a080080c 	andi	r2,r20,32
   48c34:	1002a526 	beq	r2,zero,496cc <___vfiprintf_internal_r+0x110c>
   48c38:	da802217 	ldw	r10,136(sp)
   48c3c:	50800017 	ldw	r2,0(r10)
   48c40:	da802317 	ldw	r10,140(sp)
   48c44:	5007d7fa 	srai	r3,r10,31
   48c48:	da802217 	ldw	r10,136(sp)
   48c4c:	10c00115 	stw	r3,4(r2)
   48c50:	52800104 	addi	r10,r10,4
   48c54:	da802215 	stw	r10,136(sp)
   48c58:	da802317 	ldw	r10,140(sp)
   48c5c:	12800015 	stw	r10,0(r2)
   48c60:	003e8c06 	br	48694 <__alt_data_end+0xfffe1594>
   48c64:	21003fcc 	andi	r4,r4,255
   48c68:	2003511e 	bne	r4,zero,499b0 <___vfiprintf_internal_r+0x13f0>
   48c6c:	a080080c 	andi	r2,r20,32
   48c70:	1000a126 	beq	r2,zero,48ef8 <___vfiprintf_internal_r+0x938>
   48c74:	da802217 	ldw	r10,136(sp)
   48c78:	d8001d85 	stb	zero,118(sp)
   48c7c:	50800204 	addi	r2,r10,8
   48c80:	54800017 	ldw	r18,0(r10)
   48c84:	54c00117 	ldw	r19,4(r10)
   48c88:	4802b416 	blt	r9,zero,4975c <___vfiprintf_internal_r+0x119c>
   48c8c:	013fdfc4 	movi	r4,-129
   48c90:	94c6b03a 	or	r3,r18,r19
   48c94:	d8802215 	stw	r2,136(sp)
   48c98:	a128703a 	and	r20,r20,r4
   48c9c:	1800a226 	beq	r3,zero,48f28 <___vfiprintf_internal_r+0x968>
   48ca0:	0039883a 	mov	fp,zero
   48ca4:	dd401a04 	addi	r21,sp,104
   48ca8:	9006d0fa 	srli	r3,r18,3
   48cac:	9808977a 	slli	r4,r19,29
   48cb0:	9826d0fa 	srli	r19,r19,3
   48cb4:	948001cc 	andi	r18,r18,7
   48cb8:	90800c04 	addi	r2,r18,48
   48cbc:	ad7fffc4 	addi	r21,r21,-1
   48cc0:	20e4b03a 	or	r18,r4,r3
   48cc4:	a8800005 	stb	r2,0(r21)
   48cc8:	94c6b03a 	or	r3,r18,r19
   48ccc:	183ff61e 	bne	r3,zero,48ca8 <__alt_data_end+0xfffe1ba8>
   48cd0:	a0c0004c 	andi	r3,r20,1
   48cd4:	18005926 	beq	r3,zero,48e3c <___vfiprintf_internal_r+0x87c>
   48cd8:	10803fcc 	andi	r2,r2,255
   48cdc:	1080201c 	xori	r2,r2,128
   48ce0:	10bfe004 	addi	r2,r2,-128
   48ce4:	00c00c04 	movi	r3,48
   48ce8:	10c05426 	beq	r2,r3,48e3c <___vfiprintf_internal_r+0x87c>
   48cec:	da801e17 	ldw	r10,120(sp)
   48cf0:	a8bfffc4 	addi	r2,r21,-1
   48cf4:	a8ffffc5 	stb	r3,-1(r21)
   48cf8:	50a7c83a 	sub	r19,r10,r2
   48cfc:	102b883a 	mov	r21,r2
   48d00:	003f2f06 	br	489c0 <__alt_data_end+0xfffe18c0>
   48d04:	21003fcc 	andi	r4,r4,255
   48d08:	2003421e 	bne	r4,zero,49a14 <___vfiprintf_internal_r+0x1454>
   48d0c:	00800174 	movhi	r2,5
   48d10:	10be0804 	addi	r2,r2,-2016
   48d14:	d8802615 	stw	r2,152(sp)
   48d18:	a080080c 	andi	r2,r20,32
   48d1c:	1000aa26 	beq	r2,zero,48fc8 <___vfiprintf_internal_r+0xa08>
   48d20:	da802217 	ldw	r10,136(sp)
   48d24:	54800017 	ldw	r18,0(r10)
   48d28:	54c00117 	ldw	r19,4(r10)
   48d2c:	52800204 	addi	r10,r10,8
   48d30:	da802215 	stw	r10,136(sp)
   48d34:	a080004c 	andi	r2,r20,1
   48d38:	1001d226 	beq	r2,zero,49484 <___vfiprintf_internal_r+0xec4>
   48d3c:	94c4b03a 	or	r2,r18,r19
   48d40:	1002351e 	bne	r2,zero,49618 <___vfiprintf_internal_r+0x1058>
   48d44:	d8001d85 	stb	zero,118(sp)
   48d48:	48022216 	blt	r9,zero,495d4 <___vfiprintf_internal_r+0x1014>
   48d4c:	00bfdfc4 	movi	r2,-129
   48d50:	a0a8703a 	and	r20,r20,r2
   48d54:	003f1506 	br	489ac <__alt_data_end+0xfffe18ac>
   48d58:	da802217 	ldw	r10,136(sp)
   48d5c:	04800044 	movi	r18,1
   48d60:	d8001d85 	stb	zero,118(sp)
   48d64:	50800017 	ldw	r2,0(r10)
   48d68:	52800104 	addi	r10,r10,4
   48d6c:	da802215 	stw	r10,136(sp)
   48d70:	d8801005 	stb	r2,64(sp)
   48d74:	9027883a 	mov	r19,r18
   48d78:	dd401004 	addi	r21,sp,64
   48d7c:	0013883a 	mov	r9,zero
   48d80:	003f1706 	br	489e0 <__alt_data_end+0xfffe18e0>
   48d84:	21003fcc 	andi	r4,r4,255
   48d88:	2003201e 	bne	r4,zero,49a0c <___vfiprintf_internal_r+0x144c>
   48d8c:	a080080c 	andi	r2,r20,32
   48d90:	10004b26 	beq	r2,zero,48ec0 <___vfiprintf_internal_r+0x900>
   48d94:	da802217 	ldw	r10,136(sp)
   48d98:	50800117 	ldw	r2,4(r10)
   48d9c:	54800017 	ldw	r18,0(r10)
   48da0:	52800204 	addi	r10,r10,8
   48da4:	da802215 	stw	r10,136(sp)
   48da8:	1027883a 	mov	r19,r2
   48dac:	10022c16 	blt	r2,zero,49660 <___vfiprintf_internal_r+0x10a0>
   48db0:	df001d83 	ldbu	fp,118(sp)
   48db4:	48007216 	blt	r9,zero,48f80 <___vfiprintf_internal_r+0x9c0>
   48db8:	00ffdfc4 	movi	r3,-129
   48dbc:	94c4b03a 	or	r2,r18,r19
   48dc0:	a0e8703a 	and	r20,r20,r3
   48dc4:	1000cc26 	beq	r2,zero,490f8 <___vfiprintf_internal_r+0xb38>
   48dc8:	98021026 	beq	r19,zero,4960c <___vfiprintf_internal_r+0x104c>
   48dcc:	dc402415 	stw	r17,144(sp)
   48dd0:	dc002515 	stw	r16,148(sp)
   48dd4:	9823883a 	mov	r17,r19
   48dd8:	9021883a 	mov	r16,r18
   48ddc:	dd401a04 	addi	r21,sp,104
   48de0:	4825883a 	mov	r18,r9
   48de4:	4027883a 	mov	r19,r8
   48de8:	8009883a 	mov	r4,r16
   48dec:	880b883a 	mov	r5,r17
   48df0:	01800284 	movi	r6,10
   48df4:	000f883a 	mov	r7,zero
   48df8:	004a9a00 	call	4a9a0 <__umoddi3>
   48dfc:	10800c04 	addi	r2,r2,48
   48e00:	ad7fffc4 	addi	r21,r21,-1
   48e04:	8009883a 	mov	r4,r16
   48e08:	880b883a 	mov	r5,r17
   48e0c:	a8800005 	stb	r2,0(r21)
   48e10:	01800284 	movi	r6,10
   48e14:	000f883a 	mov	r7,zero
   48e18:	004a4280 	call	4a428 <__udivdi3>
   48e1c:	1021883a 	mov	r16,r2
   48e20:	10c4b03a 	or	r2,r2,r3
   48e24:	1823883a 	mov	r17,r3
   48e28:	103fef1e 	bne	r2,zero,48de8 <__alt_data_end+0xfffe1ce8>
   48e2c:	dc402417 	ldw	r17,144(sp)
   48e30:	dc002517 	ldw	r16,148(sp)
   48e34:	9013883a 	mov	r9,r18
   48e38:	9811883a 	mov	r8,r19
   48e3c:	da801e17 	ldw	r10,120(sp)
   48e40:	5567c83a 	sub	r19,r10,r21
   48e44:	003ede06 	br	489c0 <__alt_data_end+0xfffe18c0>
   48e48:	38803fcc 	andi	r2,r7,255
   48e4c:	1080201c 	xori	r2,r2,128
   48e50:	10bfe004 	addi	r2,r2,-128
   48e54:	1002371e 	bne	r2,zero,49734 <___vfiprintf_internal_r+0x1174>
   48e58:	01000044 	movi	r4,1
   48e5c:	01c00804 	movi	r7,32
   48e60:	80c00007 	ldb	r3,0(r16)
   48e64:	003e3506 	br	4873c <__alt_data_end+0xfffe163c>
   48e68:	a5000054 	ori	r20,r20,1
   48e6c:	80c00007 	ldb	r3,0(r16)
   48e70:	003e3206 	br	4873c <__alt_data_end+0xfffe163c>
   48e74:	a5002014 	ori	r20,r20,128
   48e78:	80c00007 	ldb	r3,0(r16)
   48e7c:	003e2f06 	br	4873c <__alt_data_end+0xfffe163c>
   48e80:	8015883a 	mov	r10,r16
   48e84:	0023883a 	mov	r17,zero
   48e88:	18bff404 	addi	r2,r3,-48
   48e8c:	50c00007 	ldb	r3,0(r10)
   48e90:	8c4002a4 	muli	r17,r17,10
   48e94:	84000044 	addi	r16,r16,1
   48e98:	8015883a 	mov	r10,r16
   48e9c:	1463883a 	add	r17,r2,r17
   48ea0:	18bff404 	addi	r2,r3,-48
   48ea4:	30bff92e 	bgeu	r6,r2,48e8c <__alt_data_end+0xfffe1d8c>
   48ea8:	003e2506 	br	48740 <__alt_data_end+0xfffe1640>
   48eac:	21003fcc 	andi	r4,r4,255
   48eb0:	2002d41e 	bne	r4,zero,49a04 <___vfiprintf_internal_r+0x1444>
   48eb4:	a5000414 	ori	r20,r20,16
   48eb8:	a080080c 	andi	r2,r20,32
   48ebc:	103fb51e 	bne	r2,zero,48d94 <__alt_data_end+0xfffe1c94>
   48ec0:	a080040c 	andi	r2,r20,16
   48ec4:	1001f826 	beq	r2,zero,496a8 <___vfiprintf_internal_r+0x10e8>
   48ec8:	da802217 	ldw	r10,136(sp)
   48ecc:	54800017 	ldw	r18,0(r10)
   48ed0:	52800104 	addi	r10,r10,4
   48ed4:	da802215 	stw	r10,136(sp)
   48ed8:	9027d7fa 	srai	r19,r18,31
   48edc:	9805883a 	mov	r2,r19
   48ee0:	003fb206 	br	48dac <__alt_data_end+0xfffe1cac>
   48ee4:	21003fcc 	andi	r4,r4,255
   48ee8:	2002c41e 	bne	r4,zero,499fc <___vfiprintf_internal_r+0x143c>
   48eec:	a5000414 	ori	r20,r20,16
   48ef0:	a080080c 	andi	r2,r20,32
   48ef4:	103f5f1e 	bne	r2,zero,48c74 <__alt_data_end+0xfffe1b74>
   48ef8:	a080040c 	andi	r2,r20,16
   48efc:	10020f26 	beq	r2,zero,4973c <___vfiprintf_internal_r+0x117c>
   48f00:	da802217 	ldw	r10,136(sp)
   48f04:	d8001d85 	stb	zero,118(sp)
   48f08:	0027883a 	mov	r19,zero
   48f0c:	50800104 	addi	r2,r10,4
   48f10:	54800017 	ldw	r18,0(r10)
   48f14:	48021116 	blt	r9,zero,4975c <___vfiprintf_internal_r+0x119c>
   48f18:	00ffdfc4 	movi	r3,-129
   48f1c:	d8802215 	stw	r2,136(sp)
   48f20:	a0e8703a 	and	r20,r20,r3
   48f24:	903f5e1e 	bne	r18,zero,48ca0 <__alt_data_end+0xfffe1ba0>
   48f28:	0039883a 	mov	fp,zero
   48f2c:	4802a626 	beq	r9,zero,499c8 <___vfiprintf_internal_r+0x1408>
   48f30:	0025883a 	mov	r18,zero
   48f34:	0027883a 	mov	r19,zero
   48f38:	003f5a06 	br	48ca4 <__alt_data_end+0xfffe1ba4>
   48f3c:	21003fcc 	andi	r4,r4,255
   48f40:	20029f1e 	bne	r4,zero,499c0 <___vfiprintf_internal_r+0x1400>
   48f44:	a5000414 	ori	r20,r20,16
   48f48:	a080080c 	andi	r2,r20,32
   48f4c:	10005e1e 	bne	r2,zero,490c8 <___vfiprintf_internal_r+0xb08>
   48f50:	a080040c 	andi	r2,r20,16
   48f54:	1001a21e 	bne	r2,zero,495e0 <___vfiprintf_internal_r+0x1020>
   48f58:	a080100c 	andi	r2,r20,64
   48f5c:	d8001d85 	stb	zero,118(sp)
   48f60:	da802217 	ldw	r10,136(sp)
   48f64:	1002231e 	bne	r2,zero,497f4 <___vfiprintf_internal_r+0x1234>
   48f68:	50800104 	addi	r2,r10,4
   48f6c:	54800017 	ldw	r18,0(r10)
   48f70:	0027883a 	mov	r19,zero
   48f74:	4801a00e 	bge	r9,zero,495f8 <___vfiprintf_internal_r+0x1038>
   48f78:	d8802215 	stw	r2,136(sp)
   48f7c:	0039883a 	mov	fp,zero
   48f80:	94c4b03a 	or	r2,r18,r19
   48f84:	103f901e 	bne	r2,zero,48dc8 <__alt_data_end+0xfffe1cc8>
   48f88:	00800044 	movi	r2,1
   48f8c:	10803fcc 	andi	r2,r2,255
   48f90:	00c00044 	movi	r3,1
   48f94:	10c05926 	beq	r2,r3,490fc <___vfiprintf_internal_r+0xb3c>
   48f98:	00c00084 	movi	r3,2
   48f9c:	10ffe41e 	bne	r2,r3,48f30 <__alt_data_end+0xfffe1e30>
   48fa0:	0025883a 	mov	r18,zero
   48fa4:	0027883a 	mov	r19,zero
   48fa8:	00013d06 	br	494a0 <___vfiprintf_internal_r+0xee0>
   48fac:	21003fcc 	andi	r4,r4,255
   48fb0:	2002811e 	bne	r4,zero,499b8 <___vfiprintf_internal_r+0x13f8>
   48fb4:	00800174 	movhi	r2,5
   48fb8:	10be0304 	addi	r2,r2,-2036
   48fbc:	d8802615 	stw	r2,152(sp)
   48fc0:	a080080c 	andi	r2,r20,32
   48fc4:	103f561e 	bne	r2,zero,48d20 <__alt_data_end+0xfffe1c20>
   48fc8:	a080040c 	andi	r2,r20,16
   48fcc:	1001d126 	beq	r2,zero,49714 <___vfiprintf_internal_r+0x1154>
   48fd0:	da802217 	ldw	r10,136(sp)
   48fd4:	0027883a 	mov	r19,zero
   48fd8:	54800017 	ldw	r18,0(r10)
   48fdc:	52800104 	addi	r10,r10,4
   48fe0:	da802215 	stw	r10,136(sp)
   48fe4:	003f5306 	br	48d34 <__alt_data_end+0xfffe1c34>
   48fe8:	da802217 	ldw	r10,136(sp)
   48fec:	d8001d85 	stb	zero,118(sp)
   48ff0:	55400017 	ldw	r21,0(r10)
   48ff4:	50c00104 	addi	r3,r10,4
   48ff8:	a8024226 	beq	r21,zero,49904 <___vfiprintf_internal_r+0x1344>
   48ffc:	48021816 	blt	r9,zero,49860 <___vfiprintf_internal_r+0x12a0>
   49000:	480d883a 	mov	r6,r9
   49004:	000b883a 	mov	r5,zero
   49008:	a809883a 	mov	r4,r21
   4900c:	d8c02a15 	stw	r3,168(sp)
   49010:	da002b15 	stw	r8,172(sp)
   49014:	da402c15 	stw	r9,176(sp)
   49018:	00467bc0 	call	467bc <memchr>
   4901c:	d8c02a17 	ldw	r3,168(sp)
   49020:	da002b17 	ldw	r8,172(sp)
   49024:	da402c17 	ldw	r9,176(sp)
   49028:	10024826 	beq	r2,zero,4994c <___vfiprintf_internal_r+0x138c>
   4902c:	1567c83a 	sub	r19,r2,r21
   49030:	df001d83 	ldbu	fp,118(sp)
   49034:	d8c02215 	stw	r3,136(sp)
   49038:	0013883a 	mov	r9,zero
   4903c:	003e6006 	br	489c0 <__alt_data_end+0xfffe18c0>
   49040:	21003fcc 	andi	r4,r4,255
   49044:	203fc026 	beq	r4,zero,48f48 <__alt_data_end+0xfffe1e48>
   49048:	d9c01d85 	stb	r7,118(sp)
   4904c:	003fbe06 	br	48f48 <__alt_data_end+0xfffe1e48>
   49050:	da802217 	ldw	r10,136(sp)
   49054:	54400017 	ldw	r17,0(r10)
   49058:	50800104 	addi	r2,r10,4
   4905c:	883e3b16 	blt	r17,zero,4894c <__alt_data_end+0xfffe184c>
   49060:	d8802215 	stw	r2,136(sp)
   49064:	80c00007 	ldb	r3,0(r16)
   49068:	003db406 	br	4873c <__alt_data_end+0xfffe163c>
   4906c:	01000044 	movi	r4,1
   49070:	01c00ac4 	movi	r7,43
   49074:	80c00007 	ldb	r3,0(r16)
   49078:	003db006 	br	4873c <__alt_data_end+0xfffe163c>
   4907c:	80c00007 	ldb	r3,0(r16)
   49080:	82800044 	addi	r10,r16,1
   49084:	1b423c26 	beq	r3,r13,49978 <___vfiprintf_internal_r+0x13b8>
   49088:	18bff404 	addi	r2,r3,-48
   4908c:	0013883a 	mov	r9,zero
   49090:	30822b36 	bltu	r6,r2,49940 <___vfiprintf_internal_r+0x1380>
   49094:	50c00007 	ldb	r3,0(r10)
   49098:	4a4002a4 	muli	r9,r9,10
   4909c:	54000044 	addi	r16,r10,1
   490a0:	8015883a 	mov	r10,r16
   490a4:	4893883a 	add	r9,r9,r2
   490a8:	18bff404 	addi	r2,r3,-48
   490ac:	30bff92e 	bgeu	r6,r2,49094 <__alt_data_end+0xfffe1f94>
   490b0:	483da30e 	bge	r9,zero,48740 <__alt_data_end+0xfffe1640>
   490b4:	027fffc4 	movi	r9,-1
   490b8:	003da106 	br	48740 <__alt_data_end+0xfffe1640>
   490bc:	a5001014 	ori	r20,r20,64
   490c0:	80c00007 	ldb	r3,0(r16)
   490c4:	003d9d06 	br	4873c <__alt_data_end+0xfffe163c>
   490c8:	da802217 	ldw	r10,136(sp)
   490cc:	d8001d85 	stb	zero,118(sp)
   490d0:	50c00204 	addi	r3,r10,8
   490d4:	54800017 	ldw	r18,0(r10)
   490d8:	54c00117 	ldw	r19,4(r10)
   490dc:	4801ca16 	blt	r9,zero,49808 <___vfiprintf_internal_r+0x1248>
   490e0:	013fdfc4 	movi	r4,-129
   490e4:	94c4b03a 	or	r2,r18,r19
   490e8:	d8c02215 	stw	r3,136(sp)
   490ec:	a128703a 	and	r20,r20,r4
   490f0:	0039883a 	mov	fp,zero
   490f4:	103f341e 	bne	r2,zero,48dc8 <__alt_data_end+0xfffe1cc8>
   490f8:	483e2e26 	beq	r9,zero,489b4 <__alt_data_end+0xfffe18b4>
   490fc:	0025883a 	mov	r18,zero
   49100:	94800c04 	addi	r18,r18,48
   49104:	dc8019c5 	stb	r18,103(sp)
   49108:	dcc02717 	ldw	r19,156(sp)
   4910c:	dd4019c4 	addi	r21,sp,103
   49110:	003e2b06 	br	489c0 <__alt_data_end+0xfffe18c0>
   49114:	21003fcc 	andi	r4,r4,255
   49118:	2002361e 	bne	r4,zero,499f4 <___vfiprintf_internal_r+0x1434>
   4911c:	1801c126 	beq	r3,zero,49824 <___vfiprintf_internal_r+0x1264>
   49120:	04800044 	movi	r18,1
   49124:	d8c01005 	stb	r3,64(sp)
   49128:	d8001d85 	stb	zero,118(sp)
   4912c:	9027883a 	mov	r19,r18
   49130:	dd401004 	addi	r21,sp,64
   49134:	003f1106 	br	48d7c <__alt_data_end+0xfffe1c7c>
   49138:	d9402117 	ldw	r5,132(sp)
   4913c:	d9002017 	ldw	r4,128(sp)
   49140:	d9801a04 	addi	r6,sp,104
   49144:	d9c02b15 	stw	r7,172(sp)
   49148:	dbc02a15 	stw	r15,168(sp)
   4914c:	00484ac0 	call	484ac <__sprint_r.part.0>
   49150:	d9c02b17 	ldw	r7,172(sp)
   49154:	dbc02a17 	ldw	r15,168(sp)
   49158:	10006d1e 	bne	r2,zero,49310 <___vfiprintf_internal_r+0xd50>
   4915c:	d9801b17 	ldw	r6,108(sp)
   49160:	d8801c17 	ldw	r2,112(sp)
   49164:	d811883a 	mov	r8,sp
   49168:	31400044 	addi	r5,r6,1
   4916c:	003e3306 	br	48a3c <__alt_data_end+0xfffe193c>
   49170:	d9401b17 	ldw	r5,108(sp)
   49174:	d8801c17 	ldw	r2,112(sp)
   49178:	29000044 	addi	r4,r5,1
   4917c:	d8c01d87 	ldb	r3,118(sp)
   49180:	183e4d26 	beq	r3,zero,48ab8 <__alt_data_end+0xfffe19b8>
   49184:	00c00044 	movi	r3,1
   49188:	d9401d84 	addi	r5,sp,118
   4918c:	10c5883a 	add	r2,r2,r3
   49190:	41400015 	stw	r5,0(r8)
   49194:	40c00115 	stw	r3,4(r8)
   49198:	d8801c15 	stw	r2,112(sp)
   4919c:	d9001b15 	stw	r4,108(sp)
   491a0:	014001c4 	movi	r5,7
   491a4:	2900a90e 	bge	r5,r4,4944c <___vfiprintf_internal_r+0xe8c>
   491a8:	1000da1e 	bne	r2,zero,49514 <___vfiprintf_internal_r+0xf54>
   491ac:	7000ab1e 	bne	r14,zero,4945c <___vfiprintf_internal_r+0xe9c>
   491b0:	000b883a 	mov	r5,zero
   491b4:	1809883a 	mov	r4,r3
   491b8:	d811883a 	mov	r8,sp
   491bc:	00c02004 	movi	r3,128
   491c0:	e0fe4d26 	beq	fp,r3,48af8 <__alt_data_end+0xfffe19f8>
   491c4:	4cf9c83a 	sub	fp,r9,r19
   491c8:	073e7b0e 	bge	zero,fp,48bb8 <__alt_data_end+0xfffe1ab8>
   491cc:	01c00404 	movi	r7,16
   491d0:	3f01900e 	bge	r7,fp,49814 <___vfiprintf_internal_r+0x1254>
   491d4:	00c00174 	movhi	r3,5
   491d8:	18fe6904 	addi	r3,r3,-1628
   491dc:	d8c02415 	stw	r3,144(sp)
   491e0:	034001c4 	movi	r13,7
   491e4:	00000506 	br	491fc <___vfiprintf_internal_r+0xc3c>
   491e8:	29000084 	addi	r4,r5,2
   491ec:	42000204 	addi	r8,r8,8
   491f0:	180b883a 	mov	r5,r3
   491f4:	e73ffc04 	addi	fp,fp,-16
   491f8:	3f000d0e 	bge	r7,fp,49230 <___vfiprintf_internal_r+0xc70>
   491fc:	10800404 	addi	r2,r2,16
   49200:	28c00044 	addi	r3,r5,1
   49204:	45c00015 	stw	r23,0(r8)
   49208:	41c00115 	stw	r7,4(r8)
   4920c:	d8801c15 	stw	r2,112(sp)
   49210:	d8c01b15 	stw	r3,108(sp)
   49214:	68fff40e 	bge	r13,r3,491e8 <__alt_data_end+0xfffe20e8>
   49218:	1000101e 	bne	r2,zero,4925c <___vfiprintf_internal_r+0xc9c>
   4921c:	e73ffc04 	addi	fp,fp,-16
   49220:	01000044 	movi	r4,1
   49224:	000b883a 	mov	r5,zero
   49228:	d811883a 	mov	r8,sp
   4922c:	3f3ff316 	blt	r7,fp,491fc <__alt_data_end+0xfffe20fc>
   49230:	da802417 	ldw	r10,144(sp)
   49234:	1705883a 	add	r2,r2,fp
   49238:	47000115 	stw	fp,4(r8)
   4923c:	42800015 	stw	r10,0(r8)
   49240:	d8801c15 	stw	r2,112(sp)
   49244:	d9001b15 	stw	r4,108(sp)
   49248:	00c001c4 	movi	r3,7
   4924c:	19003616 	blt	r3,r4,49328 <___vfiprintf_internal_r+0xd68>
   49250:	42000204 	addi	r8,r8,8
   49254:	21000044 	addi	r4,r4,1
   49258:	003e5706 	br	48bb8 <__alt_data_end+0xfffe1ab8>
   4925c:	d9402117 	ldw	r5,132(sp)
   49260:	d9002017 	ldw	r4,128(sp)
   49264:	d9801a04 	addi	r6,sp,104
   49268:	d9c02b15 	stw	r7,172(sp)
   4926c:	db402a15 	stw	r13,168(sp)
   49270:	00484ac0 	call	484ac <__sprint_r.part.0>
   49274:	d9c02b17 	ldw	r7,172(sp)
   49278:	db402a17 	ldw	r13,168(sp)
   4927c:	1000241e 	bne	r2,zero,49310 <___vfiprintf_internal_r+0xd50>
   49280:	d9401b17 	ldw	r5,108(sp)
   49284:	d8801c17 	ldw	r2,112(sp)
   49288:	d811883a 	mov	r8,sp
   4928c:	29000044 	addi	r4,r5,1
   49290:	003fd806 	br	491f4 <__alt_data_end+0xfffe20f4>
   49294:	d9401b17 	ldw	r5,108(sp)
   49298:	00c00174 	movhi	r3,5
   4929c:	18fe6d04 	addi	r3,r3,-1612
   492a0:	d8c02415 	stw	r3,144(sp)
   492a4:	29400044 	addi	r5,r5,1
   492a8:	d8c02417 	ldw	r3,144(sp)
   492ac:	14c5883a 	add	r2,r2,r19
   492b0:	44c00115 	stw	r19,4(r8)
   492b4:	40c00015 	stw	r3,0(r8)
   492b8:	d8801c15 	stw	r2,112(sp)
   492bc:	d9401b15 	stw	r5,108(sp)
   492c0:	00c001c4 	movi	r3,7
   492c4:	1940070e 	bge	r3,r5,492e4 <___vfiprintf_internal_r+0xd24>
   492c8:	103e4826 	beq	r2,zero,48bec <__alt_data_end+0xfffe1aec>
   492cc:	d9402117 	ldw	r5,132(sp)
   492d0:	d9002017 	ldw	r4,128(sp)
   492d4:	d9801a04 	addi	r6,sp,104
   492d8:	00484ac0 	call	484ac <__sprint_r.part.0>
   492dc:	10000c1e 	bne	r2,zero,49310 <___vfiprintf_internal_r+0xd50>
   492e0:	d8801c17 	ldw	r2,112(sp)
   492e4:	8c80010e 	bge	r17,r18,492ec <___vfiprintf_internal_r+0xd2c>
   492e8:	9023883a 	mov	r17,r18
   492ec:	da802317 	ldw	r10,140(sp)
   492f0:	5455883a 	add	r10,r10,r17
   492f4:	da802315 	stw	r10,140(sp)
   492f8:	103e4126 	beq	r2,zero,48c00 <__alt_data_end+0xfffe1b00>
   492fc:	d9402117 	ldw	r5,132(sp)
   49300:	d9002017 	ldw	r4,128(sp)
   49304:	d9801a04 	addi	r6,sp,104
   49308:	00484ac0 	call	484ac <__sprint_r.part.0>
   4930c:	103e3c26 	beq	r2,zero,48c00 <__alt_data_end+0xfffe1b00>
   49310:	dd002117 	ldw	r20,132(sp)
   49314:	a080030b 	ldhu	r2,12(r20)
   49318:	1080100c 	andi	r2,r2,64
   4931c:	1001231e 	bne	r2,zero,497ac <___vfiprintf_internal_r+0x11ec>
   49320:	d8802317 	ldw	r2,140(sp)
   49324:	003d7b06 	br	48914 <__alt_data_end+0xfffe1814>
   49328:	1000991e 	bne	r2,zero,49590 <___vfiprintf_internal_r+0xfd0>
   4932c:	00c00044 	movi	r3,1
   49330:	9805883a 	mov	r2,r19
   49334:	dd400015 	stw	r21,0(sp)
   49338:	dcc00115 	stw	r19,4(sp)
   4933c:	dcc01c15 	stw	r19,112(sp)
   49340:	d8c01b15 	stw	r3,108(sp)
   49344:	d811883a 	mov	r8,sp
   49348:	42000204 	addi	r8,r8,8
   4934c:	a2c0010c 	andi	r11,r20,4
   49350:	583fe426 	beq	r11,zero,492e4 <__alt_data_end+0xfffe21e4>
   49354:	8ca7c83a 	sub	r19,r17,r18
   49358:	04ffe20e 	bge	zero,r19,492e4 <__alt_data_end+0xfffe21e4>
   4935c:	01c00404 	movi	r7,16
   49360:	3cffcc0e 	bge	r7,r19,49294 <__alt_data_end+0xfffe2194>
   49364:	02800174 	movhi	r10,5
   49368:	52be6d04 	addi	r10,r10,-1612
   4936c:	d9001b17 	ldw	r4,108(sp)
   49370:	da802415 	stw	r10,144(sp)
   49374:	382b883a 	mov	r21,r7
   49378:	050001c4 	movi	r20,7
   4937c:	df002017 	ldw	fp,128(sp)
   49380:	00000506 	br	49398 <___vfiprintf_internal_r+0xdd8>
   49384:	21400084 	addi	r5,r4,2
   49388:	42000204 	addi	r8,r8,8
   4938c:	1809883a 	mov	r4,r3
   49390:	9cfffc04 	addi	r19,r19,-16
   49394:	acffc40e 	bge	r21,r19,492a8 <__alt_data_end+0xfffe21a8>
   49398:	10800404 	addi	r2,r2,16
   4939c:	20c00044 	addi	r3,r4,1
   493a0:	45800015 	stw	r22,0(r8)
   493a4:	45400115 	stw	r21,4(r8)
   493a8:	d8801c15 	stw	r2,112(sp)
   493ac:	d8c01b15 	stw	r3,108(sp)
   493b0:	a0fff40e 	bge	r20,r3,49384 <__alt_data_end+0xfffe2284>
   493b4:	1000041e 	bne	r2,zero,493c8 <___vfiprintf_internal_r+0xe08>
   493b8:	01400044 	movi	r5,1
   493bc:	0009883a 	mov	r4,zero
   493c0:	d811883a 	mov	r8,sp
   493c4:	003ff206 	br	49390 <__alt_data_end+0xfffe2290>
   493c8:	d9402117 	ldw	r5,132(sp)
   493cc:	d9801a04 	addi	r6,sp,104
   493d0:	e009883a 	mov	r4,fp
   493d4:	00484ac0 	call	484ac <__sprint_r.part.0>
   493d8:	103fcd1e 	bne	r2,zero,49310 <__alt_data_end+0xfffe2210>
   493dc:	d9001b17 	ldw	r4,108(sp)
   493e0:	d8801c17 	ldw	r2,112(sp)
   493e4:	d811883a 	mov	r8,sp
   493e8:	21400044 	addi	r5,r4,1
   493ec:	003fe806 	br	49390 <__alt_data_end+0xfffe2290>
   493f0:	d9402117 	ldw	r5,132(sp)
   493f4:	d9002017 	ldw	r4,128(sp)
   493f8:	d9801a04 	addi	r6,sp,104
   493fc:	d9c02b15 	stw	r7,172(sp)
   49400:	db402a15 	stw	r13,168(sp)
   49404:	00484ac0 	call	484ac <__sprint_r.part.0>
   49408:	d9c02b17 	ldw	r7,172(sp)
   4940c:	db402a17 	ldw	r13,168(sp)
   49410:	103fbf1e 	bne	r2,zero,49310 <__alt_data_end+0xfffe2210>
   49414:	d9401b17 	ldw	r5,108(sp)
   49418:	d8801c17 	ldw	r2,112(sp)
   4941c:	d811883a 	mov	r8,sp
   49420:	29800044 	addi	r6,r5,1
   49424:	003dc406 	br	48b38 <__alt_data_end+0xfffe1a38>
   49428:	1000d21e 	bne	r2,zero,49774 <___vfiprintf_internal_r+0x11b4>
   4942c:	d8c01d87 	ldb	r3,118(sp)
   49430:	18009526 	beq	r3,zero,49688 <___vfiprintf_internal_r+0x10c8>
   49434:	00800044 	movi	r2,1
   49438:	d8c01d84 	addi	r3,sp,118
   4943c:	1009883a 	mov	r4,r2
   49440:	d8c00015 	stw	r3,0(sp)
   49444:	d8800115 	stw	r2,4(sp)
   49448:	d811883a 	mov	r8,sp
   4944c:	200b883a 	mov	r5,r4
   49450:	42000204 	addi	r8,r8,8
   49454:	21000044 	addi	r4,r4,1
   49458:	003d9706 	br	48ab8 <__alt_data_end+0xfffe19b8>
   4945c:	d9001d04 	addi	r4,sp,116
   49460:	00800084 	movi	r2,2
   49464:	d9000015 	stw	r4,0(sp)
   49468:	d8800115 	stw	r2,4(sp)
   4946c:	1809883a 	mov	r4,r3
   49470:	d811883a 	mov	r8,sp
   49474:	200b883a 	mov	r5,r4
   49478:	42000204 	addi	r8,r8,8
   4947c:	21000044 	addi	r4,r4,1
   49480:	003f4e06 	br	491bc <__alt_data_end+0xfffe20bc>
   49484:	d8001d85 	stb	zero,118(sp)
   49488:	48005016 	blt	r9,zero,495cc <___vfiprintf_internal_r+0x100c>
   4948c:	00ffdfc4 	movi	r3,-129
   49490:	94c4b03a 	or	r2,r18,r19
   49494:	a0e8703a 	and	r20,r20,r3
   49498:	103d4426 	beq	r2,zero,489ac <__alt_data_end+0xfffe18ac>
   4949c:	0039883a 	mov	fp,zero
   494a0:	d9002617 	ldw	r4,152(sp)
   494a4:	dd401a04 	addi	r21,sp,104
   494a8:	908003cc 	andi	r2,r18,15
   494ac:	9806973a 	slli	r3,r19,28
   494b0:	2085883a 	add	r2,r4,r2
   494b4:	9024d13a 	srli	r18,r18,4
   494b8:	10800003 	ldbu	r2,0(r2)
   494bc:	9826d13a 	srli	r19,r19,4
   494c0:	ad7fffc4 	addi	r21,r21,-1
   494c4:	1ca4b03a 	or	r18,r3,r18
   494c8:	a8800005 	stb	r2,0(r21)
   494cc:	94c4b03a 	or	r2,r18,r19
   494d0:	103ff51e 	bne	r2,zero,494a8 <__alt_data_end+0xfffe23a8>
   494d4:	003e5906 	br	48e3c <__alt_data_end+0xfffe1d3c>
   494d8:	d9402117 	ldw	r5,132(sp)
   494dc:	d9002017 	ldw	r4,128(sp)
   494e0:	d9801a04 	addi	r6,sp,104
   494e4:	00484ac0 	call	484ac <__sprint_r.part.0>
   494e8:	103f891e 	bne	r2,zero,49310 <__alt_data_end+0xfffe2210>
   494ec:	d8801c17 	ldw	r2,112(sp)
   494f0:	d811883a 	mov	r8,sp
   494f4:	003f9506 	br	4934c <__alt_data_end+0xfffe224c>
   494f8:	d9402117 	ldw	r5,132(sp)
   494fc:	d9002017 	ldw	r4,128(sp)
   49500:	d9801a04 	addi	r6,sp,104
   49504:	00484ac0 	call	484ac <__sprint_r.part.0>
   49508:	103f811e 	bne	r2,zero,49310 <__alt_data_end+0xfffe2210>
   4950c:	d811883a 	mov	r8,sp
   49510:	003ced06 	br	488c8 <__alt_data_end+0xfffe17c8>
   49514:	d9402117 	ldw	r5,132(sp)
   49518:	d9002017 	ldw	r4,128(sp)
   4951c:	d9801a04 	addi	r6,sp,104
   49520:	da402c15 	stw	r9,176(sp)
   49524:	db802a15 	stw	r14,168(sp)
   49528:	00484ac0 	call	484ac <__sprint_r.part.0>
   4952c:	da402c17 	ldw	r9,176(sp)
   49530:	db802a17 	ldw	r14,168(sp)
   49534:	103f761e 	bne	r2,zero,49310 <__alt_data_end+0xfffe2210>
   49538:	d9401b17 	ldw	r5,108(sp)
   4953c:	d8801c17 	ldw	r2,112(sp)
   49540:	d811883a 	mov	r8,sp
   49544:	29000044 	addi	r4,r5,1
   49548:	003d5b06 	br	48ab8 <__alt_data_end+0xfffe19b8>
   4954c:	d9402117 	ldw	r5,132(sp)
   49550:	d9002017 	ldw	r4,128(sp)
   49554:	d9801a04 	addi	r6,sp,104
   49558:	da402c15 	stw	r9,176(sp)
   4955c:	00484ac0 	call	484ac <__sprint_r.part.0>
   49560:	da402c17 	ldw	r9,176(sp)
   49564:	103f6a1e 	bne	r2,zero,49310 <__alt_data_end+0xfffe2210>
   49568:	d9401b17 	ldw	r5,108(sp)
   4956c:	d8801c17 	ldw	r2,112(sp)
   49570:	d811883a 	mov	r8,sp
   49574:	29000044 	addi	r4,r5,1
   49578:	003f1006 	br	491bc <__alt_data_end+0xfffe20bc>
   4957c:	1000c31e 	bne	r2,zero,4988c <___vfiprintf_internal_r+0x12cc>
   49580:	01000044 	movi	r4,1
   49584:	000b883a 	mov	r5,zero
   49588:	d811883a 	mov	r8,sp
   4958c:	003f0d06 	br	491c4 <__alt_data_end+0xfffe20c4>
   49590:	d9402117 	ldw	r5,132(sp)
   49594:	d9002017 	ldw	r4,128(sp)
   49598:	d9801a04 	addi	r6,sp,104
   4959c:	00484ac0 	call	484ac <__sprint_r.part.0>
   495a0:	103f5b1e 	bne	r2,zero,49310 <__alt_data_end+0xfffe2210>
   495a4:	d9001b17 	ldw	r4,108(sp)
   495a8:	d8801c17 	ldw	r2,112(sp)
   495ac:	d811883a 	mov	r8,sp
   495b0:	21000044 	addi	r4,r4,1
   495b4:	003d8006 	br	48bb8 <__alt_data_end+0xfffe1ab8>
   495b8:	01000174 	movhi	r4,5
   495bc:	213e0804 	addi	r4,r4,-2016
   495c0:	d9002615 	stw	r4,152(sp)
   495c4:	d8c02215 	stw	r3,136(sp)
   495c8:	1029883a 	mov	r20,r2
   495cc:	94c4b03a 	or	r2,r18,r19
   495d0:	103fb21e 	bne	r2,zero,4949c <__alt_data_end+0xfffe239c>
   495d4:	0039883a 	mov	fp,zero
   495d8:	00800084 	movi	r2,2
   495dc:	003e6b06 	br	48f8c <__alt_data_end+0xfffe1e8c>
   495e0:	da802217 	ldw	r10,136(sp)
   495e4:	d8001d85 	stb	zero,118(sp)
   495e8:	0027883a 	mov	r19,zero
   495ec:	50800104 	addi	r2,r10,4
   495f0:	54800017 	ldw	r18,0(r10)
   495f4:	483e6016 	blt	r9,zero,48f78 <__alt_data_end+0xfffe1e78>
   495f8:	00ffdfc4 	movi	r3,-129
   495fc:	d8802215 	stw	r2,136(sp)
   49600:	a0e8703a 	and	r20,r20,r3
   49604:	0039883a 	mov	fp,zero
   49608:	903ebb26 	beq	r18,zero,490f8 <__alt_data_end+0xfffe1ff8>
   4960c:	00800244 	movi	r2,9
   49610:	14bdee36 	bltu	r2,r18,48dcc <__alt_data_end+0xfffe1ccc>
   49614:	003eba06 	br	49100 <__alt_data_end+0xfffe2000>
   49618:	00800c04 	movi	r2,48
   4961c:	d8c01d45 	stb	r3,117(sp)
   49620:	d8801d05 	stb	r2,116(sp)
   49624:	d8001d85 	stb	zero,118(sp)
   49628:	a0c00094 	ori	r3,r20,2
   4962c:	4800a916 	blt	r9,zero,498d4 <___vfiprintf_internal_r+0x1314>
   49630:	00bfdfc4 	movi	r2,-129
   49634:	a096703a 	and	r11,r20,r2
   49638:	5d000094 	ori	r20,r11,2
   4963c:	0039883a 	mov	fp,zero
   49640:	003f9706 	br	494a0 <__alt_data_end+0xfffe23a0>
   49644:	8025883a 	mov	r18,r16
   49648:	003c2e06 	br	48704 <__alt_data_end+0xfffe1604>
   4964c:	00800174 	movhi	r2,5
   49650:	10be0804 	addi	r2,r2,-2016
   49654:	0039883a 	mov	fp,zero
   49658:	d8802615 	stw	r2,152(sp)
   4965c:	003f9006 	br	494a0 <__alt_data_end+0xfffe23a0>
   49660:	04a5c83a 	sub	r18,zero,r18
   49664:	07000b44 	movi	fp,45
   49668:	9004c03a 	cmpne	r2,r18,zero
   4966c:	04e7c83a 	sub	r19,zero,r19
   49670:	df001d85 	stb	fp,118(sp)
   49674:	98a7c83a 	sub	r19,r19,r2
   49678:	48009f16 	blt	r9,zero,498f8 <___vfiprintf_internal_r+0x1338>
   4967c:	00bfdfc4 	movi	r2,-129
   49680:	a0a8703a 	and	r20,r20,r2
   49684:	003dd006 	br	48dc8 <__alt_data_end+0xfffe1cc8>
   49688:	70004c26 	beq	r14,zero,497bc <___vfiprintf_internal_r+0x11fc>
   4968c:	00800084 	movi	r2,2
   49690:	d8c01d04 	addi	r3,sp,116
   49694:	d8c00015 	stw	r3,0(sp)
   49698:	d8800115 	stw	r2,4(sp)
   4969c:	01000044 	movi	r4,1
   496a0:	d811883a 	mov	r8,sp
   496a4:	003f7306 	br	49474 <__alt_data_end+0xfffe2374>
   496a8:	a080100c 	andi	r2,r20,64
   496ac:	da802217 	ldw	r10,136(sp)
   496b0:	103e0626 	beq	r2,zero,48ecc <__alt_data_end+0xfffe1dcc>
   496b4:	5480000f 	ldh	r18,0(r10)
   496b8:	52800104 	addi	r10,r10,4
   496bc:	da802215 	stw	r10,136(sp)
   496c0:	9027d7fa 	srai	r19,r18,31
   496c4:	9805883a 	mov	r2,r19
   496c8:	003db806 	br	48dac <__alt_data_end+0xfffe1cac>
   496cc:	a080040c 	andi	r2,r20,16
   496d0:	1000091e 	bne	r2,zero,496f8 <___vfiprintf_internal_r+0x1138>
   496d4:	a2c0100c 	andi	r11,r20,64
   496d8:	58000726 	beq	r11,zero,496f8 <___vfiprintf_internal_r+0x1138>
   496dc:	da802217 	ldw	r10,136(sp)
   496e0:	50800017 	ldw	r2,0(r10)
   496e4:	52800104 	addi	r10,r10,4
   496e8:	da802215 	stw	r10,136(sp)
   496ec:	da802317 	ldw	r10,140(sp)
   496f0:	1280000d 	sth	r10,0(r2)
   496f4:	003be706 	br	48694 <__alt_data_end+0xfffe1594>
   496f8:	da802217 	ldw	r10,136(sp)
   496fc:	50800017 	ldw	r2,0(r10)
   49700:	52800104 	addi	r10,r10,4
   49704:	da802215 	stw	r10,136(sp)
   49708:	da802317 	ldw	r10,140(sp)
   4970c:	12800015 	stw	r10,0(r2)
   49710:	003be006 	br	48694 <__alt_data_end+0xfffe1594>
   49714:	a080100c 	andi	r2,r20,64
   49718:	da802217 	ldw	r10,136(sp)
   4971c:	10003026 	beq	r2,zero,497e0 <___vfiprintf_internal_r+0x1220>
   49720:	5480000b 	ldhu	r18,0(r10)
   49724:	52800104 	addi	r10,r10,4
   49728:	0027883a 	mov	r19,zero
   4972c:	da802215 	stw	r10,136(sp)
   49730:	003d8006 	br	48d34 <__alt_data_end+0xfffe1c34>
   49734:	80c00007 	ldb	r3,0(r16)
   49738:	003c0006 	br	4873c <__alt_data_end+0xfffe163c>
   4973c:	a080100c 	andi	r2,r20,64
   49740:	d8001d85 	stb	zero,118(sp)
   49744:	da802217 	ldw	r10,136(sp)
   49748:	1000201e 	bne	r2,zero,497cc <___vfiprintf_internal_r+0x120c>
   4974c:	50800104 	addi	r2,r10,4
   49750:	54800017 	ldw	r18,0(r10)
   49754:	0027883a 	mov	r19,zero
   49758:	483def0e 	bge	r9,zero,48f18 <__alt_data_end+0xfffe1e18>
   4975c:	94c6b03a 	or	r3,r18,r19
   49760:	d8802215 	stw	r2,136(sp)
   49764:	183d4e1e 	bne	r3,zero,48ca0 <__alt_data_end+0xfffe1ba0>
   49768:	0039883a 	mov	fp,zero
   4976c:	0005883a 	mov	r2,zero
   49770:	003e0606 	br	48f8c <__alt_data_end+0xfffe1e8c>
   49774:	d9402117 	ldw	r5,132(sp)
   49778:	d9002017 	ldw	r4,128(sp)
   4977c:	d9801a04 	addi	r6,sp,104
   49780:	da402c15 	stw	r9,176(sp)
   49784:	db802a15 	stw	r14,168(sp)
   49788:	00484ac0 	call	484ac <__sprint_r.part.0>
   4978c:	da402c17 	ldw	r9,176(sp)
   49790:	db802a17 	ldw	r14,168(sp)
   49794:	103ede1e 	bne	r2,zero,49310 <__alt_data_end+0xfffe2210>
   49798:	d9401b17 	ldw	r5,108(sp)
   4979c:	d8801c17 	ldw	r2,112(sp)
   497a0:	d811883a 	mov	r8,sp
   497a4:	29000044 	addi	r4,r5,1
   497a8:	003e7406 	br	4917c <__alt_data_end+0xfffe207c>
   497ac:	00bfffc4 	movi	r2,-1
   497b0:	003c5806 	br	48914 <__alt_data_end+0xfffe1814>
   497b4:	d811883a 	mov	r8,sp
   497b8:	003ee806 	br	4935c <__alt_data_end+0xfffe225c>
   497bc:	000b883a 	mov	r5,zero
   497c0:	01000044 	movi	r4,1
   497c4:	d811883a 	mov	r8,sp
   497c8:	003e7c06 	br	491bc <__alt_data_end+0xfffe20bc>
   497cc:	50800104 	addi	r2,r10,4
   497d0:	5480000b 	ldhu	r18,0(r10)
   497d4:	0027883a 	mov	r19,zero
   497d8:	483dcf0e 	bge	r9,zero,48f18 <__alt_data_end+0xfffe1e18>
   497dc:	003fdf06 	br	4975c <__alt_data_end+0xfffe265c>
   497e0:	54800017 	ldw	r18,0(r10)
   497e4:	52800104 	addi	r10,r10,4
   497e8:	0027883a 	mov	r19,zero
   497ec:	da802215 	stw	r10,136(sp)
   497f0:	003d5006 	br	48d34 <__alt_data_end+0xfffe1c34>
   497f4:	50800104 	addi	r2,r10,4
   497f8:	5480000b 	ldhu	r18,0(r10)
   497fc:	0027883a 	mov	r19,zero
   49800:	483f7d0e 	bge	r9,zero,495f8 <__alt_data_end+0xfffe24f8>
   49804:	003ddc06 	br	48f78 <__alt_data_end+0xfffe1e78>
   49808:	d8c02215 	stw	r3,136(sp)
   4980c:	0039883a 	mov	fp,zero
   49810:	003ddb06 	br	48f80 <__alt_data_end+0xfffe1e80>
   49814:	02800174 	movhi	r10,5
   49818:	52be6904 	addi	r10,r10,-1628
   4981c:	da802415 	stw	r10,144(sp)
   49820:	003e8306 	br	49230 <__alt_data_end+0xfffe2130>
   49824:	d8801c17 	ldw	r2,112(sp)
   49828:	dd002117 	ldw	r20,132(sp)
   4982c:	103eb926 	beq	r2,zero,49314 <__alt_data_end+0xfffe2214>
   49830:	d9002017 	ldw	r4,128(sp)
   49834:	d9801a04 	addi	r6,sp,104
   49838:	a00b883a 	mov	r5,r20
   4983c:	00484ac0 	call	484ac <__sprint_r.part.0>
   49840:	003eb406 	br	49314 <__alt_data_end+0xfffe2214>
   49844:	80c00043 	ldbu	r3,1(r16)
   49848:	a5000814 	ori	r20,r20,32
   4984c:	84000044 	addi	r16,r16,1
   49850:	18c03fcc 	andi	r3,r3,255
   49854:	18c0201c 	xori	r3,r3,128
   49858:	18ffe004 	addi	r3,r3,-128
   4985c:	003bb706 	br	4873c <__alt_data_end+0xfffe163c>
   49860:	a809883a 	mov	r4,r21
   49864:	d8c02a15 	stw	r3,168(sp)
   49868:	da002b15 	stw	r8,172(sp)
   4986c:	0040f140 	call	40f14 <strlen>
   49870:	d8c02a17 	ldw	r3,168(sp)
   49874:	1027883a 	mov	r19,r2
   49878:	df001d83 	ldbu	fp,118(sp)
   4987c:	d8c02215 	stw	r3,136(sp)
   49880:	0013883a 	mov	r9,zero
   49884:	da002b17 	ldw	r8,172(sp)
   49888:	003c4d06 	br	489c0 <__alt_data_end+0xfffe18c0>
   4988c:	d9402117 	ldw	r5,132(sp)
   49890:	d9002017 	ldw	r4,128(sp)
   49894:	d9801a04 	addi	r6,sp,104
   49898:	da402c15 	stw	r9,176(sp)
   4989c:	00484ac0 	call	484ac <__sprint_r.part.0>
   498a0:	da402c17 	ldw	r9,176(sp)
   498a4:	103e9a1e 	bne	r2,zero,49310 <__alt_data_end+0xfffe2210>
   498a8:	d9401b17 	ldw	r5,108(sp)
   498ac:	d8801c17 	ldw	r2,112(sp)
   498b0:	d811883a 	mov	r8,sp
   498b4:	29000044 	addi	r4,r5,1
   498b8:	003e4206 	br	491c4 <__alt_data_end+0xfffe20c4>
   498bc:	d9401b17 	ldw	r5,108(sp)
   498c0:	01000174 	movhi	r4,5
   498c4:	213e6d04 	addi	r4,r4,-1612
   498c8:	d9002415 	stw	r4,144(sp)
   498cc:	29400044 	addi	r5,r5,1
   498d0:	003c6d06 	br	48a88 <__alt_data_end+0xfffe1988>
   498d4:	0039883a 	mov	fp,zero
   498d8:	00800084 	movi	r2,2
   498dc:	10803fcc 	andi	r2,r2,255
   498e0:	01000044 	movi	r4,1
   498e4:	11001e26 	beq	r2,r4,49960 <___vfiprintf_internal_r+0x13a0>
   498e8:	01000084 	movi	r4,2
   498ec:	11001e1e 	bne	r2,r4,49968 <___vfiprintf_internal_r+0x13a8>
   498f0:	1829883a 	mov	r20,r3
   498f4:	003eea06 	br	494a0 <__alt_data_end+0xfffe23a0>
   498f8:	a007883a 	mov	r3,r20
   498fc:	00800044 	movi	r2,1
   49900:	003ff606 	br	498dc <__alt_data_end+0xfffe27dc>
   49904:	00800184 	movi	r2,6
   49908:	1240012e 	bgeu	r2,r9,49910 <___vfiprintf_internal_r+0x1350>
   4990c:	1013883a 	mov	r9,r2
   49910:	4827883a 	mov	r19,r9
   49914:	4825883a 	mov	r18,r9
   49918:	48001516 	blt	r9,zero,49970 <___vfiprintf_internal_r+0x13b0>
   4991c:	05400174 	movhi	r21,5
   49920:	d8c02215 	stw	r3,136(sp)
   49924:	ad7e0d04 	addi	r21,r21,-1996
   49928:	003d1406 	br	48d7c <__alt_data_end+0xfffe1c7c>
   4992c:	02800174 	movhi	r10,5
   49930:	52be6904 	addi	r10,r10,-1628
   49934:	da802415 	stw	r10,144(sp)
   49938:	200d883a 	mov	r6,r4
   4993c:	003c9106 	br	48b84 <__alt_data_end+0xfffe1a84>
   49940:	5021883a 	mov	r16,r10
   49944:	0013883a 	mov	r9,zero
   49948:	003b7d06 	br	48740 <__alt_data_end+0xfffe1640>
   4994c:	4827883a 	mov	r19,r9
   49950:	df001d83 	ldbu	fp,118(sp)
   49954:	d8c02215 	stw	r3,136(sp)
   49958:	0013883a 	mov	r9,zero
   4995c:	003c1806 	br	489c0 <__alt_data_end+0xfffe18c0>
   49960:	1829883a 	mov	r20,r3
   49964:	003d1806 	br	48dc8 <__alt_data_end+0xfffe1cc8>
   49968:	1829883a 	mov	r20,r3
   4996c:	003ccd06 	br	48ca4 <__alt_data_end+0xfffe1ba4>
   49970:	0025883a 	mov	r18,zero
   49974:	003fe906 	br	4991c <__alt_data_end+0xfffe281c>
   49978:	d8802217 	ldw	r2,136(sp)
   4997c:	80c00043 	ldbu	r3,1(r16)
   49980:	5021883a 	mov	r16,r10
   49984:	12400017 	ldw	r9,0(r2)
   49988:	10800104 	addi	r2,r2,4
   4998c:	d8802215 	stw	r2,136(sp)
   49990:	483faf0e 	bge	r9,zero,49850 <__alt_data_end+0xfffe2750>
   49994:	18c03fcc 	andi	r3,r3,255
   49998:	18c0201c 	xori	r3,r3,128
   4999c:	027fffc4 	movi	r9,-1
   499a0:	18ffe004 	addi	r3,r3,-128
   499a4:	003b6506 	br	4873c <__alt_data_end+0xfffe163c>
   499a8:	d9c01d85 	stb	r7,118(sp)
   499ac:	003ca006 	br	48c30 <__alt_data_end+0xfffe1b30>
   499b0:	d9c01d85 	stb	r7,118(sp)
   499b4:	003cad06 	br	48c6c <__alt_data_end+0xfffe1b6c>
   499b8:	d9c01d85 	stb	r7,118(sp)
   499bc:	003d7d06 	br	48fb4 <__alt_data_end+0xfffe1eb4>
   499c0:	d9c01d85 	stb	r7,118(sp)
   499c4:	003d5f06 	br	48f44 <__alt_data_end+0xfffe1e44>
   499c8:	a080004c 	andi	r2,r20,1
   499cc:	0039883a 	mov	fp,zero
   499d0:	10000526 	beq	r2,zero,499e8 <___vfiprintf_internal_r+0x1428>
   499d4:	00800c04 	movi	r2,48
   499d8:	d88019c5 	stb	r2,103(sp)
   499dc:	dcc02717 	ldw	r19,156(sp)
   499e0:	dd4019c4 	addi	r21,sp,103
   499e4:	003bf606 	br	489c0 <__alt_data_end+0xfffe18c0>
   499e8:	0027883a 	mov	r19,zero
   499ec:	dd401a04 	addi	r21,sp,104
   499f0:	003bf306 	br	489c0 <__alt_data_end+0xfffe18c0>
   499f4:	d9c01d85 	stb	r7,118(sp)
   499f8:	003dc806 	br	4911c <__alt_data_end+0xfffe201c>
   499fc:	d9c01d85 	stb	r7,118(sp)
   49a00:	003d3a06 	br	48eec <__alt_data_end+0xfffe1dec>
   49a04:	d9c01d85 	stb	r7,118(sp)
   49a08:	003d2a06 	br	48eb4 <__alt_data_end+0xfffe1db4>
   49a0c:	d9c01d85 	stb	r7,118(sp)
   49a10:	003cde06 	br	48d8c <__alt_data_end+0xfffe1c8c>
   49a14:	d9c01d85 	stb	r7,118(sp)
   49a18:	003cbc06 	br	48d0c <__alt_data_end+0xfffe1c0c>

00049a1c <__vfiprintf_internal>:
   49a1c:	00800174 	movhi	r2,5
   49a20:	10852804 	addi	r2,r2,5280
   49a24:	300f883a 	mov	r7,r6
   49a28:	280d883a 	mov	r6,r5
   49a2c:	200b883a 	mov	r5,r4
   49a30:	11000017 	ldw	r4,0(r2)
   49a34:	00485c01 	jmpi	485c0 <___vfiprintf_internal_r>

00049a38 <__sbprintf>:
   49a38:	2880030b 	ldhu	r2,12(r5)
   49a3c:	2ac01917 	ldw	r11,100(r5)
   49a40:	2a80038b 	ldhu	r10,14(r5)
   49a44:	2a400717 	ldw	r9,28(r5)
   49a48:	2a000917 	ldw	r8,36(r5)
   49a4c:	defee204 	addi	sp,sp,-1144
   49a50:	00c10004 	movi	r3,1024
   49a54:	dc011a15 	stw	r16,1128(sp)
   49a58:	10bfff4c 	andi	r2,r2,65533
   49a5c:	2821883a 	mov	r16,r5
   49a60:	d8cb883a 	add	r5,sp,r3
   49a64:	dc811c15 	stw	r18,1136(sp)
   49a68:	dc411b15 	stw	r17,1132(sp)
   49a6c:	dfc11d15 	stw	ra,1140(sp)
   49a70:	2025883a 	mov	r18,r4
   49a74:	d881030d 	sth	r2,1036(sp)
   49a78:	dac11915 	stw	r11,1124(sp)
   49a7c:	da81038d 	sth	r10,1038(sp)
   49a80:	da410715 	stw	r9,1052(sp)
   49a84:	da010915 	stw	r8,1060(sp)
   49a88:	dec10015 	stw	sp,1024(sp)
   49a8c:	dec10415 	stw	sp,1040(sp)
   49a90:	d8c10215 	stw	r3,1032(sp)
   49a94:	d8c10515 	stw	r3,1044(sp)
   49a98:	d8010615 	stw	zero,1048(sp)
   49a9c:	00485c00 	call	485c0 <___vfiprintf_internal_r>
   49aa0:	1023883a 	mov	r17,r2
   49aa4:	10000416 	blt	r2,zero,49ab8 <__sbprintf+0x80>
   49aa8:	d9410004 	addi	r5,sp,1024
   49aac:	9009883a 	mov	r4,r18
   49ab0:	0044e740 	call	44e74 <_fflush_r>
   49ab4:	10000d1e 	bne	r2,zero,49aec <__sbprintf+0xb4>
   49ab8:	d881030b 	ldhu	r2,1036(sp)
   49abc:	1080100c 	andi	r2,r2,64
   49ac0:	10000326 	beq	r2,zero,49ad0 <__sbprintf+0x98>
   49ac4:	8080030b 	ldhu	r2,12(r16)
   49ac8:	10801014 	ori	r2,r2,64
   49acc:	8080030d 	sth	r2,12(r16)
   49ad0:	8805883a 	mov	r2,r17
   49ad4:	dfc11d17 	ldw	ra,1140(sp)
   49ad8:	dc811c17 	ldw	r18,1136(sp)
   49adc:	dc411b17 	ldw	r17,1132(sp)
   49ae0:	dc011a17 	ldw	r16,1128(sp)
   49ae4:	dec11e04 	addi	sp,sp,1144
   49ae8:	f800283a 	ret
   49aec:	047fffc4 	movi	r17,-1
   49af0:	003ff106 	br	49ab8 <__alt_data_end+0xfffe29b8>

00049af4 <_write_r>:
   49af4:	defffd04 	addi	sp,sp,-12
   49af8:	2805883a 	mov	r2,r5
   49afc:	dc000015 	stw	r16,0(sp)
   49b00:	04000174 	movhi	r16,5
   49b04:	dc400115 	stw	r17,4(sp)
   49b08:	300b883a 	mov	r5,r6
   49b0c:	840bf804 	addi	r16,r16,12256
   49b10:	2023883a 	mov	r17,r4
   49b14:	380d883a 	mov	r6,r7
   49b18:	1009883a 	mov	r4,r2
   49b1c:	dfc00215 	stw	ra,8(sp)
   49b20:	80000015 	stw	zero,0(r16)
   49b24:	004d7980 	call	4d798 <write>
   49b28:	00ffffc4 	movi	r3,-1
   49b2c:	10c00526 	beq	r2,r3,49b44 <_write_r+0x50>
   49b30:	dfc00217 	ldw	ra,8(sp)
   49b34:	dc400117 	ldw	r17,4(sp)
   49b38:	dc000017 	ldw	r16,0(sp)
   49b3c:	dec00304 	addi	sp,sp,12
   49b40:	f800283a 	ret
   49b44:	80c00017 	ldw	r3,0(r16)
   49b48:	183ff926 	beq	r3,zero,49b30 <__alt_data_end+0xfffe2a30>
   49b4c:	88c00015 	stw	r3,0(r17)
   49b50:	003ff706 	br	49b30 <__alt_data_end+0xfffe2a30>

00049b54 <_close_r>:
   49b54:	defffd04 	addi	sp,sp,-12
   49b58:	dc000015 	stw	r16,0(sp)
   49b5c:	04000174 	movhi	r16,5
   49b60:	dc400115 	stw	r17,4(sp)
   49b64:	840bf804 	addi	r16,r16,12256
   49b68:	2023883a 	mov	r17,r4
   49b6c:	2809883a 	mov	r4,r5
   49b70:	dfc00215 	stw	ra,8(sp)
   49b74:	80000015 	stw	zero,0(r16)
   49b78:	004ced80 	call	4ced8 <close>
   49b7c:	00ffffc4 	movi	r3,-1
   49b80:	10c00526 	beq	r2,r3,49b98 <_close_r+0x44>
   49b84:	dfc00217 	ldw	ra,8(sp)
   49b88:	dc400117 	ldw	r17,4(sp)
   49b8c:	dc000017 	ldw	r16,0(sp)
   49b90:	dec00304 	addi	sp,sp,12
   49b94:	f800283a 	ret
   49b98:	80c00017 	ldw	r3,0(r16)
   49b9c:	183ff926 	beq	r3,zero,49b84 <__alt_data_end+0xfffe2a84>
   49ba0:	88c00015 	stw	r3,0(r17)
   49ba4:	003ff706 	br	49b84 <__alt_data_end+0xfffe2a84>

00049ba8 <_calloc_r>:
   49ba8:	298b383a 	mul	r5,r5,r6
   49bac:	defffe04 	addi	sp,sp,-8
   49bb0:	dfc00115 	stw	ra,4(sp)
   49bb4:	dc000015 	stw	r16,0(sp)
   49bb8:	0045fb00 	call	45fb0 <_malloc_r>
   49bbc:	10002926 	beq	r2,zero,49c64 <_calloc_r+0xbc>
   49bc0:	11bfff17 	ldw	r6,-4(r2)
   49bc4:	1021883a 	mov	r16,r2
   49bc8:	00bfff04 	movi	r2,-4
   49bcc:	308c703a 	and	r6,r6,r2
   49bd0:	00c00904 	movi	r3,36
   49bd4:	308d883a 	add	r6,r6,r2
   49bd8:	19801636 	bltu	r3,r6,49c34 <_calloc_r+0x8c>
   49bdc:	008004c4 	movi	r2,19
   49be0:	11800b2e 	bgeu	r2,r6,49c10 <_calloc_r+0x68>
   49be4:	80000015 	stw	zero,0(r16)
   49be8:	80000115 	stw	zero,4(r16)
   49bec:	008006c4 	movi	r2,27
   49bf0:	11801a2e 	bgeu	r2,r6,49c5c <_calloc_r+0xb4>
   49bf4:	80000215 	stw	zero,8(r16)
   49bf8:	80000315 	stw	zero,12(r16)
   49bfc:	30c0151e 	bne	r6,r3,49c54 <_calloc_r+0xac>
   49c00:	80000415 	stw	zero,16(r16)
   49c04:	80800604 	addi	r2,r16,24
   49c08:	80000515 	stw	zero,20(r16)
   49c0c:	00000106 	br	49c14 <_calloc_r+0x6c>
   49c10:	8005883a 	mov	r2,r16
   49c14:	10000015 	stw	zero,0(r2)
   49c18:	10000115 	stw	zero,4(r2)
   49c1c:	10000215 	stw	zero,8(r2)
   49c20:	8005883a 	mov	r2,r16
   49c24:	dfc00117 	ldw	ra,4(sp)
   49c28:	dc000017 	ldw	r16,0(sp)
   49c2c:	dec00204 	addi	sp,sp,8
   49c30:	f800283a 	ret
   49c34:	000b883a 	mov	r5,zero
   49c38:	8009883a 	mov	r4,r16
   49c3c:	0046b440 	call	46b44 <memset>
   49c40:	8005883a 	mov	r2,r16
   49c44:	dfc00117 	ldw	ra,4(sp)
   49c48:	dc000017 	ldw	r16,0(sp)
   49c4c:	dec00204 	addi	sp,sp,8
   49c50:	f800283a 	ret
   49c54:	80800404 	addi	r2,r16,16
   49c58:	003fee06 	br	49c14 <__alt_data_end+0xfffe2b14>
   49c5c:	80800204 	addi	r2,r16,8
   49c60:	003fec06 	br	49c14 <__alt_data_end+0xfffe2b14>
   49c64:	0005883a 	mov	r2,zero
   49c68:	003fee06 	br	49c24 <__alt_data_end+0xfffe2b24>

00049c6c <_fclose_r>:
   49c6c:	28003926 	beq	r5,zero,49d54 <_fclose_r+0xe8>
   49c70:	defffc04 	addi	sp,sp,-16
   49c74:	dc400115 	stw	r17,4(sp)
   49c78:	dc000015 	stw	r16,0(sp)
   49c7c:	dfc00315 	stw	ra,12(sp)
   49c80:	dc800215 	stw	r18,8(sp)
   49c84:	2023883a 	mov	r17,r4
   49c88:	2821883a 	mov	r16,r5
   49c8c:	20000226 	beq	r4,zero,49c98 <_fclose_r+0x2c>
   49c90:	20800e17 	ldw	r2,56(r4)
   49c94:	10002726 	beq	r2,zero,49d34 <_fclose_r+0xc8>
   49c98:	8080030f 	ldh	r2,12(r16)
   49c9c:	1000071e 	bne	r2,zero,49cbc <_fclose_r+0x50>
   49ca0:	0005883a 	mov	r2,zero
   49ca4:	dfc00317 	ldw	ra,12(sp)
   49ca8:	dc800217 	ldw	r18,8(sp)
   49cac:	dc400117 	ldw	r17,4(sp)
   49cb0:	dc000017 	ldw	r16,0(sp)
   49cb4:	dec00404 	addi	sp,sp,16
   49cb8:	f800283a 	ret
   49cbc:	800b883a 	mov	r5,r16
   49cc0:	8809883a 	mov	r4,r17
   49cc4:	0044c580 	call	44c58 <__sflush_r>
   49cc8:	1025883a 	mov	r18,r2
   49ccc:	80800b17 	ldw	r2,44(r16)
   49cd0:	10000426 	beq	r2,zero,49ce4 <_fclose_r+0x78>
   49cd4:	81400717 	ldw	r5,28(r16)
   49cd8:	8809883a 	mov	r4,r17
   49cdc:	103ee83a 	callr	r2
   49ce0:	10001616 	blt	r2,zero,49d3c <_fclose_r+0xd0>
   49ce4:	8080030b 	ldhu	r2,12(r16)
   49ce8:	1080200c 	andi	r2,r2,128
   49cec:	1000151e 	bne	r2,zero,49d44 <_fclose_r+0xd8>
   49cf0:	81400c17 	ldw	r5,48(r16)
   49cf4:	28000526 	beq	r5,zero,49d0c <_fclose_r+0xa0>
   49cf8:	80801004 	addi	r2,r16,64
   49cfc:	28800226 	beq	r5,r2,49d08 <_fclose_r+0x9c>
   49d00:	8809883a 	mov	r4,r17
   49d04:	00453c40 	call	453c4 <_free_r>
   49d08:	80000c15 	stw	zero,48(r16)
   49d0c:	81401117 	ldw	r5,68(r16)
   49d10:	28000326 	beq	r5,zero,49d20 <_fclose_r+0xb4>
   49d14:	8809883a 	mov	r4,r17
   49d18:	00453c40 	call	453c4 <_free_r>
   49d1c:	80001115 	stw	zero,68(r16)
   49d20:	00452600 	call	45260 <__sfp_lock_acquire>
   49d24:	8000030d 	sth	zero,12(r16)
   49d28:	00452640 	call	45264 <__sfp_lock_release>
   49d2c:	9005883a 	mov	r2,r18
   49d30:	003fdc06 	br	49ca4 <__alt_data_end+0xfffe2ba4>
   49d34:	00452500 	call	45250 <__sinit>
   49d38:	003fd706 	br	49c98 <__alt_data_end+0xfffe2b98>
   49d3c:	04bfffc4 	movi	r18,-1
   49d40:	003fe806 	br	49ce4 <__alt_data_end+0xfffe2be4>
   49d44:	81400417 	ldw	r5,16(r16)
   49d48:	8809883a 	mov	r4,r17
   49d4c:	00453c40 	call	453c4 <_free_r>
   49d50:	003fe706 	br	49cf0 <__alt_data_end+0xfffe2bf0>
   49d54:	0005883a 	mov	r2,zero
   49d58:	f800283a 	ret

00049d5c <fclose>:
   49d5c:	00800174 	movhi	r2,5
   49d60:	10852804 	addi	r2,r2,5280
   49d64:	200b883a 	mov	r5,r4
   49d68:	11000017 	ldw	r4,0(r2)
   49d6c:	0049c6c1 	jmpi	49c6c <_fclose_r>

00049d70 <__fputwc>:
   49d70:	defff804 	addi	sp,sp,-32
   49d74:	dcc00415 	stw	r19,16(sp)
   49d78:	dc800315 	stw	r18,12(sp)
   49d7c:	dc000115 	stw	r16,4(sp)
   49d80:	dfc00715 	stw	ra,28(sp)
   49d84:	dd400615 	stw	r21,24(sp)
   49d88:	dd000515 	stw	r20,20(sp)
   49d8c:	dc400215 	stw	r17,8(sp)
   49d90:	2027883a 	mov	r19,r4
   49d94:	2825883a 	mov	r18,r5
   49d98:	3021883a 	mov	r16,r6
   49d9c:	0045da00 	call	45da0 <__locale_mb_cur_max>
   49da0:	00c00044 	movi	r3,1
   49da4:	10c03e26 	beq	r2,r3,49ea0 <__fputwc+0x130>
   49da8:	81c01704 	addi	r7,r16,92
   49dac:	900d883a 	mov	r6,r18
   49db0:	d80b883a 	mov	r5,sp
   49db4:	9809883a 	mov	r4,r19
   49db8:	004a2400 	call	4a240 <_wcrtomb_r>
   49dbc:	1029883a 	mov	r20,r2
   49dc0:	00bfffc4 	movi	r2,-1
   49dc4:	a0802026 	beq	r20,r2,49e48 <__fputwc+0xd8>
   49dc8:	d9400003 	ldbu	r5,0(sp)
   49dcc:	a0001c26 	beq	r20,zero,49e40 <__fputwc+0xd0>
   49dd0:	0023883a 	mov	r17,zero
   49dd4:	05400284 	movi	r21,10
   49dd8:	00000906 	br	49e00 <__fputwc+0x90>
   49ddc:	80800017 	ldw	r2,0(r16)
   49de0:	11400005 	stb	r5,0(r2)
   49de4:	80c00017 	ldw	r3,0(r16)
   49de8:	18c00044 	addi	r3,r3,1
   49dec:	80c00015 	stw	r3,0(r16)
   49df0:	8c400044 	addi	r17,r17,1
   49df4:	dc45883a 	add	r2,sp,r17
   49df8:	8d00112e 	bgeu	r17,r20,49e40 <__fputwc+0xd0>
   49dfc:	11400003 	ldbu	r5,0(r2)
   49e00:	80c00217 	ldw	r3,8(r16)
   49e04:	18ffffc4 	addi	r3,r3,-1
   49e08:	80c00215 	stw	r3,8(r16)
   49e0c:	183ff30e 	bge	r3,zero,49ddc <__alt_data_end+0xfffe2cdc>
   49e10:	80800617 	ldw	r2,24(r16)
   49e14:	18801916 	blt	r3,r2,49e7c <__fputwc+0x10c>
   49e18:	80800017 	ldw	r2,0(r16)
   49e1c:	11400005 	stb	r5,0(r2)
   49e20:	80800017 	ldw	r2,0(r16)
   49e24:	10c00003 	ldbu	r3,0(r2)
   49e28:	10800044 	addi	r2,r2,1
   49e2c:	1d402326 	beq	r3,r21,49ebc <__fputwc+0x14c>
   49e30:	80800015 	stw	r2,0(r16)
   49e34:	8c400044 	addi	r17,r17,1
   49e38:	dc45883a 	add	r2,sp,r17
   49e3c:	8d3fef36 	bltu	r17,r20,49dfc <__alt_data_end+0xfffe2cfc>
   49e40:	9005883a 	mov	r2,r18
   49e44:	00000406 	br	49e58 <__fputwc+0xe8>
   49e48:	80c0030b 	ldhu	r3,12(r16)
   49e4c:	a005883a 	mov	r2,r20
   49e50:	18c01014 	ori	r3,r3,64
   49e54:	80c0030d 	sth	r3,12(r16)
   49e58:	dfc00717 	ldw	ra,28(sp)
   49e5c:	dd400617 	ldw	r21,24(sp)
   49e60:	dd000517 	ldw	r20,20(sp)
   49e64:	dcc00417 	ldw	r19,16(sp)
   49e68:	dc800317 	ldw	r18,12(sp)
   49e6c:	dc400217 	ldw	r17,8(sp)
   49e70:	dc000117 	ldw	r16,4(sp)
   49e74:	dec00804 	addi	sp,sp,32
   49e78:	f800283a 	ret
   49e7c:	800d883a 	mov	r6,r16
   49e80:	29403fcc 	andi	r5,r5,255
   49e84:	9809883a 	mov	r4,r19
   49e88:	004a0e80 	call	4a0e8 <__swbuf_r>
   49e8c:	10bfffe0 	cmpeqi	r2,r2,-1
   49e90:	10803fcc 	andi	r2,r2,255
   49e94:	103fd626 	beq	r2,zero,49df0 <__alt_data_end+0xfffe2cf0>
   49e98:	00bfffc4 	movi	r2,-1
   49e9c:	003fee06 	br	49e58 <__alt_data_end+0xfffe2d58>
   49ea0:	90ffffc4 	addi	r3,r18,-1
   49ea4:	01003f84 	movi	r4,254
   49ea8:	20ffbf36 	bltu	r4,r3,49da8 <__alt_data_end+0xfffe2ca8>
   49eac:	900b883a 	mov	r5,r18
   49eb0:	dc800005 	stb	r18,0(sp)
   49eb4:	1029883a 	mov	r20,r2
   49eb8:	003fc506 	br	49dd0 <__alt_data_end+0xfffe2cd0>
   49ebc:	800d883a 	mov	r6,r16
   49ec0:	a80b883a 	mov	r5,r21
   49ec4:	9809883a 	mov	r4,r19
   49ec8:	004a0e80 	call	4a0e8 <__swbuf_r>
   49ecc:	10bfffe0 	cmpeqi	r2,r2,-1
   49ed0:	003fef06 	br	49e90 <__alt_data_end+0xfffe2d90>

00049ed4 <_fputwc_r>:
   49ed4:	3080030b 	ldhu	r2,12(r6)
   49ed8:	10c8000c 	andi	r3,r2,8192
   49edc:	1800051e 	bne	r3,zero,49ef4 <_fputwc_r+0x20>
   49ee0:	30c01917 	ldw	r3,100(r6)
   49ee4:	10880014 	ori	r2,r2,8192
   49ee8:	3080030d 	sth	r2,12(r6)
   49eec:	18880014 	ori	r2,r3,8192
   49ef0:	30801915 	stw	r2,100(r6)
   49ef4:	0049d701 	jmpi	49d70 <__fputwc>

00049ef8 <fputwc>:
   49ef8:	00800174 	movhi	r2,5
   49efc:	defffc04 	addi	sp,sp,-16
   49f00:	10852804 	addi	r2,r2,5280
   49f04:	dc000115 	stw	r16,4(sp)
   49f08:	14000017 	ldw	r16,0(r2)
   49f0c:	dc400215 	stw	r17,8(sp)
   49f10:	dfc00315 	stw	ra,12(sp)
   49f14:	2023883a 	mov	r17,r4
   49f18:	80000226 	beq	r16,zero,49f24 <fputwc+0x2c>
   49f1c:	80800e17 	ldw	r2,56(r16)
   49f20:	10001026 	beq	r2,zero,49f64 <fputwc+0x6c>
   49f24:	2880030b 	ldhu	r2,12(r5)
   49f28:	10c8000c 	andi	r3,r2,8192
   49f2c:	1800051e 	bne	r3,zero,49f44 <fputwc+0x4c>
   49f30:	28c01917 	ldw	r3,100(r5)
   49f34:	10880014 	ori	r2,r2,8192
   49f38:	2880030d 	sth	r2,12(r5)
   49f3c:	18880014 	ori	r2,r3,8192
   49f40:	28801915 	stw	r2,100(r5)
   49f44:	280d883a 	mov	r6,r5
   49f48:	8009883a 	mov	r4,r16
   49f4c:	880b883a 	mov	r5,r17
   49f50:	dfc00317 	ldw	ra,12(sp)
   49f54:	dc400217 	ldw	r17,8(sp)
   49f58:	dc000117 	ldw	r16,4(sp)
   49f5c:	dec00404 	addi	sp,sp,16
   49f60:	0049d701 	jmpi	49d70 <__fputwc>
   49f64:	8009883a 	mov	r4,r16
   49f68:	d9400015 	stw	r5,0(sp)
   49f6c:	00452500 	call	45250 <__sinit>
   49f70:	d9400017 	ldw	r5,0(sp)
   49f74:	003feb06 	br	49f24 <__alt_data_end+0xfffe2e24>

00049f78 <_fstat_r>:
   49f78:	defffd04 	addi	sp,sp,-12
   49f7c:	2805883a 	mov	r2,r5
   49f80:	dc000015 	stw	r16,0(sp)
   49f84:	04000174 	movhi	r16,5
   49f88:	dc400115 	stw	r17,4(sp)
   49f8c:	840bf804 	addi	r16,r16,12256
   49f90:	2023883a 	mov	r17,r4
   49f94:	300b883a 	mov	r5,r6
   49f98:	1009883a 	mov	r4,r2
   49f9c:	dfc00215 	stw	ra,8(sp)
   49fa0:	80000015 	stw	zero,0(r16)
   49fa4:	004d0100 	call	4d010 <fstat>
   49fa8:	00ffffc4 	movi	r3,-1
   49fac:	10c00526 	beq	r2,r3,49fc4 <_fstat_r+0x4c>
   49fb0:	dfc00217 	ldw	ra,8(sp)
   49fb4:	dc400117 	ldw	r17,4(sp)
   49fb8:	dc000017 	ldw	r16,0(sp)
   49fbc:	dec00304 	addi	sp,sp,12
   49fc0:	f800283a 	ret
   49fc4:	80c00017 	ldw	r3,0(r16)
   49fc8:	183ff926 	beq	r3,zero,49fb0 <__alt_data_end+0xfffe2eb0>
   49fcc:	88c00015 	stw	r3,0(r17)
   49fd0:	003ff706 	br	49fb0 <__alt_data_end+0xfffe2eb0>

00049fd4 <_isatty_r>:
   49fd4:	defffd04 	addi	sp,sp,-12
   49fd8:	dc000015 	stw	r16,0(sp)
   49fdc:	04000174 	movhi	r16,5
   49fe0:	dc400115 	stw	r17,4(sp)
   49fe4:	840bf804 	addi	r16,r16,12256
   49fe8:	2023883a 	mov	r17,r4
   49fec:	2809883a 	mov	r4,r5
   49ff0:	dfc00215 	stw	ra,8(sp)
   49ff4:	80000015 	stw	zero,0(r16)
   49ff8:	004d0fc0 	call	4d0fc <isatty>
   49ffc:	00ffffc4 	movi	r3,-1
   4a000:	10c00526 	beq	r2,r3,4a018 <_isatty_r+0x44>
   4a004:	dfc00217 	ldw	ra,8(sp)
   4a008:	dc400117 	ldw	r17,4(sp)
   4a00c:	dc000017 	ldw	r16,0(sp)
   4a010:	dec00304 	addi	sp,sp,12
   4a014:	f800283a 	ret
   4a018:	80c00017 	ldw	r3,0(r16)
   4a01c:	183ff926 	beq	r3,zero,4a004 <__alt_data_end+0xfffe2f04>
   4a020:	88c00015 	stw	r3,0(r17)
   4a024:	003ff706 	br	4a004 <__alt_data_end+0xfffe2f04>

0004a028 <_lseek_r>:
   4a028:	defffd04 	addi	sp,sp,-12
   4a02c:	2805883a 	mov	r2,r5
   4a030:	dc000015 	stw	r16,0(sp)
   4a034:	04000174 	movhi	r16,5
   4a038:	dc400115 	stw	r17,4(sp)
   4a03c:	300b883a 	mov	r5,r6
   4a040:	840bf804 	addi	r16,r16,12256
   4a044:	2023883a 	mov	r17,r4
   4a048:	380d883a 	mov	r6,r7
   4a04c:	1009883a 	mov	r4,r2
   4a050:	dfc00215 	stw	ra,8(sp)
   4a054:	80000015 	stw	zero,0(r16)
   4a058:	004d2c80 	call	4d2c8 <lseek>
   4a05c:	00ffffc4 	movi	r3,-1
   4a060:	10c00526 	beq	r2,r3,4a078 <_lseek_r+0x50>
   4a064:	dfc00217 	ldw	ra,8(sp)
   4a068:	dc400117 	ldw	r17,4(sp)
   4a06c:	dc000017 	ldw	r16,0(sp)
   4a070:	dec00304 	addi	sp,sp,12
   4a074:	f800283a 	ret
   4a078:	80c00017 	ldw	r3,0(r16)
   4a07c:	183ff926 	beq	r3,zero,4a064 <__alt_data_end+0xfffe2f64>
   4a080:	88c00015 	stw	r3,0(r17)
   4a084:	003ff706 	br	4a064 <__alt_data_end+0xfffe2f64>

0004a088 <_read_r>:
   4a088:	defffd04 	addi	sp,sp,-12
   4a08c:	2805883a 	mov	r2,r5
   4a090:	dc000015 	stw	r16,0(sp)
   4a094:	04000174 	movhi	r16,5
   4a098:	dc400115 	stw	r17,4(sp)
   4a09c:	300b883a 	mov	r5,r6
   4a0a0:	840bf804 	addi	r16,r16,12256
   4a0a4:	2023883a 	mov	r17,r4
   4a0a8:	380d883a 	mov	r6,r7
   4a0ac:	1009883a 	mov	r4,r2
   4a0b0:	dfc00215 	stw	ra,8(sp)
   4a0b4:	80000015 	stw	zero,0(r16)
   4a0b8:	004d49c0 	call	4d49c <read>
   4a0bc:	00ffffc4 	movi	r3,-1
   4a0c0:	10c00526 	beq	r2,r3,4a0d8 <_read_r+0x50>
   4a0c4:	dfc00217 	ldw	ra,8(sp)
   4a0c8:	dc400117 	ldw	r17,4(sp)
   4a0cc:	dc000017 	ldw	r16,0(sp)
   4a0d0:	dec00304 	addi	sp,sp,12
   4a0d4:	f800283a 	ret
   4a0d8:	80c00017 	ldw	r3,0(r16)
   4a0dc:	183ff926 	beq	r3,zero,4a0c4 <__alt_data_end+0xfffe2fc4>
   4a0e0:	88c00015 	stw	r3,0(r17)
   4a0e4:	003ff706 	br	4a0c4 <__alt_data_end+0xfffe2fc4>

0004a0e8 <__swbuf_r>:
   4a0e8:	defffb04 	addi	sp,sp,-20
   4a0ec:	dcc00315 	stw	r19,12(sp)
   4a0f0:	dc800215 	stw	r18,8(sp)
   4a0f4:	dc000015 	stw	r16,0(sp)
   4a0f8:	dfc00415 	stw	ra,16(sp)
   4a0fc:	dc400115 	stw	r17,4(sp)
   4a100:	2025883a 	mov	r18,r4
   4a104:	2827883a 	mov	r19,r5
   4a108:	3021883a 	mov	r16,r6
   4a10c:	20000226 	beq	r4,zero,4a118 <__swbuf_r+0x30>
   4a110:	20800e17 	ldw	r2,56(r4)
   4a114:	10004226 	beq	r2,zero,4a220 <__swbuf_r+0x138>
   4a118:	80800617 	ldw	r2,24(r16)
   4a11c:	8100030b 	ldhu	r4,12(r16)
   4a120:	80800215 	stw	r2,8(r16)
   4a124:	2080020c 	andi	r2,r4,8
   4a128:	10003626 	beq	r2,zero,4a204 <__swbuf_r+0x11c>
   4a12c:	80c00417 	ldw	r3,16(r16)
   4a130:	18003426 	beq	r3,zero,4a204 <__swbuf_r+0x11c>
   4a134:	2088000c 	andi	r2,r4,8192
   4a138:	9c403fcc 	andi	r17,r19,255
   4a13c:	10001a26 	beq	r2,zero,4a1a8 <__swbuf_r+0xc0>
   4a140:	80800017 	ldw	r2,0(r16)
   4a144:	81000517 	ldw	r4,20(r16)
   4a148:	10c7c83a 	sub	r3,r2,r3
   4a14c:	1900200e 	bge	r3,r4,4a1d0 <__swbuf_r+0xe8>
   4a150:	18c00044 	addi	r3,r3,1
   4a154:	81000217 	ldw	r4,8(r16)
   4a158:	11400044 	addi	r5,r2,1
   4a15c:	81400015 	stw	r5,0(r16)
   4a160:	213fffc4 	addi	r4,r4,-1
   4a164:	81000215 	stw	r4,8(r16)
   4a168:	14c00005 	stb	r19,0(r2)
   4a16c:	80800517 	ldw	r2,20(r16)
   4a170:	10c01e26 	beq	r2,r3,4a1ec <__swbuf_r+0x104>
   4a174:	8080030b 	ldhu	r2,12(r16)
   4a178:	1080004c 	andi	r2,r2,1
   4a17c:	10000226 	beq	r2,zero,4a188 <__swbuf_r+0xa0>
   4a180:	00800284 	movi	r2,10
   4a184:	88801926 	beq	r17,r2,4a1ec <__swbuf_r+0x104>
   4a188:	8805883a 	mov	r2,r17
   4a18c:	dfc00417 	ldw	ra,16(sp)
   4a190:	dcc00317 	ldw	r19,12(sp)
   4a194:	dc800217 	ldw	r18,8(sp)
   4a198:	dc400117 	ldw	r17,4(sp)
   4a19c:	dc000017 	ldw	r16,0(sp)
   4a1a0:	dec00504 	addi	sp,sp,20
   4a1a4:	f800283a 	ret
   4a1a8:	81401917 	ldw	r5,100(r16)
   4a1ac:	00b7ffc4 	movi	r2,-8193
   4a1b0:	21080014 	ori	r4,r4,8192
   4a1b4:	2884703a 	and	r2,r5,r2
   4a1b8:	80801915 	stw	r2,100(r16)
   4a1bc:	80800017 	ldw	r2,0(r16)
   4a1c0:	8100030d 	sth	r4,12(r16)
   4a1c4:	81000517 	ldw	r4,20(r16)
   4a1c8:	10c7c83a 	sub	r3,r2,r3
   4a1cc:	193fe016 	blt	r3,r4,4a150 <__alt_data_end+0xfffe3050>
   4a1d0:	800b883a 	mov	r5,r16
   4a1d4:	9009883a 	mov	r4,r18
   4a1d8:	0044e740 	call	44e74 <_fflush_r>
   4a1dc:	1000071e 	bne	r2,zero,4a1fc <__swbuf_r+0x114>
   4a1e0:	80800017 	ldw	r2,0(r16)
   4a1e4:	00c00044 	movi	r3,1
   4a1e8:	003fda06 	br	4a154 <__alt_data_end+0xfffe3054>
   4a1ec:	800b883a 	mov	r5,r16
   4a1f0:	9009883a 	mov	r4,r18
   4a1f4:	0044e740 	call	44e74 <_fflush_r>
   4a1f8:	103fe326 	beq	r2,zero,4a188 <__alt_data_end+0xfffe3088>
   4a1fc:	00bfffc4 	movi	r2,-1
   4a200:	003fe206 	br	4a18c <__alt_data_end+0xfffe308c>
   4a204:	800b883a 	mov	r5,r16
   4a208:	9009883a 	mov	r4,r18
   4a20c:	004327c0 	call	4327c <__swsetup_r>
   4a210:	103ffa1e 	bne	r2,zero,4a1fc <__alt_data_end+0xfffe30fc>
   4a214:	8100030b 	ldhu	r4,12(r16)
   4a218:	80c00417 	ldw	r3,16(r16)
   4a21c:	003fc506 	br	4a134 <__alt_data_end+0xfffe3034>
   4a220:	00452500 	call	45250 <__sinit>
   4a224:	003fbc06 	br	4a118 <__alt_data_end+0xfffe3018>

0004a228 <__swbuf>:
   4a228:	00800174 	movhi	r2,5
   4a22c:	10852804 	addi	r2,r2,5280
   4a230:	280d883a 	mov	r6,r5
   4a234:	200b883a 	mov	r5,r4
   4a238:	11000017 	ldw	r4,0(r2)
   4a23c:	004a0e81 	jmpi	4a0e8 <__swbuf_r>

0004a240 <_wcrtomb_r>:
   4a240:	defff604 	addi	sp,sp,-40
   4a244:	00800174 	movhi	r2,5
   4a248:	dc800815 	stw	r18,32(sp)
   4a24c:	dc400715 	stw	r17,28(sp)
   4a250:	dc000615 	stw	r16,24(sp)
   4a254:	10852c04 	addi	r2,r2,5296
   4a258:	dfc00915 	stw	ra,36(sp)
   4a25c:	2021883a 	mov	r16,r4
   4a260:	3823883a 	mov	r17,r7
   4a264:	14800017 	ldw	r18,0(r2)
   4a268:	28001426 	beq	r5,zero,4a2bc <_wcrtomb_r+0x7c>
   4a26c:	d9400415 	stw	r5,16(sp)
   4a270:	d9800515 	stw	r6,20(sp)
   4a274:	0045d940 	call	45d94 <__locale_charset>
   4a278:	d9800517 	ldw	r6,20(sp)
   4a27c:	d9400417 	ldw	r5,16(sp)
   4a280:	100f883a 	mov	r7,r2
   4a284:	dc400015 	stw	r17,0(sp)
   4a288:	8009883a 	mov	r4,r16
   4a28c:	903ee83a 	callr	r18
   4a290:	00ffffc4 	movi	r3,-1
   4a294:	10c0031e 	bne	r2,r3,4a2a4 <_wcrtomb_r+0x64>
   4a298:	88000015 	stw	zero,0(r17)
   4a29c:	00c02284 	movi	r3,138
   4a2a0:	80c00015 	stw	r3,0(r16)
   4a2a4:	dfc00917 	ldw	ra,36(sp)
   4a2a8:	dc800817 	ldw	r18,32(sp)
   4a2ac:	dc400717 	ldw	r17,28(sp)
   4a2b0:	dc000617 	ldw	r16,24(sp)
   4a2b4:	dec00a04 	addi	sp,sp,40
   4a2b8:	f800283a 	ret
   4a2bc:	0045d940 	call	45d94 <__locale_charset>
   4a2c0:	100f883a 	mov	r7,r2
   4a2c4:	dc400015 	stw	r17,0(sp)
   4a2c8:	000d883a 	mov	r6,zero
   4a2cc:	d9400104 	addi	r5,sp,4
   4a2d0:	8009883a 	mov	r4,r16
   4a2d4:	903ee83a 	callr	r18
   4a2d8:	003fed06 	br	4a290 <__alt_data_end+0xfffe3190>

0004a2dc <wcrtomb>:
   4a2dc:	defff604 	addi	sp,sp,-40
   4a2e0:	00800174 	movhi	r2,5
   4a2e4:	dc800615 	stw	r18,24(sp)
   4a2e8:	dc400515 	stw	r17,20(sp)
   4a2ec:	10852804 	addi	r2,r2,5280
   4a2f0:	dfc00915 	stw	ra,36(sp)
   4a2f4:	dd000815 	stw	r20,32(sp)
   4a2f8:	dcc00715 	stw	r19,28(sp)
   4a2fc:	dc000415 	stw	r16,16(sp)
   4a300:	3025883a 	mov	r18,r6
   4a304:	14400017 	ldw	r17,0(r2)
   4a308:	20001926 	beq	r4,zero,4a370 <wcrtomb+0x94>
   4a30c:	00800174 	movhi	r2,5
   4a310:	10852c04 	addi	r2,r2,5296
   4a314:	15000017 	ldw	r20,0(r2)
   4a318:	2021883a 	mov	r16,r4
   4a31c:	2827883a 	mov	r19,r5
   4a320:	0045d940 	call	45d94 <__locale_charset>
   4a324:	100f883a 	mov	r7,r2
   4a328:	dc800015 	stw	r18,0(sp)
   4a32c:	980d883a 	mov	r6,r19
   4a330:	800b883a 	mov	r5,r16
   4a334:	8809883a 	mov	r4,r17
   4a338:	a03ee83a 	callr	r20
   4a33c:	00ffffc4 	movi	r3,-1
   4a340:	10c0031e 	bne	r2,r3,4a350 <wcrtomb+0x74>
   4a344:	90000015 	stw	zero,0(r18)
   4a348:	00c02284 	movi	r3,138
   4a34c:	88c00015 	stw	r3,0(r17)
   4a350:	dfc00917 	ldw	ra,36(sp)
   4a354:	dd000817 	ldw	r20,32(sp)
   4a358:	dcc00717 	ldw	r19,28(sp)
   4a35c:	dc800617 	ldw	r18,24(sp)
   4a360:	dc400517 	ldw	r17,20(sp)
   4a364:	dc000417 	ldw	r16,16(sp)
   4a368:	dec00a04 	addi	sp,sp,40
   4a36c:	f800283a 	ret
   4a370:	00800174 	movhi	r2,5
   4a374:	10852c04 	addi	r2,r2,5296
   4a378:	14000017 	ldw	r16,0(r2)
   4a37c:	0045d940 	call	45d94 <__locale_charset>
   4a380:	100f883a 	mov	r7,r2
   4a384:	dc800015 	stw	r18,0(sp)
   4a388:	000d883a 	mov	r6,zero
   4a38c:	d9400104 	addi	r5,sp,4
   4a390:	8809883a 	mov	r4,r17
   4a394:	803ee83a 	callr	r16
   4a398:	003fe806 	br	4a33c <__alt_data_end+0xfffe323c>

0004a39c <__ascii_wctomb>:
   4a39c:	28000526 	beq	r5,zero,4a3b4 <__ascii_wctomb+0x18>
   4a3a0:	00803fc4 	movi	r2,255
   4a3a4:	11800536 	bltu	r2,r6,4a3bc <__ascii_wctomb+0x20>
   4a3a8:	29800005 	stb	r6,0(r5)
   4a3ac:	00800044 	movi	r2,1
   4a3b0:	f800283a 	ret
   4a3b4:	0005883a 	mov	r2,zero
   4a3b8:	f800283a 	ret
   4a3bc:	00802284 	movi	r2,138
   4a3c0:	20800015 	stw	r2,0(r4)
   4a3c4:	00bfffc4 	movi	r2,-1
   4a3c8:	f800283a 	ret

0004a3cc <_wctomb_r>:
   4a3cc:	00800174 	movhi	r2,5
   4a3d0:	defff904 	addi	sp,sp,-28
   4a3d4:	10852c04 	addi	r2,r2,5296
   4a3d8:	dfc00615 	stw	ra,24(sp)
   4a3dc:	dc400515 	stw	r17,20(sp)
   4a3e0:	dc000415 	stw	r16,16(sp)
   4a3e4:	3823883a 	mov	r17,r7
   4a3e8:	14000017 	ldw	r16,0(r2)
   4a3ec:	d9000115 	stw	r4,4(sp)
   4a3f0:	d9400215 	stw	r5,8(sp)
   4a3f4:	d9800315 	stw	r6,12(sp)
   4a3f8:	0045d940 	call	45d94 <__locale_charset>
   4a3fc:	d9800317 	ldw	r6,12(sp)
   4a400:	d9400217 	ldw	r5,8(sp)
   4a404:	d9000117 	ldw	r4,4(sp)
   4a408:	100f883a 	mov	r7,r2
   4a40c:	dc400015 	stw	r17,0(sp)
   4a410:	803ee83a 	callr	r16
   4a414:	dfc00617 	ldw	ra,24(sp)
   4a418:	dc400517 	ldw	r17,20(sp)
   4a41c:	dc000417 	ldw	r16,16(sp)
   4a420:	dec00704 	addi	sp,sp,28
   4a424:	f800283a 	ret

0004a428 <__udivdi3>:
   4a428:	defff504 	addi	sp,sp,-44
   4a42c:	dcc00415 	stw	r19,16(sp)
   4a430:	dc000115 	stw	r16,4(sp)
   4a434:	dfc00a15 	stw	ra,40(sp)
   4a438:	df000915 	stw	fp,36(sp)
   4a43c:	ddc00815 	stw	r23,32(sp)
   4a440:	dd800715 	stw	r22,28(sp)
   4a444:	dd400615 	stw	r21,24(sp)
   4a448:	dd000515 	stw	r20,20(sp)
   4a44c:	dc800315 	stw	r18,12(sp)
   4a450:	dc400215 	stw	r17,8(sp)
   4a454:	2027883a 	mov	r19,r4
   4a458:	2821883a 	mov	r16,r5
   4a45c:	3800411e 	bne	r7,zero,4a564 <__udivdi3+0x13c>
   4a460:	3023883a 	mov	r17,r6
   4a464:	2025883a 	mov	r18,r4
   4a468:	2980522e 	bgeu	r5,r6,4a5b4 <__udivdi3+0x18c>
   4a46c:	00bfffd4 	movui	r2,65535
   4a470:	282d883a 	mov	r22,r5
   4a474:	1180a836 	bltu	r2,r6,4a718 <__udivdi3+0x2f0>
   4a478:	00803fc4 	movi	r2,255
   4a47c:	1185803a 	cmpltu	r2,r2,r6
   4a480:	100490fa 	slli	r2,r2,3
   4a484:	3086d83a 	srl	r3,r6,r2
   4a488:	01000174 	movhi	r4,5
   4a48c:	213dbdc4 	addi	r4,r4,-2313
   4a490:	20c7883a 	add	r3,r4,r3
   4a494:	18c00003 	ldbu	r3,0(r3)
   4a498:	1885883a 	add	r2,r3,r2
   4a49c:	00c00804 	movi	r3,32
   4a4a0:	1887c83a 	sub	r3,r3,r2
   4a4a4:	18000526 	beq	r3,zero,4a4bc <__udivdi3+0x94>
   4a4a8:	80e0983a 	sll	r16,r16,r3
   4a4ac:	9884d83a 	srl	r2,r19,r2
   4a4b0:	30e2983a 	sll	r17,r6,r3
   4a4b4:	98e4983a 	sll	r18,r19,r3
   4a4b8:	142cb03a 	or	r22,r2,r16
   4a4bc:	882ad43a 	srli	r21,r17,16
   4a4c0:	b009883a 	mov	r4,r22
   4a4c4:	8d3fffcc 	andi	r20,r17,65535
   4a4c8:	a80b883a 	mov	r5,r21
   4a4cc:	004b0340 	call	4b034 <__umodsi3>
   4a4d0:	b009883a 	mov	r4,r22
   4a4d4:	a80b883a 	mov	r5,r21
   4a4d8:	1027883a 	mov	r19,r2
   4a4dc:	004afd00 	call	4afd0 <__udivsi3>
   4a4e0:	102d883a 	mov	r22,r2
   4a4e4:	9826943a 	slli	r19,r19,16
   4a4e8:	9004d43a 	srli	r2,r18,16
   4a4ec:	a5a1383a 	mul	r16,r20,r22
   4a4f0:	14c4b03a 	or	r2,r2,r19
   4a4f4:	1400052e 	bgeu	r2,r16,4a50c <__udivdi3+0xe4>
   4a4f8:	1445883a 	add	r2,r2,r17
   4a4fc:	b0ffffc4 	addi	r3,r22,-1
   4a500:	14400136 	bltu	r2,r17,4a508 <__udivdi3+0xe0>
   4a504:	14012336 	bltu	r2,r16,4a994 <__udivdi3+0x56c>
   4a508:	182d883a 	mov	r22,r3
   4a50c:	1421c83a 	sub	r16,r2,r16
   4a510:	a80b883a 	mov	r5,r21
   4a514:	8009883a 	mov	r4,r16
   4a518:	004b0340 	call	4b034 <__umodsi3>
   4a51c:	1027883a 	mov	r19,r2
   4a520:	a80b883a 	mov	r5,r21
   4a524:	8009883a 	mov	r4,r16
   4a528:	004afd00 	call	4afd0 <__udivsi3>
   4a52c:	9826943a 	slli	r19,r19,16
   4a530:	a0a9383a 	mul	r20,r20,r2
   4a534:	94bfffcc 	andi	r18,r18,65535
   4a538:	94e4b03a 	or	r18,r18,r19
   4a53c:	9500052e 	bgeu	r18,r20,4a554 <__udivdi3+0x12c>
   4a540:	8ca5883a 	add	r18,r17,r18
   4a544:	10ffffc4 	addi	r3,r2,-1
   4a548:	9440f136 	bltu	r18,r17,4a910 <__udivdi3+0x4e8>
   4a54c:	9500f02e 	bgeu	r18,r20,4a910 <__udivdi3+0x4e8>
   4a550:	10bfff84 	addi	r2,r2,-2
   4a554:	b00c943a 	slli	r6,r22,16
   4a558:	0007883a 	mov	r3,zero
   4a55c:	3084b03a 	or	r2,r6,r2
   4a560:	00005906 	br	4a6c8 <__udivdi3+0x2a0>
   4a564:	29c05636 	bltu	r5,r7,4a6c0 <__udivdi3+0x298>
   4a568:	00bfffd4 	movui	r2,65535
   4a56c:	11c0622e 	bgeu	r2,r7,4a6f8 <__udivdi3+0x2d0>
   4a570:	00804034 	movhi	r2,256
   4a574:	10bfffc4 	addi	r2,r2,-1
   4a578:	11c0ee36 	bltu	r2,r7,4a934 <__udivdi3+0x50c>
   4a57c:	00800404 	movi	r2,16
   4a580:	3886d83a 	srl	r3,r7,r2
   4a584:	01000174 	movhi	r4,5
   4a588:	213dbdc4 	addi	r4,r4,-2313
   4a58c:	20c7883a 	add	r3,r4,r3
   4a590:	18c00003 	ldbu	r3,0(r3)
   4a594:	05400804 	movi	r21,32
   4a598:	1885883a 	add	r2,r3,r2
   4a59c:	a8abc83a 	sub	r21,r21,r2
   4a5a0:	a800621e 	bne	r21,zero,4a72c <__udivdi3+0x304>
   4a5a4:	3c00e936 	bltu	r7,r16,4a94c <__udivdi3+0x524>
   4a5a8:	9985403a 	cmpgeu	r2,r19,r6
   4a5ac:	0007883a 	mov	r3,zero
   4a5b0:	00004506 	br	4a6c8 <__udivdi3+0x2a0>
   4a5b4:	3000041e 	bne	r6,zero,4a5c8 <__udivdi3+0x1a0>
   4a5b8:	000b883a 	mov	r5,zero
   4a5bc:	01000044 	movi	r4,1
   4a5c0:	004afd00 	call	4afd0 <__udivsi3>
   4a5c4:	1023883a 	mov	r17,r2
   4a5c8:	00bfffd4 	movui	r2,65535
   4a5cc:	14404e2e 	bgeu	r2,r17,4a708 <__udivdi3+0x2e0>
   4a5d0:	00804034 	movhi	r2,256
   4a5d4:	10bfffc4 	addi	r2,r2,-1
   4a5d8:	1440d836 	bltu	r2,r17,4a93c <__udivdi3+0x514>
   4a5dc:	00800404 	movi	r2,16
   4a5e0:	8886d83a 	srl	r3,r17,r2
   4a5e4:	01000174 	movhi	r4,5
   4a5e8:	213dbdc4 	addi	r4,r4,-2313
   4a5ec:	20c7883a 	add	r3,r4,r3
   4a5f0:	18c00003 	ldbu	r3,0(r3)
   4a5f4:	1885883a 	add	r2,r3,r2
   4a5f8:	00c00804 	movi	r3,32
   4a5fc:	1887c83a 	sub	r3,r3,r2
   4a600:	18008f1e 	bne	r3,zero,4a840 <__udivdi3+0x418>
   4a604:	882ad43a 	srli	r21,r17,16
   4a608:	8461c83a 	sub	r16,r16,r17
   4a60c:	8d3fffcc 	andi	r20,r17,65535
   4a610:	00c00044 	movi	r3,1
   4a614:	8009883a 	mov	r4,r16
   4a618:	a80b883a 	mov	r5,r21
   4a61c:	d8c00015 	stw	r3,0(sp)
   4a620:	004b0340 	call	4b034 <__umodsi3>
   4a624:	8009883a 	mov	r4,r16
   4a628:	a80b883a 	mov	r5,r21
   4a62c:	1027883a 	mov	r19,r2
   4a630:	004afd00 	call	4afd0 <__udivsi3>
   4a634:	9826943a 	slli	r19,r19,16
   4a638:	9008d43a 	srli	r4,r18,16
   4a63c:	1521383a 	mul	r16,r2,r20
   4a640:	102d883a 	mov	r22,r2
   4a644:	24c8b03a 	or	r4,r4,r19
   4a648:	d8c00017 	ldw	r3,0(sp)
   4a64c:	2400052e 	bgeu	r4,r16,4a664 <__udivdi3+0x23c>
   4a650:	2449883a 	add	r4,r4,r17
   4a654:	b0bfffc4 	addi	r2,r22,-1
   4a658:	24400136 	bltu	r4,r17,4a660 <__udivdi3+0x238>
   4a65c:	2400ca36 	bltu	r4,r16,4a988 <__udivdi3+0x560>
   4a660:	102d883a 	mov	r22,r2
   4a664:	2421c83a 	sub	r16,r4,r16
   4a668:	a80b883a 	mov	r5,r21
   4a66c:	8009883a 	mov	r4,r16
   4a670:	d8c00015 	stw	r3,0(sp)
   4a674:	004b0340 	call	4b034 <__umodsi3>
   4a678:	1027883a 	mov	r19,r2
   4a67c:	a80b883a 	mov	r5,r21
   4a680:	8009883a 	mov	r4,r16
   4a684:	004afd00 	call	4afd0 <__udivsi3>
   4a688:	9826943a 	slli	r19,r19,16
   4a68c:	1529383a 	mul	r20,r2,r20
   4a690:	94bfffcc 	andi	r18,r18,65535
   4a694:	94e4b03a 	or	r18,r18,r19
   4a698:	d8c00017 	ldw	r3,0(sp)
   4a69c:	9500052e 	bgeu	r18,r20,4a6b4 <__udivdi3+0x28c>
   4a6a0:	8ca5883a 	add	r18,r17,r18
   4a6a4:	113fffc4 	addi	r4,r2,-1
   4a6a8:	94409736 	bltu	r18,r17,4a908 <__udivdi3+0x4e0>
   4a6ac:	9500962e 	bgeu	r18,r20,4a908 <__udivdi3+0x4e0>
   4a6b0:	10bfff84 	addi	r2,r2,-2
   4a6b4:	b00c943a 	slli	r6,r22,16
   4a6b8:	3084b03a 	or	r2,r6,r2
   4a6bc:	00000206 	br	4a6c8 <__udivdi3+0x2a0>
   4a6c0:	0007883a 	mov	r3,zero
   4a6c4:	0005883a 	mov	r2,zero
   4a6c8:	dfc00a17 	ldw	ra,40(sp)
   4a6cc:	df000917 	ldw	fp,36(sp)
   4a6d0:	ddc00817 	ldw	r23,32(sp)
   4a6d4:	dd800717 	ldw	r22,28(sp)
   4a6d8:	dd400617 	ldw	r21,24(sp)
   4a6dc:	dd000517 	ldw	r20,20(sp)
   4a6e0:	dcc00417 	ldw	r19,16(sp)
   4a6e4:	dc800317 	ldw	r18,12(sp)
   4a6e8:	dc400217 	ldw	r17,8(sp)
   4a6ec:	dc000117 	ldw	r16,4(sp)
   4a6f0:	dec00b04 	addi	sp,sp,44
   4a6f4:	f800283a 	ret
   4a6f8:	00803fc4 	movi	r2,255
   4a6fc:	11c5803a 	cmpltu	r2,r2,r7
   4a700:	100490fa 	slli	r2,r2,3
   4a704:	003f9e06 	br	4a580 <__alt_data_end+0xfffe3480>
   4a708:	00803fc4 	movi	r2,255
   4a70c:	1445803a 	cmpltu	r2,r2,r17
   4a710:	100490fa 	slli	r2,r2,3
   4a714:	003fb206 	br	4a5e0 <__alt_data_end+0xfffe34e0>
   4a718:	00804034 	movhi	r2,256
   4a71c:	10bfffc4 	addi	r2,r2,-1
   4a720:	11808836 	bltu	r2,r6,4a944 <__udivdi3+0x51c>
   4a724:	00800404 	movi	r2,16
   4a728:	003f5606 	br	4a484 <__alt_data_end+0xfffe3384>
   4a72c:	30aed83a 	srl	r23,r6,r2
   4a730:	3d4e983a 	sll	r7,r7,r21
   4a734:	80acd83a 	srl	r22,r16,r2
   4a738:	9884d83a 	srl	r2,r19,r2
   4a73c:	3deeb03a 	or	r23,r7,r23
   4a740:	b824d43a 	srli	r18,r23,16
   4a744:	8560983a 	sll	r16,r16,r21
   4a748:	b009883a 	mov	r4,r22
   4a74c:	900b883a 	mov	r5,r18
   4a750:	3568983a 	sll	r20,r6,r21
   4a754:	1420b03a 	or	r16,r2,r16
   4a758:	004b0340 	call	4b034 <__umodsi3>
   4a75c:	b009883a 	mov	r4,r22
   4a760:	900b883a 	mov	r5,r18
   4a764:	1023883a 	mov	r17,r2
   4a768:	004afd00 	call	4afd0 <__udivsi3>
   4a76c:	8808943a 	slli	r4,r17,16
   4a770:	bf3fffcc 	andi	fp,r23,65535
   4a774:	8006d43a 	srli	r3,r16,16
   4a778:	e0a3383a 	mul	r17,fp,r2
   4a77c:	100d883a 	mov	r6,r2
   4a780:	1906b03a 	or	r3,r3,r4
   4a784:	1c40042e 	bgeu	r3,r17,4a798 <__udivdi3+0x370>
   4a788:	1dc7883a 	add	r3,r3,r23
   4a78c:	10bfffc4 	addi	r2,r2,-1
   4a790:	1dc0752e 	bgeu	r3,r23,4a968 <__udivdi3+0x540>
   4a794:	100d883a 	mov	r6,r2
   4a798:	1c63c83a 	sub	r17,r3,r17
   4a79c:	900b883a 	mov	r5,r18
   4a7a0:	8809883a 	mov	r4,r17
   4a7a4:	d9800015 	stw	r6,0(sp)
   4a7a8:	004b0340 	call	4b034 <__umodsi3>
   4a7ac:	102d883a 	mov	r22,r2
   4a7b0:	8809883a 	mov	r4,r17
   4a7b4:	900b883a 	mov	r5,r18
   4a7b8:	004afd00 	call	4afd0 <__udivsi3>
   4a7bc:	b02c943a 	slli	r22,r22,16
   4a7c0:	e089383a 	mul	r4,fp,r2
   4a7c4:	843fffcc 	andi	r16,r16,65535
   4a7c8:	85a0b03a 	or	r16,r16,r22
   4a7cc:	d9800017 	ldw	r6,0(sp)
   4a7d0:	8100042e 	bgeu	r16,r4,4a7e4 <__udivdi3+0x3bc>
   4a7d4:	85e1883a 	add	r16,r16,r23
   4a7d8:	10ffffc4 	addi	r3,r2,-1
   4a7dc:	85c05e2e 	bgeu	r16,r23,4a958 <__udivdi3+0x530>
   4a7e0:	1805883a 	mov	r2,r3
   4a7e4:	300c943a 	slli	r6,r6,16
   4a7e8:	a17fffcc 	andi	r5,r20,65535
   4a7ec:	a028d43a 	srli	r20,r20,16
   4a7f0:	3084b03a 	or	r2,r6,r2
   4a7f4:	10ffffcc 	andi	r3,r2,65535
   4a7f8:	100cd43a 	srli	r6,r2,16
   4a7fc:	194f383a 	mul	r7,r3,r5
   4a800:	1d07383a 	mul	r3,r3,r20
   4a804:	314b383a 	mul	r5,r6,r5
   4a808:	3810d43a 	srli	r8,r7,16
   4a80c:	8121c83a 	sub	r16,r16,r4
   4a810:	1947883a 	add	r3,r3,r5
   4a814:	40c7883a 	add	r3,r8,r3
   4a818:	350d383a 	mul	r6,r6,r20
   4a81c:	1940022e 	bgeu	r3,r5,4a828 <__udivdi3+0x400>
   4a820:	01000074 	movhi	r4,1
   4a824:	310d883a 	add	r6,r6,r4
   4a828:	1828d43a 	srli	r20,r3,16
   4a82c:	a18d883a 	add	r6,r20,r6
   4a830:	81803e36 	bltu	r16,r6,4a92c <__udivdi3+0x504>
   4a834:	81803826 	beq	r16,r6,4a918 <__udivdi3+0x4f0>
   4a838:	0007883a 	mov	r3,zero
   4a83c:	003fa206 	br	4a6c8 <__alt_data_end+0xfffe35c8>
   4a840:	88e2983a 	sll	r17,r17,r3
   4a844:	80a8d83a 	srl	r20,r16,r2
   4a848:	80e0983a 	sll	r16,r16,r3
   4a84c:	882ad43a 	srli	r21,r17,16
   4a850:	9884d83a 	srl	r2,r19,r2
   4a854:	a009883a 	mov	r4,r20
   4a858:	a80b883a 	mov	r5,r21
   4a85c:	142eb03a 	or	r23,r2,r16
   4a860:	98e4983a 	sll	r18,r19,r3
   4a864:	004b0340 	call	4b034 <__umodsi3>
   4a868:	a009883a 	mov	r4,r20
   4a86c:	a80b883a 	mov	r5,r21
   4a870:	1021883a 	mov	r16,r2
   4a874:	004afd00 	call	4afd0 <__udivsi3>
   4a878:	1039883a 	mov	fp,r2
   4a87c:	8d3fffcc 	andi	r20,r17,65535
   4a880:	8020943a 	slli	r16,r16,16
   4a884:	b804d43a 	srli	r2,r23,16
   4a888:	a72d383a 	mul	r22,r20,fp
   4a88c:	1404b03a 	or	r2,r2,r16
   4a890:	1580062e 	bgeu	r2,r22,4a8ac <__udivdi3+0x484>
   4a894:	1445883a 	add	r2,r2,r17
   4a898:	e0ffffc4 	addi	r3,fp,-1
   4a89c:	14403836 	bltu	r2,r17,4a980 <__udivdi3+0x558>
   4a8a0:	1580372e 	bgeu	r2,r22,4a980 <__udivdi3+0x558>
   4a8a4:	e73fff84 	addi	fp,fp,-2
   4a8a8:	1445883a 	add	r2,r2,r17
   4a8ac:	15adc83a 	sub	r22,r2,r22
   4a8b0:	a80b883a 	mov	r5,r21
   4a8b4:	b009883a 	mov	r4,r22
   4a8b8:	004b0340 	call	4b034 <__umodsi3>
   4a8bc:	1027883a 	mov	r19,r2
   4a8c0:	b009883a 	mov	r4,r22
   4a8c4:	a80b883a 	mov	r5,r21
   4a8c8:	004afd00 	call	4afd0 <__udivsi3>
   4a8cc:	9826943a 	slli	r19,r19,16
   4a8d0:	a0a1383a 	mul	r16,r20,r2
   4a8d4:	b93fffcc 	andi	r4,r23,65535
   4a8d8:	24c8b03a 	or	r4,r4,r19
   4a8dc:	2400062e 	bgeu	r4,r16,4a8f8 <__udivdi3+0x4d0>
   4a8e0:	2449883a 	add	r4,r4,r17
   4a8e4:	10ffffc4 	addi	r3,r2,-1
   4a8e8:	24402336 	bltu	r4,r17,4a978 <__udivdi3+0x550>
   4a8ec:	2400222e 	bgeu	r4,r16,4a978 <__udivdi3+0x550>
   4a8f0:	10bfff84 	addi	r2,r2,-2
   4a8f4:	2449883a 	add	r4,r4,r17
   4a8f8:	e038943a 	slli	fp,fp,16
   4a8fc:	2421c83a 	sub	r16,r4,r16
   4a900:	e086b03a 	or	r3,fp,r2
   4a904:	003f4306 	br	4a614 <__alt_data_end+0xfffe3514>
   4a908:	2005883a 	mov	r2,r4
   4a90c:	003f6906 	br	4a6b4 <__alt_data_end+0xfffe35b4>
   4a910:	1805883a 	mov	r2,r3
   4a914:	003f0f06 	br	4a554 <__alt_data_end+0xfffe3454>
   4a918:	1806943a 	slli	r3,r3,16
   4a91c:	9d66983a 	sll	r19,r19,r21
   4a920:	39ffffcc 	andi	r7,r7,65535
   4a924:	19c7883a 	add	r3,r3,r7
   4a928:	98ffc32e 	bgeu	r19,r3,4a838 <__alt_data_end+0xfffe3738>
   4a92c:	10bfffc4 	addi	r2,r2,-1
   4a930:	003fc106 	br	4a838 <__alt_data_end+0xfffe3738>
   4a934:	00800604 	movi	r2,24
   4a938:	003f1106 	br	4a580 <__alt_data_end+0xfffe3480>
   4a93c:	00800604 	movi	r2,24
   4a940:	003f2706 	br	4a5e0 <__alt_data_end+0xfffe34e0>
   4a944:	00800604 	movi	r2,24
   4a948:	003ece06 	br	4a484 <__alt_data_end+0xfffe3384>
   4a94c:	0007883a 	mov	r3,zero
   4a950:	00800044 	movi	r2,1
   4a954:	003f5c06 	br	4a6c8 <__alt_data_end+0xfffe35c8>
   4a958:	813fa12e 	bgeu	r16,r4,4a7e0 <__alt_data_end+0xfffe36e0>
   4a95c:	10bfff84 	addi	r2,r2,-2
   4a960:	85e1883a 	add	r16,r16,r23
   4a964:	003f9f06 	br	4a7e4 <__alt_data_end+0xfffe36e4>
   4a968:	1c7f8a2e 	bgeu	r3,r17,4a794 <__alt_data_end+0xfffe3694>
   4a96c:	31bfff84 	addi	r6,r6,-2
   4a970:	1dc7883a 	add	r3,r3,r23
   4a974:	003f8806 	br	4a798 <__alt_data_end+0xfffe3698>
   4a978:	1805883a 	mov	r2,r3
   4a97c:	003fde06 	br	4a8f8 <__alt_data_end+0xfffe37f8>
   4a980:	1839883a 	mov	fp,r3
   4a984:	003fc906 	br	4a8ac <__alt_data_end+0xfffe37ac>
   4a988:	b5bfff84 	addi	r22,r22,-2
   4a98c:	2449883a 	add	r4,r4,r17
   4a990:	003f3406 	br	4a664 <__alt_data_end+0xfffe3564>
   4a994:	b5bfff84 	addi	r22,r22,-2
   4a998:	1445883a 	add	r2,r2,r17
   4a99c:	003edb06 	br	4a50c <__alt_data_end+0xfffe340c>

0004a9a0 <__umoddi3>:
   4a9a0:	defff404 	addi	sp,sp,-48
   4a9a4:	df000a15 	stw	fp,40(sp)
   4a9a8:	dc400315 	stw	r17,12(sp)
   4a9ac:	dc000215 	stw	r16,8(sp)
   4a9b0:	dfc00b15 	stw	ra,44(sp)
   4a9b4:	ddc00915 	stw	r23,36(sp)
   4a9b8:	dd800815 	stw	r22,32(sp)
   4a9bc:	dd400715 	stw	r21,28(sp)
   4a9c0:	dd000615 	stw	r20,24(sp)
   4a9c4:	dcc00515 	stw	r19,20(sp)
   4a9c8:	dc800415 	stw	r18,16(sp)
   4a9cc:	2021883a 	mov	r16,r4
   4a9d0:	2823883a 	mov	r17,r5
   4a9d4:	2839883a 	mov	fp,r5
   4a9d8:	38003c1e 	bne	r7,zero,4aacc <__umoddi3+0x12c>
   4a9dc:	3027883a 	mov	r19,r6
   4a9e0:	2029883a 	mov	r20,r4
   4a9e4:	2980512e 	bgeu	r5,r6,4ab2c <__umoddi3+0x18c>
   4a9e8:	00bfffd4 	movui	r2,65535
   4a9ec:	11809a36 	bltu	r2,r6,4ac58 <__umoddi3+0x2b8>
   4a9f0:	01003fc4 	movi	r4,255
   4a9f4:	2189803a 	cmpltu	r4,r4,r6
   4a9f8:	200890fa 	slli	r4,r4,3
   4a9fc:	3104d83a 	srl	r2,r6,r4
   4aa00:	00c00174 	movhi	r3,5
   4aa04:	18fdbdc4 	addi	r3,r3,-2313
   4aa08:	1885883a 	add	r2,r3,r2
   4aa0c:	10c00003 	ldbu	r3,0(r2)
   4aa10:	00800804 	movi	r2,32
   4aa14:	1909883a 	add	r4,r3,r4
   4aa18:	1125c83a 	sub	r18,r2,r4
   4aa1c:	90000526 	beq	r18,zero,4aa34 <__umoddi3+0x94>
   4aa20:	8ca2983a 	sll	r17,r17,r18
   4aa24:	8108d83a 	srl	r4,r16,r4
   4aa28:	34a6983a 	sll	r19,r6,r18
   4aa2c:	84a8983a 	sll	r20,r16,r18
   4aa30:	2478b03a 	or	fp,r4,r17
   4aa34:	982ed43a 	srli	r23,r19,16
   4aa38:	e009883a 	mov	r4,fp
   4aa3c:	9dbfffcc 	andi	r22,r19,65535
   4aa40:	b80b883a 	mov	r5,r23
   4aa44:	004b0340 	call	4b034 <__umodsi3>
   4aa48:	e009883a 	mov	r4,fp
   4aa4c:	b80b883a 	mov	r5,r23
   4aa50:	102b883a 	mov	r21,r2
   4aa54:	004afd00 	call	4afd0 <__udivsi3>
   4aa58:	a806943a 	slli	r3,r21,16
   4aa5c:	a008d43a 	srli	r4,r20,16
   4aa60:	b085383a 	mul	r2,r22,r2
   4aa64:	20c8b03a 	or	r4,r4,r3
   4aa68:	2080032e 	bgeu	r4,r2,4aa78 <__umoddi3+0xd8>
   4aa6c:	24c9883a 	add	r4,r4,r19
   4aa70:	24c00136 	bltu	r4,r19,4aa78 <__umoddi3+0xd8>
   4aa74:	20811036 	bltu	r4,r2,4aeb8 <__umoddi3+0x518>
   4aa78:	20abc83a 	sub	r21,r4,r2
   4aa7c:	b80b883a 	mov	r5,r23
   4aa80:	a809883a 	mov	r4,r21
   4aa84:	004b0340 	call	4b034 <__umodsi3>
   4aa88:	1023883a 	mov	r17,r2
   4aa8c:	b80b883a 	mov	r5,r23
   4aa90:	a809883a 	mov	r4,r21
   4aa94:	004afd00 	call	4afd0 <__udivsi3>
   4aa98:	8822943a 	slli	r17,r17,16
   4aa9c:	b085383a 	mul	r2,r22,r2
   4aaa0:	a0ffffcc 	andi	r3,r20,65535
   4aaa4:	1c46b03a 	or	r3,r3,r17
   4aaa8:	1880042e 	bgeu	r3,r2,4aabc <__umoddi3+0x11c>
   4aaac:	1cc7883a 	add	r3,r3,r19
   4aab0:	1cc00236 	bltu	r3,r19,4aabc <__umoddi3+0x11c>
   4aab4:	1880012e 	bgeu	r3,r2,4aabc <__umoddi3+0x11c>
   4aab8:	1cc7883a 	add	r3,r3,r19
   4aabc:	1885c83a 	sub	r2,r3,r2
   4aac0:	1484d83a 	srl	r2,r2,r18
   4aac4:	0007883a 	mov	r3,zero
   4aac8:	00004f06 	br	4ac08 <__umoddi3+0x268>
   4aacc:	29c04c36 	bltu	r5,r7,4ac00 <__umoddi3+0x260>
   4aad0:	00bfffd4 	movui	r2,65535
   4aad4:	11c0582e 	bgeu	r2,r7,4ac38 <__umoddi3+0x298>
   4aad8:	00804034 	movhi	r2,256
   4aadc:	10bfffc4 	addi	r2,r2,-1
   4aae0:	11c0e736 	bltu	r2,r7,4ae80 <__umoddi3+0x4e0>
   4aae4:	01000404 	movi	r4,16
   4aae8:	3904d83a 	srl	r2,r7,r4
   4aaec:	00c00174 	movhi	r3,5
   4aaf0:	18fdbdc4 	addi	r3,r3,-2313
   4aaf4:	1885883a 	add	r2,r3,r2
   4aaf8:	14c00003 	ldbu	r19,0(r2)
   4aafc:	00c00804 	movi	r3,32
   4ab00:	9927883a 	add	r19,r19,r4
   4ab04:	1ce9c83a 	sub	r20,r3,r19
   4ab08:	a000581e 	bne	r20,zero,4ac6c <__umoddi3+0x2cc>
   4ab0c:	3c400136 	bltu	r7,r17,4ab14 <__umoddi3+0x174>
   4ab10:	8180eb36 	bltu	r16,r6,4aec0 <__umoddi3+0x520>
   4ab14:	8185c83a 	sub	r2,r16,r6
   4ab18:	89e3c83a 	sub	r17,r17,r7
   4ab1c:	8089803a 	cmpltu	r4,r16,r2
   4ab20:	8939c83a 	sub	fp,r17,r4
   4ab24:	e007883a 	mov	r3,fp
   4ab28:	00003706 	br	4ac08 <__umoddi3+0x268>
   4ab2c:	3000041e 	bne	r6,zero,4ab40 <__umoddi3+0x1a0>
   4ab30:	000b883a 	mov	r5,zero
   4ab34:	01000044 	movi	r4,1
   4ab38:	004afd00 	call	4afd0 <__udivsi3>
   4ab3c:	1027883a 	mov	r19,r2
   4ab40:	00bfffd4 	movui	r2,65535
   4ab44:	14c0402e 	bgeu	r2,r19,4ac48 <__umoddi3+0x2a8>
   4ab48:	00804034 	movhi	r2,256
   4ab4c:	10bfffc4 	addi	r2,r2,-1
   4ab50:	14c0cd36 	bltu	r2,r19,4ae88 <__umoddi3+0x4e8>
   4ab54:	00800404 	movi	r2,16
   4ab58:	9886d83a 	srl	r3,r19,r2
   4ab5c:	01000174 	movhi	r4,5
   4ab60:	213dbdc4 	addi	r4,r4,-2313
   4ab64:	20c7883a 	add	r3,r4,r3
   4ab68:	18c00003 	ldbu	r3,0(r3)
   4ab6c:	1887883a 	add	r3,r3,r2
   4ab70:	00800804 	movi	r2,32
   4ab74:	10e5c83a 	sub	r18,r2,r3
   4ab78:	9000901e 	bne	r18,zero,4adbc <__umoddi3+0x41c>
   4ab7c:	982cd43a 	srli	r22,r19,16
   4ab80:	8ce3c83a 	sub	r17,r17,r19
   4ab84:	9d7fffcc 	andi	r21,r19,65535
   4ab88:	b00b883a 	mov	r5,r22
   4ab8c:	8809883a 	mov	r4,r17
   4ab90:	004b0340 	call	4b034 <__umodsi3>
   4ab94:	8809883a 	mov	r4,r17
   4ab98:	b00b883a 	mov	r5,r22
   4ab9c:	1021883a 	mov	r16,r2
   4aba0:	004afd00 	call	4afd0 <__udivsi3>
   4aba4:	8006943a 	slli	r3,r16,16
   4aba8:	a008d43a 	srli	r4,r20,16
   4abac:	1545383a 	mul	r2,r2,r21
   4abb0:	20c8b03a 	or	r4,r4,r3
   4abb4:	2080042e 	bgeu	r4,r2,4abc8 <__umoddi3+0x228>
   4abb8:	24c9883a 	add	r4,r4,r19
   4abbc:	24c00236 	bltu	r4,r19,4abc8 <__umoddi3+0x228>
   4abc0:	2080012e 	bgeu	r4,r2,4abc8 <__umoddi3+0x228>
   4abc4:	24c9883a 	add	r4,r4,r19
   4abc8:	20a1c83a 	sub	r16,r4,r2
   4abcc:	b00b883a 	mov	r5,r22
   4abd0:	8009883a 	mov	r4,r16
   4abd4:	004b0340 	call	4b034 <__umodsi3>
   4abd8:	1023883a 	mov	r17,r2
   4abdc:	b00b883a 	mov	r5,r22
   4abe0:	8009883a 	mov	r4,r16
   4abe4:	004afd00 	call	4afd0 <__udivsi3>
   4abe8:	8822943a 	slli	r17,r17,16
   4abec:	1545383a 	mul	r2,r2,r21
   4abf0:	a53fffcc 	andi	r20,r20,65535
   4abf4:	a446b03a 	or	r3,r20,r17
   4abf8:	18bfb02e 	bgeu	r3,r2,4aabc <__alt_data_end+0xfffe39bc>
   4abfc:	003fab06 	br	4aaac <__alt_data_end+0xfffe39ac>
   4ac00:	2005883a 	mov	r2,r4
   4ac04:	2807883a 	mov	r3,r5
   4ac08:	dfc00b17 	ldw	ra,44(sp)
   4ac0c:	df000a17 	ldw	fp,40(sp)
   4ac10:	ddc00917 	ldw	r23,36(sp)
   4ac14:	dd800817 	ldw	r22,32(sp)
   4ac18:	dd400717 	ldw	r21,28(sp)
   4ac1c:	dd000617 	ldw	r20,24(sp)
   4ac20:	dcc00517 	ldw	r19,20(sp)
   4ac24:	dc800417 	ldw	r18,16(sp)
   4ac28:	dc400317 	ldw	r17,12(sp)
   4ac2c:	dc000217 	ldw	r16,8(sp)
   4ac30:	dec00c04 	addi	sp,sp,48
   4ac34:	f800283a 	ret
   4ac38:	04c03fc4 	movi	r19,255
   4ac3c:	99c9803a 	cmpltu	r4,r19,r7
   4ac40:	200890fa 	slli	r4,r4,3
   4ac44:	003fa806 	br	4aae8 <__alt_data_end+0xfffe39e8>
   4ac48:	00803fc4 	movi	r2,255
   4ac4c:	14c5803a 	cmpltu	r2,r2,r19
   4ac50:	100490fa 	slli	r2,r2,3
   4ac54:	003fc006 	br	4ab58 <__alt_data_end+0xfffe3a58>
   4ac58:	00804034 	movhi	r2,256
   4ac5c:	10bfffc4 	addi	r2,r2,-1
   4ac60:	11808b36 	bltu	r2,r6,4ae90 <__umoddi3+0x4f0>
   4ac64:	01000404 	movi	r4,16
   4ac68:	003f6406 	br	4a9fc <__alt_data_end+0xfffe38fc>
   4ac6c:	34c4d83a 	srl	r2,r6,r19
   4ac70:	3d0e983a 	sll	r7,r7,r20
   4ac74:	8cf8d83a 	srl	fp,r17,r19
   4ac78:	8d10983a 	sll	r8,r17,r20
   4ac7c:	38aab03a 	or	r21,r7,r2
   4ac80:	a82cd43a 	srli	r22,r21,16
   4ac84:	84e2d83a 	srl	r17,r16,r19
   4ac88:	e009883a 	mov	r4,fp
   4ac8c:	b00b883a 	mov	r5,r22
   4ac90:	8a22b03a 	or	r17,r17,r8
   4ac94:	3524983a 	sll	r18,r6,r20
   4ac98:	004b0340 	call	4b034 <__umodsi3>
   4ac9c:	e009883a 	mov	r4,fp
   4aca0:	b00b883a 	mov	r5,r22
   4aca4:	102f883a 	mov	r23,r2
   4aca8:	004afd00 	call	4afd0 <__udivsi3>
   4acac:	100d883a 	mov	r6,r2
   4acb0:	b808943a 	slli	r4,r23,16
   4acb4:	aa3fffcc 	andi	r8,r21,65535
   4acb8:	8804d43a 	srli	r2,r17,16
   4acbc:	41af383a 	mul	r23,r8,r6
   4acc0:	8520983a 	sll	r16,r16,r20
   4acc4:	1104b03a 	or	r2,r2,r4
   4acc8:	15c0042e 	bgeu	r2,r23,4acdc <__umoddi3+0x33c>
   4accc:	1545883a 	add	r2,r2,r21
   4acd0:	30ffffc4 	addi	r3,r6,-1
   4acd4:	1540742e 	bgeu	r2,r21,4aea8 <__umoddi3+0x508>
   4acd8:	180d883a 	mov	r6,r3
   4acdc:	15efc83a 	sub	r23,r2,r23
   4ace0:	b00b883a 	mov	r5,r22
   4ace4:	b809883a 	mov	r4,r23
   4ace8:	d9800115 	stw	r6,4(sp)
   4acec:	da000015 	stw	r8,0(sp)
   4acf0:	004b0340 	call	4b034 <__umodsi3>
   4acf4:	b00b883a 	mov	r5,r22
   4acf8:	b809883a 	mov	r4,r23
   4acfc:	1039883a 	mov	fp,r2
   4ad00:	004afd00 	call	4afd0 <__udivsi3>
   4ad04:	da000017 	ldw	r8,0(sp)
   4ad08:	e038943a 	slli	fp,fp,16
   4ad0c:	100b883a 	mov	r5,r2
   4ad10:	4089383a 	mul	r4,r8,r2
   4ad14:	8a3fffcc 	andi	r8,r17,65535
   4ad18:	4710b03a 	or	r8,r8,fp
   4ad1c:	d9800117 	ldw	r6,4(sp)
   4ad20:	4100042e 	bgeu	r8,r4,4ad34 <__umoddi3+0x394>
   4ad24:	4551883a 	add	r8,r8,r21
   4ad28:	10bfffc4 	addi	r2,r2,-1
   4ad2c:	45405a2e 	bgeu	r8,r21,4ae98 <__umoddi3+0x4f8>
   4ad30:	100b883a 	mov	r5,r2
   4ad34:	300c943a 	slli	r6,r6,16
   4ad38:	91ffffcc 	andi	r7,r18,65535
   4ad3c:	9004d43a 	srli	r2,r18,16
   4ad40:	314cb03a 	or	r6,r6,r5
   4ad44:	317fffcc 	andi	r5,r6,65535
   4ad48:	300cd43a 	srli	r6,r6,16
   4ad4c:	29d3383a 	mul	r9,r5,r7
   4ad50:	288b383a 	mul	r5,r5,r2
   4ad54:	31cf383a 	mul	r7,r6,r7
   4ad58:	4806d43a 	srli	r3,r9,16
   4ad5c:	4111c83a 	sub	r8,r8,r4
   4ad60:	29cb883a 	add	r5,r5,r7
   4ad64:	194b883a 	add	r5,r3,r5
   4ad68:	3085383a 	mul	r2,r6,r2
   4ad6c:	29c0022e 	bgeu	r5,r7,4ad78 <__umoddi3+0x3d8>
   4ad70:	00c00074 	movhi	r3,1
   4ad74:	10c5883a 	add	r2,r2,r3
   4ad78:	2808d43a 	srli	r4,r5,16
   4ad7c:	280a943a 	slli	r5,r5,16
   4ad80:	4a7fffcc 	andi	r9,r9,65535
   4ad84:	2085883a 	add	r2,r4,r2
   4ad88:	2a4b883a 	add	r5,r5,r9
   4ad8c:	40803636 	bltu	r8,r2,4ae68 <__umoddi3+0x4c8>
   4ad90:	40804d26 	beq	r8,r2,4aec8 <__umoddi3+0x528>
   4ad94:	4089c83a 	sub	r4,r8,r2
   4ad98:	280f883a 	mov	r7,r5
   4ad9c:	81cfc83a 	sub	r7,r16,r7
   4ada0:	81c7803a 	cmpltu	r3,r16,r7
   4ada4:	20c7c83a 	sub	r3,r4,r3
   4ada8:	1cc4983a 	sll	r2,r3,r19
   4adac:	3d0ed83a 	srl	r7,r7,r20
   4adb0:	1d06d83a 	srl	r3,r3,r20
   4adb4:	11c4b03a 	or	r2,r2,r7
   4adb8:	003f9306 	br	4ac08 <__alt_data_end+0xfffe3b08>
   4adbc:	9ca6983a 	sll	r19,r19,r18
   4adc0:	88e8d83a 	srl	r20,r17,r3
   4adc4:	80c4d83a 	srl	r2,r16,r3
   4adc8:	982cd43a 	srli	r22,r19,16
   4adcc:	8ca2983a 	sll	r17,r17,r18
   4add0:	a009883a 	mov	r4,r20
   4add4:	b00b883a 	mov	r5,r22
   4add8:	1478b03a 	or	fp,r2,r17
   4addc:	004b0340 	call	4b034 <__umodsi3>
   4ade0:	a009883a 	mov	r4,r20
   4ade4:	b00b883a 	mov	r5,r22
   4ade8:	1023883a 	mov	r17,r2
   4adec:	004afd00 	call	4afd0 <__udivsi3>
   4adf0:	9d7fffcc 	andi	r21,r19,65535
   4adf4:	880a943a 	slli	r5,r17,16
   4adf8:	e008d43a 	srli	r4,fp,16
   4adfc:	a885383a 	mul	r2,r21,r2
   4ae00:	84a8983a 	sll	r20,r16,r18
   4ae04:	2148b03a 	or	r4,r4,r5
   4ae08:	2080042e 	bgeu	r4,r2,4ae1c <__umoddi3+0x47c>
   4ae0c:	24c9883a 	add	r4,r4,r19
   4ae10:	24c00236 	bltu	r4,r19,4ae1c <__umoddi3+0x47c>
   4ae14:	2080012e 	bgeu	r4,r2,4ae1c <__umoddi3+0x47c>
   4ae18:	24c9883a 	add	r4,r4,r19
   4ae1c:	20a3c83a 	sub	r17,r4,r2
   4ae20:	b00b883a 	mov	r5,r22
   4ae24:	8809883a 	mov	r4,r17
   4ae28:	004b0340 	call	4b034 <__umodsi3>
   4ae2c:	102f883a 	mov	r23,r2
   4ae30:	8809883a 	mov	r4,r17
   4ae34:	b00b883a 	mov	r5,r22
   4ae38:	004afd00 	call	4afd0 <__udivsi3>
   4ae3c:	b82e943a 	slli	r23,r23,16
   4ae40:	a885383a 	mul	r2,r21,r2
   4ae44:	e13fffcc 	andi	r4,fp,65535
   4ae48:	25c8b03a 	or	r4,r4,r23
   4ae4c:	2080042e 	bgeu	r4,r2,4ae60 <__umoddi3+0x4c0>
   4ae50:	24c9883a 	add	r4,r4,r19
   4ae54:	24c00236 	bltu	r4,r19,4ae60 <__umoddi3+0x4c0>
   4ae58:	2080012e 	bgeu	r4,r2,4ae60 <__umoddi3+0x4c0>
   4ae5c:	24c9883a 	add	r4,r4,r19
   4ae60:	20a3c83a 	sub	r17,r4,r2
   4ae64:	003f4806 	br	4ab88 <__alt_data_end+0xfffe3a88>
   4ae68:	2c8fc83a 	sub	r7,r5,r18
   4ae6c:	1545c83a 	sub	r2,r2,r21
   4ae70:	29cb803a 	cmpltu	r5,r5,r7
   4ae74:	1145c83a 	sub	r2,r2,r5
   4ae78:	4089c83a 	sub	r4,r8,r2
   4ae7c:	003fc706 	br	4ad9c <__alt_data_end+0xfffe3c9c>
   4ae80:	01000604 	movi	r4,24
   4ae84:	003f1806 	br	4aae8 <__alt_data_end+0xfffe39e8>
   4ae88:	00800604 	movi	r2,24
   4ae8c:	003f3206 	br	4ab58 <__alt_data_end+0xfffe3a58>
   4ae90:	01000604 	movi	r4,24
   4ae94:	003ed906 	br	4a9fc <__alt_data_end+0xfffe38fc>
   4ae98:	413fa52e 	bgeu	r8,r4,4ad30 <__alt_data_end+0xfffe3c30>
   4ae9c:	297fff84 	addi	r5,r5,-2
   4aea0:	4551883a 	add	r8,r8,r21
   4aea4:	003fa306 	br	4ad34 <__alt_data_end+0xfffe3c34>
   4aea8:	15ff8b2e 	bgeu	r2,r23,4acd8 <__alt_data_end+0xfffe3bd8>
   4aeac:	31bfff84 	addi	r6,r6,-2
   4aeb0:	1545883a 	add	r2,r2,r21
   4aeb4:	003f8906 	br	4acdc <__alt_data_end+0xfffe3bdc>
   4aeb8:	24c9883a 	add	r4,r4,r19
   4aebc:	003eee06 	br	4aa78 <__alt_data_end+0xfffe3978>
   4aec0:	8005883a 	mov	r2,r16
   4aec4:	003f1706 	br	4ab24 <__alt_data_end+0xfffe3a24>
   4aec8:	817fe736 	bltu	r16,r5,4ae68 <__alt_data_end+0xfffe3d68>
   4aecc:	280f883a 	mov	r7,r5
   4aed0:	0009883a 	mov	r4,zero
   4aed4:	003fb106 	br	4ad9c <__alt_data_end+0xfffe3c9c>

0004aed8 <__divsi3>:
   4aed8:	20001b16 	blt	r4,zero,4af48 <__divsi3+0x70>
   4aedc:	000f883a 	mov	r7,zero
   4aee0:	28001616 	blt	r5,zero,4af3c <__divsi3+0x64>
   4aee4:	200d883a 	mov	r6,r4
   4aee8:	29001a2e 	bgeu	r5,r4,4af54 <__divsi3+0x7c>
   4aeec:	00800804 	movi	r2,32
   4aef0:	00c00044 	movi	r3,1
   4aef4:	00000106 	br	4aefc <__divsi3+0x24>
   4aef8:	10000d26 	beq	r2,zero,4af30 <__divsi3+0x58>
   4aefc:	294b883a 	add	r5,r5,r5
   4af00:	10bfffc4 	addi	r2,r2,-1
   4af04:	18c7883a 	add	r3,r3,r3
   4af08:	293ffb36 	bltu	r5,r4,4aef8 <__alt_data_end+0xfffe3df8>
   4af0c:	0005883a 	mov	r2,zero
   4af10:	18000726 	beq	r3,zero,4af30 <__divsi3+0x58>
   4af14:	0005883a 	mov	r2,zero
   4af18:	31400236 	bltu	r6,r5,4af24 <__divsi3+0x4c>
   4af1c:	314dc83a 	sub	r6,r6,r5
   4af20:	10c4b03a 	or	r2,r2,r3
   4af24:	1806d07a 	srli	r3,r3,1
   4af28:	280ad07a 	srli	r5,r5,1
   4af2c:	183ffa1e 	bne	r3,zero,4af18 <__alt_data_end+0xfffe3e18>
   4af30:	38000126 	beq	r7,zero,4af38 <__divsi3+0x60>
   4af34:	0085c83a 	sub	r2,zero,r2
   4af38:	f800283a 	ret
   4af3c:	014bc83a 	sub	r5,zero,r5
   4af40:	39c0005c 	xori	r7,r7,1
   4af44:	003fe706 	br	4aee4 <__alt_data_end+0xfffe3de4>
   4af48:	0109c83a 	sub	r4,zero,r4
   4af4c:	01c00044 	movi	r7,1
   4af50:	003fe306 	br	4aee0 <__alt_data_end+0xfffe3de0>
   4af54:	00c00044 	movi	r3,1
   4af58:	003fee06 	br	4af14 <__alt_data_end+0xfffe3e14>

0004af5c <__modsi3>:
   4af5c:	20001716 	blt	r4,zero,4afbc <__modsi3+0x60>
   4af60:	000f883a 	mov	r7,zero
   4af64:	2005883a 	mov	r2,r4
   4af68:	28001216 	blt	r5,zero,4afb4 <__modsi3+0x58>
   4af6c:	2900162e 	bgeu	r5,r4,4afc8 <__modsi3+0x6c>
   4af70:	01800804 	movi	r6,32
   4af74:	00c00044 	movi	r3,1
   4af78:	00000106 	br	4af80 <__modsi3+0x24>
   4af7c:	30000a26 	beq	r6,zero,4afa8 <__modsi3+0x4c>
   4af80:	294b883a 	add	r5,r5,r5
   4af84:	31bfffc4 	addi	r6,r6,-1
   4af88:	18c7883a 	add	r3,r3,r3
   4af8c:	293ffb36 	bltu	r5,r4,4af7c <__alt_data_end+0xfffe3e7c>
   4af90:	18000526 	beq	r3,zero,4afa8 <__modsi3+0x4c>
   4af94:	1806d07a 	srli	r3,r3,1
   4af98:	11400136 	bltu	r2,r5,4afa0 <__modsi3+0x44>
   4af9c:	1145c83a 	sub	r2,r2,r5
   4afa0:	280ad07a 	srli	r5,r5,1
   4afa4:	183ffb1e 	bne	r3,zero,4af94 <__alt_data_end+0xfffe3e94>
   4afa8:	38000126 	beq	r7,zero,4afb0 <__modsi3+0x54>
   4afac:	0085c83a 	sub	r2,zero,r2
   4afb0:	f800283a 	ret
   4afb4:	014bc83a 	sub	r5,zero,r5
   4afb8:	003fec06 	br	4af6c <__alt_data_end+0xfffe3e6c>
   4afbc:	0109c83a 	sub	r4,zero,r4
   4afc0:	01c00044 	movi	r7,1
   4afc4:	003fe706 	br	4af64 <__alt_data_end+0xfffe3e64>
   4afc8:	00c00044 	movi	r3,1
   4afcc:	003ff106 	br	4af94 <__alt_data_end+0xfffe3e94>

0004afd0 <__udivsi3>:
   4afd0:	200d883a 	mov	r6,r4
   4afd4:	2900152e 	bgeu	r5,r4,4b02c <__udivsi3+0x5c>
   4afd8:	28001416 	blt	r5,zero,4b02c <__udivsi3+0x5c>
   4afdc:	00800804 	movi	r2,32
   4afe0:	00c00044 	movi	r3,1
   4afe4:	00000206 	br	4aff0 <__udivsi3+0x20>
   4afe8:	10000e26 	beq	r2,zero,4b024 <__udivsi3+0x54>
   4afec:	28000516 	blt	r5,zero,4b004 <__udivsi3+0x34>
   4aff0:	294b883a 	add	r5,r5,r5
   4aff4:	10bfffc4 	addi	r2,r2,-1
   4aff8:	18c7883a 	add	r3,r3,r3
   4affc:	293ffa36 	bltu	r5,r4,4afe8 <__alt_data_end+0xfffe3ee8>
   4b000:	18000826 	beq	r3,zero,4b024 <__udivsi3+0x54>
   4b004:	0005883a 	mov	r2,zero
   4b008:	31400236 	bltu	r6,r5,4b014 <__udivsi3+0x44>
   4b00c:	314dc83a 	sub	r6,r6,r5
   4b010:	10c4b03a 	or	r2,r2,r3
   4b014:	1806d07a 	srli	r3,r3,1
   4b018:	280ad07a 	srli	r5,r5,1
   4b01c:	183ffa1e 	bne	r3,zero,4b008 <__alt_data_end+0xfffe3f08>
   4b020:	f800283a 	ret
   4b024:	0005883a 	mov	r2,zero
   4b028:	f800283a 	ret
   4b02c:	00c00044 	movi	r3,1
   4b030:	003ff406 	br	4b004 <__alt_data_end+0xfffe3f04>

0004b034 <__umodsi3>:
   4b034:	2005883a 	mov	r2,r4
   4b038:	2900122e 	bgeu	r5,r4,4b084 <__umodsi3+0x50>
   4b03c:	28001116 	blt	r5,zero,4b084 <__umodsi3+0x50>
   4b040:	01800804 	movi	r6,32
   4b044:	00c00044 	movi	r3,1
   4b048:	00000206 	br	4b054 <__umodsi3+0x20>
   4b04c:	30000c26 	beq	r6,zero,4b080 <__umodsi3+0x4c>
   4b050:	28000516 	blt	r5,zero,4b068 <__umodsi3+0x34>
   4b054:	294b883a 	add	r5,r5,r5
   4b058:	31bfffc4 	addi	r6,r6,-1
   4b05c:	18c7883a 	add	r3,r3,r3
   4b060:	293ffa36 	bltu	r5,r4,4b04c <__alt_data_end+0xfffe3f4c>
   4b064:	18000626 	beq	r3,zero,4b080 <__umodsi3+0x4c>
   4b068:	1806d07a 	srli	r3,r3,1
   4b06c:	11400136 	bltu	r2,r5,4b074 <__umodsi3+0x40>
   4b070:	1145c83a 	sub	r2,r2,r5
   4b074:	280ad07a 	srli	r5,r5,1
   4b078:	183ffb1e 	bne	r3,zero,4b068 <__alt_data_end+0xfffe3f68>
   4b07c:	f800283a 	ret
   4b080:	f800283a 	ret
   4b084:	00c00044 	movi	r3,1
   4b088:	003ff706 	br	4b068 <__alt_data_end+0xfffe3f68>

0004b08c <__adddf3>:
   4b08c:	02c00434 	movhi	r11,16
   4b090:	5affffc4 	addi	r11,r11,-1
   4b094:	2806d7fa 	srli	r3,r5,31
   4b098:	2ad4703a 	and	r10,r5,r11
   4b09c:	3ad2703a 	and	r9,r7,r11
   4b0a0:	3804d53a 	srli	r2,r7,20
   4b0a4:	3018d77a 	srli	r12,r6,29
   4b0a8:	280ad53a 	srli	r5,r5,20
   4b0ac:	501490fa 	slli	r10,r10,3
   4b0b0:	2010d77a 	srli	r8,r4,29
   4b0b4:	481290fa 	slli	r9,r9,3
   4b0b8:	380ed7fa 	srli	r7,r7,31
   4b0bc:	defffb04 	addi	sp,sp,-20
   4b0c0:	dc800215 	stw	r18,8(sp)
   4b0c4:	dc400115 	stw	r17,4(sp)
   4b0c8:	dc000015 	stw	r16,0(sp)
   4b0cc:	dfc00415 	stw	ra,16(sp)
   4b0d0:	dcc00315 	stw	r19,12(sp)
   4b0d4:	1c803fcc 	andi	r18,r3,255
   4b0d8:	2c01ffcc 	andi	r16,r5,2047
   4b0dc:	5210b03a 	or	r8,r10,r8
   4b0e0:	202290fa 	slli	r17,r4,3
   4b0e4:	1081ffcc 	andi	r2,r2,2047
   4b0e8:	4b12b03a 	or	r9,r9,r12
   4b0ec:	300c90fa 	slli	r6,r6,3
   4b0f0:	91c07526 	beq	r18,r7,4b2c8 <__adddf3+0x23c>
   4b0f4:	8087c83a 	sub	r3,r16,r2
   4b0f8:	00c0ab0e 	bge	zero,r3,4b3a8 <__adddf3+0x31c>
   4b0fc:	10002a1e 	bne	r2,zero,4b1a8 <__adddf3+0x11c>
   4b100:	4984b03a 	or	r2,r9,r6
   4b104:	1000961e 	bne	r2,zero,4b360 <__adddf3+0x2d4>
   4b108:	888001cc 	andi	r2,r17,7
   4b10c:	10000726 	beq	r2,zero,4b12c <__adddf3+0xa0>
   4b110:	888003cc 	andi	r2,r17,15
   4b114:	00c00104 	movi	r3,4
   4b118:	10c00426 	beq	r2,r3,4b12c <__adddf3+0xa0>
   4b11c:	88c7883a 	add	r3,r17,r3
   4b120:	1c63803a 	cmpltu	r17,r3,r17
   4b124:	4451883a 	add	r8,r8,r17
   4b128:	1823883a 	mov	r17,r3
   4b12c:	4080202c 	andhi	r2,r8,128
   4b130:	10005926 	beq	r2,zero,4b298 <__adddf3+0x20c>
   4b134:	84000044 	addi	r16,r16,1
   4b138:	0081ffc4 	movi	r2,2047
   4b13c:	8080ba26 	beq	r16,r2,4b428 <__adddf3+0x39c>
   4b140:	00bfe034 	movhi	r2,65408
   4b144:	10bfffc4 	addi	r2,r2,-1
   4b148:	4090703a 	and	r8,r8,r2
   4b14c:	4004977a 	slli	r2,r8,29
   4b150:	4010927a 	slli	r8,r8,9
   4b154:	8822d0fa 	srli	r17,r17,3
   4b158:	8401ffcc 	andi	r16,r16,2047
   4b15c:	4010d33a 	srli	r8,r8,12
   4b160:	9007883a 	mov	r3,r18
   4b164:	1444b03a 	or	r2,r2,r17
   4b168:	8401ffcc 	andi	r16,r16,2047
   4b16c:	8020953a 	slli	r16,r16,20
   4b170:	18c03fcc 	andi	r3,r3,255
   4b174:	01000434 	movhi	r4,16
   4b178:	213fffc4 	addi	r4,r4,-1
   4b17c:	180697fa 	slli	r3,r3,31
   4b180:	4110703a 	and	r8,r8,r4
   4b184:	4410b03a 	or	r8,r8,r16
   4b188:	40c6b03a 	or	r3,r8,r3
   4b18c:	dfc00417 	ldw	ra,16(sp)
   4b190:	dcc00317 	ldw	r19,12(sp)
   4b194:	dc800217 	ldw	r18,8(sp)
   4b198:	dc400117 	ldw	r17,4(sp)
   4b19c:	dc000017 	ldw	r16,0(sp)
   4b1a0:	dec00504 	addi	sp,sp,20
   4b1a4:	f800283a 	ret
   4b1a8:	0081ffc4 	movi	r2,2047
   4b1ac:	80bfd626 	beq	r16,r2,4b108 <__alt_data_end+0xfffe4008>
   4b1b0:	4a402034 	orhi	r9,r9,128
   4b1b4:	00800e04 	movi	r2,56
   4b1b8:	10c09f16 	blt	r2,r3,4b438 <__adddf3+0x3ac>
   4b1bc:	008007c4 	movi	r2,31
   4b1c0:	10c0c216 	blt	r2,r3,4b4cc <__adddf3+0x440>
   4b1c4:	00800804 	movi	r2,32
   4b1c8:	10c5c83a 	sub	r2,r2,r3
   4b1cc:	488a983a 	sll	r5,r9,r2
   4b1d0:	30c8d83a 	srl	r4,r6,r3
   4b1d4:	3084983a 	sll	r2,r6,r2
   4b1d8:	48c6d83a 	srl	r3,r9,r3
   4b1dc:	290cb03a 	or	r6,r5,r4
   4b1e0:	1004c03a 	cmpne	r2,r2,zero
   4b1e4:	308cb03a 	or	r6,r6,r2
   4b1e8:	898dc83a 	sub	r6,r17,r6
   4b1ec:	89a3803a 	cmpltu	r17,r17,r6
   4b1f0:	40d1c83a 	sub	r8,r8,r3
   4b1f4:	4451c83a 	sub	r8,r8,r17
   4b1f8:	3023883a 	mov	r17,r6
   4b1fc:	4080202c 	andhi	r2,r8,128
   4b200:	10002326 	beq	r2,zero,4b290 <__adddf3+0x204>
   4b204:	04c02034 	movhi	r19,128
   4b208:	9cffffc4 	addi	r19,r19,-1
   4b20c:	44e6703a 	and	r19,r8,r19
   4b210:	98007626 	beq	r19,zero,4b3ec <__adddf3+0x360>
   4b214:	9809883a 	mov	r4,r19
   4b218:	0040d700 	call	40d70 <__clzsi2>
   4b21c:	10fffe04 	addi	r3,r2,-8
   4b220:	010007c4 	movi	r4,31
   4b224:	20c07716 	blt	r4,r3,4b404 <__adddf3+0x378>
   4b228:	00800804 	movi	r2,32
   4b22c:	10c5c83a 	sub	r2,r2,r3
   4b230:	8884d83a 	srl	r2,r17,r2
   4b234:	98d0983a 	sll	r8,r19,r3
   4b238:	88e2983a 	sll	r17,r17,r3
   4b23c:	1204b03a 	or	r2,r2,r8
   4b240:	1c007416 	blt	r3,r16,4b414 <__adddf3+0x388>
   4b244:	1c21c83a 	sub	r16,r3,r16
   4b248:	82000044 	addi	r8,r16,1
   4b24c:	00c007c4 	movi	r3,31
   4b250:	1a009116 	blt	r3,r8,4b498 <__adddf3+0x40c>
   4b254:	00c00804 	movi	r3,32
   4b258:	1a07c83a 	sub	r3,r3,r8
   4b25c:	8a08d83a 	srl	r4,r17,r8
   4b260:	88e2983a 	sll	r17,r17,r3
   4b264:	10c6983a 	sll	r3,r2,r3
   4b268:	1210d83a 	srl	r8,r2,r8
   4b26c:	8804c03a 	cmpne	r2,r17,zero
   4b270:	1906b03a 	or	r3,r3,r4
   4b274:	18a2b03a 	or	r17,r3,r2
   4b278:	0021883a 	mov	r16,zero
   4b27c:	003fa206 	br	4b108 <__alt_data_end+0xfffe4008>
   4b280:	1890b03a 	or	r8,r3,r2
   4b284:	40017d26 	beq	r8,zero,4b87c <__adddf3+0x7f0>
   4b288:	1011883a 	mov	r8,r2
   4b28c:	1823883a 	mov	r17,r3
   4b290:	888001cc 	andi	r2,r17,7
   4b294:	103f9e1e 	bne	r2,zero,4b110 <__alt_data_end+0xfffe4010>
   4b298:	4004977a 	slli	r2,r8,29
   4b29c:	8822d0fa 	srli	r17,r17,3
   4b2a0:	4010d0fa 	srli	r8,r8,3
   4b2a4:	9007883a 	mov	r3,r18
   4b2a8:	1444b03a 	or	r2,r2,r17
   4b2ac:	0101ffc4 	movi	r4,2047
   4b2b0:	81002426 	beq	r16,r4,4b344 <__adddf3+0x2b8>
   4b2b4:	8120703a 	and	r16,r16,r4
   4b2b8:	01000434 	movhi	r4,16
   4b2bc:	213fffc4 	addi	r4,r4,-1
   4b2c0:	4110703a 	and	r8,r8,r4
   4b2c4:	003fa806 	br	4b168 <__alt_data_end+0xfffe4068>
   4b2c8:	8089c83a 	sub	r4,r16,r2
   4b2cc:	01005e0e 	bge	zero,r4,4b448 <__adddf3+0x3bc>
   4b2d0:	10002b26 	beq	r2,zero,4b380 <__adddf3+0x2f4>
   4b2d4:	0081ffc4 	movi	r2,2047
   4b2d8:	80bf8b26 	beq	r16,r2,4b108 <__alt_data_end+0xfffe4008>
   4b2dc:	4a402034 	orhi	r9,r9,128
   4b2e0:	00800e04 	movi	r2,56
   4b2e4:	1100a40e 	bge	r2,r4,4b578 <__adddf3+0x4ec>
   4b2e8:	498cb03a 	or	r6,r9,r6
   4b2ec:	300ac03a 	cmpne	r5,r6,zero
   4b2f0:	0013883a 	mov	r9,zero
   4b2f4:	2c4b883a 	add	r5,r5,r17
   4b2f8:	2c63803a 	cmpltu	r17,r5,r17
   4b2fc:	4a11883a 	add	r8,r9,r8
   4b300:	8a11883a 	add	r8,r17,r8
   4b304:	2823883a 	mov	r17,r5
   4b308:	4080202c 	andhi	r2,r8,128
   4b30c:	103fe026 	beq	r2,zero,4b290 <__alt_data_end+0xfffe4190>
   4b310:	84000044 	addi	r16,r16,1
   4b314:	0081ffc4 	movi	r2,2047
   4b318:	8080d226 	beq	r16,r2,4b664 <__adddf3+0x5d8>
   4b31c:	00bfe034 	movhi	r2,65408
   4b320:	10bfffc4 	addi	r2,r2,-1
   4b324:	4090703a 	and	r8,r8,r2
   4b328:	880ad07a 	srli	r5,r17,1
   4b32c:	400897fa 	slli	r4,r8,31
   4b330:	88c0004c 	andi	r3,r17,1
   4b334:	28e2b03a 	or	r17,r5,r3
   4b338:	4010d07a 	srli	r8,r8,1
   4b33c:	2462b03a 	or	r17,r4,r17
   4b340:	003f7106 	br	4b108 <__alt_data_end+0xfffe4008>
   4b344:	4088b03a 	or	r4,r8,r2
   4b348:	20014526 	beq	r4,zero,4b860 <__adddf3+0x7d4>
   4b34c:	01000434 	movhi	r4,16
   4b350:	42000234 	orhi	r8,r8,8
   4b354:	213fffc4 	addi	r4,r4,-1
   4b358:	4110703a 	and	r8,r8,r4
   4b35c:	003f8206 	br	4b168 <__alt_data_end+0xfffe4068>
   4b360:	18ffffc4 	addi	r3,r3,-1
   4b364:	1800491e 	bne	r3,zero,4b48c <__adddf3+0x400>
   4b368:	898bc83a 	sub	r5,r17,r6
   4b36c:	8963803a 	cmpltu	r17,r17,r5
   4b370:	4251c83a 	sub	r8,r8,r9
   4b374:	4451c83a 	sub	r8,r8,r17
   4b378:	2823883a 	mov	r17,r5
   4b37c:	003f9f06 	br	4b1fc <__alt_data_end+0xfffe40fc>
   4b380:	4984b03a 	or	r2,r9,r6
   4b384:	103f6026 	beq	r2,zero,4b108 <__alt_data_end+0xfffe4008>
   4b388:	213fffc4 	addi	r4,r4,-1
   4b38c:	2000931e 	bne	r4,zero,4b5dc <__adddf3+0x550>
   4b390:	898d883a 	add	r6,r17,r6
   4b394:	3463803a 	cmpltu	r17,r6,r17
   4b398:	4251883a 	add	r8,r8,r9
   4b39c:	8a11883a 	add	r8,r17,r8
   4b3a0:	3023883a 	mov	r17,r6
   4b3a4:	003fd806 	br	4b308 <__alt_data_end+0xfffe4208>
   4b3a8:	1800541e 	bne	r3,zero,4b4fc <__adddf3+0x470>
   4b3ac:	80800044 	addi	r2,r16,1
   4b3b0:	1081ffcc 	andi	r2,r2,2047
   4b3b4:	00c00044 	movi	r3,1
   4b3b8:	1880a00e 	bge	r3,r2,4b63c <__adddf3+0x5b0>
   4b3bc:	8989c83a 	sub	r4,r17,r6
   4b3c0:	8905803a 	cmpltu	r2,r17,r4
   4b3c4:	4267c83a 	sub	r19,r8,r9
   4b3c8:	98a7c83a 	sub	r19,r19,r2
   4b3cc:	9880202c 	andhi	r2,r19,128
   4b3d0:	10006326 	beq	r2,zero,4b560 <__adddf3+0x4d4>
   4b3d4:	3463c83a 	sub	r17,r6,r17
   4b3d8:	4a07c83a 	sub	r3,r9,r8
   4b3dc:	344d803a 	cmpltu	r6,r6,r17
   4b3e0:	19a7c83a 	sub	r19,r3,r6
   4b3e4:	3825883a 	mov	r18,r7
   4b3e8:	983f8a1e 	bne	r19,zero,4b214 <__alt_data_end+0xfffe4114>
   4b3ec:	8809883a 	mov	r4,r17
   4b3f0:	0040d700 	call	40d70 <__clzsi2>
   4b3f4:	10800804 	addi	r2,r2,32
   4b3f8:	10fffe04 	addi	r3,r2,-8
   4b3fc:	010007c4 	movi	r4,31
   4b400:	20ff890e 	bge	r4,r3,4b228 <__alt_data_end+0xfffe4128>
   4b404:	10bff604 	addi	r2,r2,-40
   4b408:	8884983a 	sll	r2,r17,r2
   4b40c:	0023883a 	mov	r17,zero
   4b410:	1c3f8c0e 	bge	r3,r16,4b244 <__alt_data_end+0xfffe4144>
   4b414:	023fe034 	movhi	r8,65408
   4b418:	423fffc4 	addi	r8,r8,-1
   4b41c:	80e1c83a 	sub	r16,r16,r3
   4b420:	1210703a 	and	r8,r2,r8
   4b424:	003f3806 	br	4b108 <__alt_data_end+0xfffe4008>
   4b428:	9007883a 	mov	r3,r18
   4b42c:	0011883a 	mov	r8,zero
   4b430:	0005883a 	mov	r2,zero
   4b434:	003f4c06 	br	4b168 <__alt_data_end+0xfffe4068>
   4b438:	498cb03a 	or	r6,r9,r6
   4b43c:	300cc03a 	cmpne	r6,r6,zero
   4b440:	0007883a 	mov	r3,zero
   4b444:	003f6806 	br	4b1e8 <__alt_data_end+0xfffe40e8>
   4b448:	20009c1e 	bne	r4,zero,4b6bc <__adddf3+0x630>
   4b44c:	80800044 	addi	r2,r16,1
   4b450:	1141ffcc 	andi	r5,r2,2047
   4b454:	01000044 	movi	r4,1
   4b458:	2140670e 	bge	r4,r5,4b5f8 <__adddf3+0x56c>
   4b45c:	0101ffc4 	movi	r4,2047
   4b460:	11007f26 	beq	r2,r4,4b660 <__adddf3+0x5d4>
   4b464:	898d883a 	add	r6,r17,r6
   4b468:	4247883a 	add	r3,r8,r9
   4b46c:	3451803a 	cmpltu	r8,r6,r17
   4b470:	40d1883a 	add	r8,r8,r3
   4b474:	402297fa 	slli	r17,r8,31
   4b478:	300cd07a 	srli	r6,r6,1
   4b47c:	4010d07a 	srli	r8,r8,1
   4b480:	1021883a 	mov	r16,r2
   4b484:	89a2b03a 	or	r17,r17,r6
   4b488:	003f1f06 	br	4b108 <__alt_data_end+0xfffe4008>
   4b48c:	0081ffc4 	movi	r2,2047
   4b490:	80bf481e 	bne	r16,r2,4b1b4 <__alt_data_end+0xfffe40b4>
   4b494:	003f1c06 	br	4b108 <__alt_data_end+0xfffe4008>
   4b498:	843ff844 	addi	r16,r16,-31
   4b49c:	01000804 	movi	r4,32
   4b4a0:	1406d83a 	srl	r3,r2,r16
   4b4a4:	41005026 	beq	r8,r4,4b5e8 <__adddf3+0x55c>
   4b4a8:	01001004 	movi	r4,64
   4b4ac:	2211c83a 	sub	r8,r4,r8
   4b4b0:	1204983a 	sll	r2,r2,r8
   4b4b4:	88a2b03a 	or	r17,r17,r2
   4b4b8:	8822c03a 	cmpne	r17,r17,zero
   4b4bc:	1c62b03a 	or	r17,r3,r17
   4b4c0:	0011883a 	mov	r8,zero
   4b4c4:	0021883a 	mov	r16,zero
   4b4c8:	003f7106 	br	4b290 <__alt_data_end+0xfffe4190>
   4b4cc:	193ff804 	addi	r4,r3,-32
   4b4d0:	00800804 	movi	r2,32
   4b4d4:	4908d83a 	srl	r4,r9,r4
   4b4d8:	18804526 	beq	r3,r2,4b5f0 <__adddf3+0x564>
   4b4dc:	00801004 	movi	r2,64
   4b4e0:	10c5c83a 	sub	r2,r2,r3
   4b4e4:	4886983a 	sll	r3,r9,r2
   4b4e8:	198cb03a 	or	r6,r3,r6
   4b4ec:	300cc03a 	cmpne	r6,r6,zero
   4b4f0:	218cb03a 	or	r6,r4,r6
   4b4f4:	0007883a 	mov	r3,zero
   4b4f8:	003f3b06 	br	4b1e8 <__alt_data_end+0xfffe40e8>
   4b4fc:	80002a26 	beq	r16,zero,4b5a8 <__adddf3+0x51c>
   4b500:	0101ffc4 	movi	r4,2047
   4b504:	11006826 	beq	r2,r4,4b6a8 <__adddf3+0x61c>
   4b508:	00c7c83a 	sub	r3,zero,r3
   4b50c:	42002034 	orhi	r8,r8,128
   4b510:	01000e04 	movi	r4,56
   4b514:	20c07c16 	blt	r4,r3,4b708 <__adddf3+0x67c>
   4b518:	010007c4 	movi	r4,31
   4b51c:	20c0da16 	blt	r4,r3,4b888 <__adddf3+0x7fc>
   4b520:	01000804 	movi	r4,32
   4b524:	20c9c83a 	sub	r4,r4,r3
   4b528:	4114983a 	sll	r10,r8,r4
   4b52c:	88cad83a 	srl	r5,r17,r3
   4b530:	8908983a 	sll	r4,r17,r4
   4b534:	40c6d83a 	srl	r3,r8,r3
   4b538:	5162b03a 	or	r17,r10,r5
   4b53c:	2008c03a 	cmpne	r4,r4,zero
   4b540:	8922b03a 	or	r17,r17,r4
   4b544:	3463c83a 	sub	r17,r6,r17
   4b548:	48c7c83a 	sub	r3,r9,r3
   4b54c:	344d803a 	cmpltu	r6,r6,r17
   4b550:	1991c83a 	sub	r8,r3,r6
   4b554:	1021883a 	mov	r16,r2
   4b558:	3825883a 	mov	r18,r7
   4b55c:	003f2706 	br	4b1fc <__alt_data_end+0xfffe40fc>
   4b560:	24d0b03a 	or	r8,r4,r19
   4b564:	40001b1e 	bne	r8,zero,4b5d4 <__adddf3+0x548>
   4b568:	0005883a 	mov	r2,zero
   4b56c:	0007883a 	mov	r3,zero
   4b570:	0021883a 	mov	r16,zero
   4b574:	003f4d06 	br	4b2ac <__alt_data_end+0xfffe41ac>
   4b578:	008007c4 	movi	r2,31
   4b57c:	11003c16 	blt	r2,r4,4b670 <__adddf3+0x5e4>
   4b580:	00800804 	movi	r2,32
   4b584:	1105c83a 	sub	r2,r2,r4
   4b588:	488e983a 	sll	r7,r9,r2
   4b58c:	310ad83a 	srl	r5,r6,r4
   4b590:	3084983a 	sll	r2,r6,r2
   4b594:	4912d83a 	srl	r9,r9,r4
   4b598:	394ab03a 	or	r5,r7,r5
   4b59c:	1004c03a 	cmpne	r2,r2,zero
   4b5a0:	288ab03a 	or	r5,r5,r2
   4b5a4:	003f5306 	br	4b2f4 <__alt_data_end+0xfffe41f4>
   4b5a8:	4448b03a 	or	r4,r8,r17
   4b5ac:	20003e26 	beq	r4,zero,4b6a8 <__adddf3+0x61c>
   4b5b0:	00c6303a 	nor	r3,zero,r3
   4b5b4:	18003a1e 	bne	r3,zero,4b6a0 <__adddf3+0x614>
   4b5b8:	3463c83a 	sub	r17,r6,r17
   4b5bc:	4a07c83a 	sub	r3,r9,r8
   4b5c0:	344d803a 	cmpltu	r6,r6,r17
   4b5c4:	1991c83a 	sub	r8,r3,r6
   4b5c8:	1021883a 	mov	r16,r2
   4b5cc:	3825883a 	mov	r18,r7
   4b5d0:	003f0a06 	br	4b1fc <__alt_data_end+0xfffe40fc>
   4b5d4:	2023883a 	mov	r17,r4
   4b5d8:	003f0d06 	br	4b210 <__alt_data_end+0xfffe4110>
   4b5dc:	0081ffc4 	movi	r2,2047
   4b5e0:	80bf3f1e 	bne	r16,r2,4b2e0 <__alt_data_end+0xfffe41e0>
   4b5e4:	003ec806 	br	4b108 <__alt_data_end+0xfffe4008>
   4b5e8:	0005883a 	mov	r2,zero
   4b5ec:	003fb106 	br	4b4b4 <__alt_data_end+0xfffe43b4>
   4b5f0:	0007883a 	mov	r3,zero
   4b5f4:	003fbc06 	br	4b4e8 <__alt_data_end+0xfffe43e8>
   4b5f8:	4444b03a 	or	r2,r8,r17
   4b5fc:	8000871e 	bne	r16,zero,4b81c <__adddf3+0x790>
   4b600:	1000ba26 	beq	r2,zero,4b8ec <__adddf3+0x860>
   4b604:	4984b03a 	or	r2,r9,r6
   4b608:	103ebf26 	beq	r2,zero,4b108 <__alt_data_end+0xfffe4008>
   4b60c:	8985883a 	add	r2,r17,r6
   4b610:	4247883a 	add	r3,r8,r9
   4b614:	1451803a 	cmpltu	r8,r2,r17
   4b618:	40d1883a 	add	r8,r8,r3
   4b61c:	40c0202c 	andhi	r3,r8,128
   4b620:	1023883a 	mov	r17,r2
   4b624:	183f1a26 	beq	r3,zero,4b290 <__alt_data_end+0xfffe4190>
   4b628:	00bfe034 	movhi	r2,65408
   4b62c:	10bfffc4 	addi	r2,r2,-1
   4b630:	2021883a 	mov	r16,r4
   4b634:	4090703a 	and	r8,r8,r2
   4b638:	003eb306 	br	4b108 <__alt_data_end+0xfffe4008>
   4b63c:	4444b03a 	or	r2,r8,r17
   4b640:	8000291e 	bne	r16,zero,4b6e8 <__adddf3+0x65c>
   4b644:	10004b1e 	bne	r2,zero,4b774 <__adddf3+0x6e8>
   4b648:	4990b03a 	or	r8,r9,r6
   4b64c:	40008b26 	beq	r8,zero,4b87c <__adddf3+0x7f0>
   4b650:	4811883a 	mov	r8,r9
   4b654:	3023883a 	mov	r17,r6
   4b658:	3825883a 	mov	r18,r7
   4b65c:	003eaa06 	br	4b108 <__alt_data_end+0xfffe4008>
   4b660:	1021883a 	mov	r16,r2
   4b664:	0011883a 	mov	r8,zero
   4b668:	0005883a 	mov	r2,zero
   4b66c:	003f0f06 	br	4b2ac <__alt_data_end+0xfffe41ac>
   4b670:	217ff804 	addi	r5,r4,-32
   4b674:	00800804 	movi	r2,32
   4b678:	494ad83a 	srl	r5,r9,r5
   4b67c:	20807d26 	beq	r4,r2,4b874 <__adddf3+0x7e8>
   4b680:	00801004 	movi	r2,64
   4b684:	1109c83a 	sub	r4,r2,r4
   4b688:	4912983a 	sll	r9,r9,r4
   4b68c:	498cb03a 	or	r6,r9,r6
   4b690:	300cc03a 	cmpne	r6,r6,zero
   4b694:	298ab03a 	or	r5,r5,r6
   4b698:	0013883a 	mov	r9,zero
   4b69c:	003f1506 	br	4b2f4 <__alt_data_end+0xfffe41f4>
   4b6a0:	0101ffc4 	movi	r4,2047
   4b6a4:	113f9a1e 	bne	r2,r4,4b510 <__alt_data_end+0xfffe4410>
   4b6a8:	4811883a 	mov	r8,r9
   4b6ac:	3023883a 	mov	r17,r6
   4b6b0:	1021883a 	mov	r16,r2
   4b6b4:	3825883a 	mov	r18,r7
   4b6b8:	003e9306 	br	4b108 <__alt_data_end+0xfffe4008>
   4b6bc:	8000161e 	bne	r16,zero,4b718 <__adddf3+0x68c>
   4b6c0:	444ab03a 	or	r5,r8,r17
   4b6c4:	28005126 	beq	r5,zero,4b80c <__adddf3+0x780>
   4b6c8:	0108303a 	nor	r4,zero,r4
   4b6cc:	20004d1e 	bne	r4,zero,4b804 <__adddf3+0x778>
   4b6d0:	89a3883a 	add	r17,r17,r6
   4b6d4:	4253883a 	add	r9,r8,r9
   4b6d8:	898d803a 	cmpltu	r6,r17,r6
   4b6dc:	3251883a 	add	r8,r6,r9
   4b6e0:	1021883a 	mov	r16,r2
   4b6e4:	003f0806 	br	4b308 <__alt_data_end+0xfffe4208>
   4b6e8:	1000301e 	bne	r2,zero,4b7ac <__adddf3+0x720>
   4b6ec:	4984b03a 	or	r2,r9,r6
   4b6f0:	10007126 	beq	r2,zero,4b8b8 <__adddf3+0x82c>
   4b6f4:	4811883a 	mov	r8,r9
   4b6f8:	3023883a 	mov	r17,r6
   4b6fc:	3825883a 	mov	r18,r7
   4b700:	0401ffc4 	movi	r16,2047
   4b704:	003e8006 	br	4b108 <__alt_data_end+0xfffe4008>
   4b708:	4462b03a 	or	r17,r8,r17
   4b70c:	8822c03a 	cmpne	r17,r17,zero
   4b710:	0007883a 	mov	r3,zero
   4b714:	003f8b06 	br	4b544 <__alt_data_end+0xfffe4444>
   4b718:	0141ffc4 	movi	r5,2047
   4b71c:	11403b26 	beq	r2,r5,4b80c <__adddf3+0x780>
   4b720:	0109c83a 	sub	r4,zero,r4
   4b724:	42002034 	orhi	r8,r8,128
   4b728:	01400e04 	movi	r5,56
   4b72c:	29006716 	blt	r5,r4,4b8cc <__adddf3+0x840>
   4b730:	014007c4 	movi	r5,31
   4b734:	29007016 	blt	r5,r4,4b8f8 <__adddf3+0x86c>
   4b738:	01400804 	movi	r5,32
   4b73c:	290bc83a 	sub	r5,r5,r4
   4b740:	4154983a 	sll	r10,r8,r5
   4b744:	890ed83a 	srl	r7,r17,r4
   4b748:	894a983a 	sll	r5,r17,r5
   4b74c:	4108d83a 	srl	r4,r8,r4
   4b750:	51e2b03a 	or	r17,r10,r7
   4b754:	280ac03a 	cmpne	r5,r5,zero
   4b758:	8962b03a 	or	r17,r17,r5
   4b75c:	89a3883a 	add	r17,r17,r6
   4b760:	2253883a 	add	r9,r4,r9
   4b764:	898d803a 	cmpltu	r6,r17,r6
   4b768:	3251883a 	add	r8,r6,r9
   4b76c:	1021883a 	mov	r16,r2
   4b770:	003ee506 	br	4b308 <__alt_data_end+0xfffe4208>
   4b774:	4984b03a 	or	r2,r9,r6
   4b778:	103e6326 	beq	r2,zero,4b108 <__alt_data_end+0xfffe4008>
   4b77c:	8987c83a 	sub	r3,r17,r6
   4b780:	88c9803a 	cmpltu	r4,r17,r3
   4b784:	4245c83a 	sub	r2,r8,r9
   4b788:	1105c83a 	sub	r2,r2,r4
   4b78c:	1100202c 	andhi	r4,r2,128
   4b790:	203ebb26 	beq	r4,zero,4b280 <__alt_data_end+0xfffe4180>
   4b794:	3463c83a 	sub	r17,r6,r17
   4b798:	4a07c83a 	sub	r3,r9,r8
   4b79c:	344d803a 	cmpltu	r6,r6,r17
   4b7a0:	1991c83a 	sub	r8,r3,r6
   4b7a4:	3825883a 	mov	r18,r7
   4b7a8:	003e5706 	br	4b108 <__alt_data_end+0xfffe4008>
   4b7ac:	4984b03a 	or	r2,r9,r6
   4b7b0:	10002e26 	beq	r2,zero,4b86c <__adddf3+0x7e0>
   4b7b4:	4004d0fa 	srli	r2,r8,3
   4b7b8:	8822d0fa 	srli	r17,r17,3
   4b7bc:	4010977a 	slli	r8,r8,29
   4b7c0:	10c0022c 	andhi	r3,r2,8
   4b7c4:	4462b03a 	or	r17,r8,r17
   4b7c8:	18000826 	beq	r3,zero,4b7ec <__adddf3+0x760>
   4b7cc:	4808d0fa 	srli	r4,r9,3
   4b7d0:	20c0022c 	andhi	r3,r4,8
   4b7d4:	1800051e 	bne	r3,zero,4b7ec <__adddf3+0x760>
   4b7d8:	300cd0fa 	srli	r6,r6,3
   4b7dc:	4806977a 	slli	r3,r9,29
   4b7e0:	2005883a 	mov	r2,r4
   4b7e4:	3825883a 	mov	r18,r7
   4b7e8:	19a2b03a 	or	r17,r3,r6
   4b7ec:	8810d77a 	srli	r8,r17,29
   4b7f0:	100490fa 	slli	r2,r2,3
   4b7f4:	882290fa 	slli	r17,r17,3
   4b7f8:	0401ffc4 	movi	r16,2047
   4b7fc:	4090b03a 	or	r8,r8,r2
   4b800:	003e4106 	br	4b108 <__alt_data_end+0xfffe4008>
   4b804:	0141ffc4 	movi	r5,2047
   4b808:	117fc71e 	bne	r2,r5,4b728 <__alt_data_end+0xfffe4628>
   4b80c:	4811883a 	mov	r8,r9
   4b810:	3023883a 	mov	r17,r6
   4b814:	1021883a 	mov	r16,r2
   4b818:	003e3b06 	br	4b108 <__alt_data_end+0xfffe4008>
   4b81c:	10002f26 	beq	r2,zero,4b8dc <__adddf3+0x850>
   4b820:	4984b03a 	or	r2,r9,r6
   4b824:	10001126 	beq	r2,zero,4b86c <__adddf3+0x7e0>
   4b828:	4004d0fa 	srli	r2,r8,3
   4b82c:	8822d0fa 	srli	r17,r17,3
   4b830:	4010977a 	slli	r8,r8,29
   4b834:	10c0022c 	andhi	r3,r2,8
   4b838:	4462b03a 	or	r17,r8,r17
   4b83c:	183feb26 	beq	r3,zero,4b7ec <__alt_data_end+0xfffe46ec>
   4b840:	4808d0fa 	srli	r4,r9,3
   4b844:	20c0022c 	andhi	r3,r4,8
   4b848:	183fe81e 	bne	r3,zero,4b7ec <__alt_data_end+0xfffe46ec>
   4b84c:	300cd0fa 	srli	r6,r6,3
   4b850:	4806977a 	slli	r3,r9,29
   4b854:	2005883a 	mov	r2,r4
   4b858:	19a2b03a 	or	r17,r3,r6
   4b85c:	003fe306 	br	4b7ec <__alt_data_end+0xfffe46ec>
   4b860:	0011883a 	mov	r8,zero
   4b864:	0005883a 	mov	r2,zero
   4b868:	003e3f06 	br	4b168 <__alt_data_end+0xfffe4068>
   4b86c:	0401ffc4 	movi	r16,2047
   4b870:	003e2506 	br	4b108 <__alt_data_end+0xfffe4008>
   4b874:	0013883a 	mov	r9,zero
   4b878:	003f8406 	br	4b68c <__alt_data_end+0xfffe458c>
   4b87c:	0005883a 	mov	r2,zero
   4b880:	0007883a 	mov	r3,zero
   4b884:	003e8906 	br	4b2ac <__alt_data_end+0xfffe41ac>
   4b888:	197ff804 	addi	r5,r3,-32
   4b88c:	01000804 	movi	r4,32
   4b890:	414ad83a 	srl	r5,r8,r5
   4b894:	19002426 	beq	r3,r4,4b928 <__adddf3+0x89c>
   4b898:	01001004 	movi	r4,64
   4b89c:	20c7c83a 	sub	r3,r4,r3
   4b8a0:	40c6983a 	sll	r3,r8,r3
   4b8a4:	1c46b03a 	or	r3,r3,r17
   4b8a8:	1806c03a 	cmpne	r3,r3,zero
   4b8ac:	28e2b03a 	or	r17,r5,r3
   4b8b0:	0007883a 	mov	r3,zero
   4b8b4:	003f2306 	br	4b544 <__alt_data_end+0xfffe4444>
   4b8b8:	0007883a 	mov	r3,zero
   4b8bc:	5811883a 	mov	r8,r11
   4b8c0:	00bfffc4 	movi	r2,-1
   4b8c4:	0401ffc4 	movi	r16,2047
   4b8c8:	003e7806 	br	4b2ac <__alt_data_end+0xfffe41ac>
   4b8cc:	4462b03a 	or	r17,r8,r17
   4b8d0:	8822c03a 	cmpne	r17,r17,zero
   4b8d4:	0009883a 	mov	r4,zero
   4b8d8:	003fa006 	br	4b75c <__alt_data_end+0xfffe465c>
   4b8dc:	4811883a 	mov	r8,r9
   4b8e0:	3023883a 	mov	r17,r6
   4b8e4:	0401ffc4 	movi	r16,2047
   4b8e8:	003e0706 	br	4b108 <__alt_data_end+0xfffe4008>
   4b8ec:	4811883a 	mov	r8,r9
   4b8f0:	3023883a 	mov	r17,r6
   4b8f4:	003e0406 	br	4b108 <__alt_data_end+0xfffe4008>
   4b8f8:	21fff804 	addi	r7,r4,-32
   4b8fc:	01400804 	movi	r5,32
   4b900:	41ced83a 	srl	r7,r8,r7
   4b904:	21400a26 	beq	r4,r5,4b930 <__adddf3+0x8a4>
   4b908:	01401004 	movi	r5,64
   4b90c:	2909c83a 	sub	r4,r5,r4
   4b910:	4108983a 	sll	r4,r8,r4
   4b914:	2448b03a 	or	r4,r4,r17
   4b918:	2008c03a 	cmpne	r4,r4,zero
   4b91c:	3922b03a 	or	r17,r7,r4
   4b920:	0009883a 	mov	r4,zero
   4b924:	003f8d06 	br	4b75c <__alt_data_end+0xfffe465c>
   4b928:	0007883a 	mov	r3,zero
   4b92c:	003fdd06 	br	4b8a4 <__alt_data_end+0xfffe47a4>
   4b930:	0009883a 	mov	r4,zero
   4b934:	003ff706 	br	4b914 <__alt_data_end+0xfffe4814>

0004b938 <__divdf3>:
   4b938:	defff204 	addi	sp,sp,-56
   4b93c:	dd400915 	stw	r21,36(sp)
   4b940:	282ad53a 	srli	r21,r5,20
   4b944:	dd000815 	stw	r20,32(sp)
   4b948:	2828d7fa 	srli	r20,r5,31
   4b94c:	dc000415 	stw	r16,16(sp)
   4b950:	04000434 	movhi	r16,16
   4b954:	df000c15 	stw	fp,48(sp)
   4b958:	843fffc4 	addi	r16,r16,-1
   4b95c:	dfc00d15 	stw	ra,52(sp)
   4b960:	ddc00b15 	stw	r23,44(sp)
   4b964:	dd800a15 	stw	r22,40(sp)
   4b968:	dcc00715 	stw	r19,28(sp)
   4b96c:	dc800615 	stw	r18,24(sp)
   4b970:	dc400515 	stw	r17,20(sp)
   4b974:	ad41ffcc 	andi	r21,r21,2047
   4b978:	2c20703a 	and	r16,r5,r16
   4b97c:	a7003fcc 	andi	fp,r20,255
   4b980:	a8006126 	beq	r21,zero,4bb08 <__divdf3+0x1d0>
   4b984:	0081ffc4 	movi	r2,2047
   4b988:	2025883a 	mov	r18,r4
   4b98c:	a8803726 	beq	r21,r2,4ba6c <__divdf3+0x134>
   4b990:	80800434 	orhi	r2,r16,16
   4b994:	100490fa 	slli	r2,r2,3
   4b998:	2020d77a 	srli	r16,r4,29
   4b99c:	202490fa 	slli	r18,r4,3
   4b9a0:	ad7f0044 	addi	r21,r21,-1023
   4b9a4:	80a0b03a 	or	r16,r16,r2
   4b9a8:	0027883a 	mov	r19,zero
   4b9ac:	0013883a 	mov	r9,zero
   4b9b0:	3804d53a 	srli	r2,r7,20
   4b9b4:	382cd7fa 	srli	r22,r7,31
   4b9b8:	04400434 	movhi	r17,16
   4b9bc:	8c7fffc4 	addi	r17,r17,-1
   4b9c0:	1081ffcc 	andi	r2,r2,2047
   4b9c4:	3011883a 	mov	r8,r6
   4b9c8:	3c62703a 	and	r17,r7,r17
   4b9cc:	b5c03fcc 	andi	r23,r22,255
   4b9d0:	10006c26 	beq	r2,zero,4bb84 <__divdf3+0x24c>
   4b9d4:	00c1ffc4 	movi	r3,2047
   4b9d8:	10c06426 	beq	r2,r3,4bb6c <__divdf3+0x234>
   4b9dc:	88c00434 	orhi	r3,r17,16
   4b9e0:	180690fa 	slli	r3,r3,3
   4b9e4:	3022d77a 	srli	r17,r6,29
   4b9e8:	301090fa 	slli	r8,r6,3
   4b9ec:	10bf0044 	addi	r2,r2,-1023
   4b9f0:	88e2b03a 	or	r17,r17,r3
   4b9f4:	000f883a 	mov	r7,zero
   4b9f8:	a58cf03a 	xor	r6,r20,r22
   4b9fc:	3cc8b03a 	or	r4,r7,r19
   4ba00:	a8abc83a 	sub	r21,r21,r2
   4ba04:	008003c4 	movi	r2,15
   4ba08:	3007883a 	mov	r3,r6
   4ba0c:	34c03fcc 	andi	r19,r6,255
   4ba10:	11009036 	bltu	r2,r4,4bc54 <__divdf3+0x31c>
   4ba14:	200890ba 	slli	r4,r4,2
   4ba18:	00800174 	movhi	r2,5
   4ba1c:	10ae8b04 	addi	r2,r2,-17876
   4ba20:	2089883a 	add	r4,r4,r2
   4ba24:	20800017 	ldw	r2,0(r4)
   4ba28:	1000683a 	jmp	r2
   4ba2c:	0004bc54 	movui	zero,4849
   4ba30:	0004baa4 	muli	zero,zero,4842
   4ba34:	0004bc44 	movi	zero,4849
   4ba38:	0004ba98 	cmpnei	zero,zero,4842
   4ba3c:	0004bc44 	movi	zero,4849
   4ba40:	0004bc18 	cmpnei	zero,zero,4848
   4ba44:	0004bc44 	movi	zero,4849
   4ba48:	0004ba98 	cmpnei	zero,zero,4842
   4ba4c:	0004baa4 	muli	zero,zero,4842
   4ba50:	0004baa4 	muli	zero,zero,4842
   4ba54:	0004bc18 	cmpnei	zero,zero,4848
   4ba58:	0004ba98 	cmpnei	zero,zero,4842
   4ba5c:	0004ba88 	cmpgei	zero,zero,4842
   4ba60:	0004ba88 	cmpgei	zero,zero,4842
   4ba64:	0004ba88 	cmpgei	zero,zero,4842
   4ba68:	0004bf38 	rdprs	zero,zero,4860
   4ba6c:	2404b03a 	or	r2,r4,r16
   4ba70:	1000661e 	bne	r2,zero,4bc0c <__divdf3+0x2d4>
   4ba74:	04c00204 	movi	r19,8
   4ba78:	0021883a 	mov	r16,zero
   4ba7c:	0025883a 	mov	r18,zero
   4ba80:	02400084 	movi	r9,2
   4ba84:	003fca06 	br	4b9b0 <__alt_data_end+0xfffe48b0>
   4ba88:	8023883a 	mov	r17,r16
   4ba8c:	9011883a 	mov	r8,r18
   4ba90:	e02f883a 	mov	r23,fp
   4ba94:	480f883a 	mov	r7,r9
   4ba98:	00800084 	movi	r2,2
   4ba9c:	3881311e 	bne	r7,r2,4bf64 <__divdf3+0x62c>
   4baa0:	b827883a 	mov	r19,r23
   4baa4:	98c0004c 	andi	r3,r19,1
   4baa8:	0081ffc4 	movi	r2,2047
   4baac:	000b883a 	mov	r5,zero
   4bab0:	0025883a 	mov	r18,zero
   4bab4:	1004953a 	slli	r2,r2,20
   4bab8:	18c03fcc 	andi	r3,r3,255
   4babc:	04400434 	movhi	r17,16
   4bac0:	8c7fffc4 	addi	r17,r17,-1
   4bac4:	180697fa 	slli	r3,r3,31
   4bac8:	2c4a703a 	and	r5,r5,r17
   4bacc:	288ab03a 	or	r5,r5,r2
   4bad0:	28c6b03a 	or	r3,r5,r3
   4bad4:	9005883a 	mov	r2,r18
   4bad8:	dfc00d17 	ldw	ra,52(sp)
   4badc:	df000c17 	ldw	fp,48(sp)
   4bae0:	ddc00b17 	ldw	r23,44(sp)
   4bae4:	dd800a17 	ldw	r22,40(sp)
   4bae8:	dd400917 	ldw	r21,36(sp)
   4baec:	dd000817 	ldw	r20,32(sp)
   4baf0:	dcc00717 	ldw	r19,28(sp)
   4baf4:	dc800617 	ldw	r18,24(sp)
   4baf8:	dc400517 	ldw	r17,20(sp)
   4bafc:	dc000417 	ldw	r16,16(sp)
   4bb00:	dec00e04 	addi	sp,sp,56
   4bb04:	f800283a 	ret
   4bb08:	2404b03a 	or	r2,r4,r16
   4bb0c:	2027883a 	mov	r19,r4
   4bb10:	10003926 	beq	r2,zero,4bbf8 <__divdf3+0x2c0>
   4bb14:	80012e26 	beq	r16,zero,4bfd0 <__divdf3+0x698>
   4bb18:	8009883a 	mov	r4,r16
   4bb1c:	d9800315 	stw	r6,12(sp)
   4bb20:	d9c00215 	stw	r7,8(sp)
   4bb24:	0040d700 	call	40d70 <__clzsi2>
   4bb28:	d9800317 	ldw	r6,12(sp)
   4bb2c:	d9c00217 	ldw	r7,8(sp)
   4bb30:	113ffd44 	addi	r4,r2,-11
   4bb34:	00c00704 	movi	r3,28
   4bb38:	19012116 	blt	r3,r4,4bfc0 <__divdf3+0x688>
   4bb3c:	00c00744 	movi	r3,29
   4bb40:	147ffe04 	addi	r17,r2,-8
   4bb44:	1907c83a 	sub	r3,r3,r4
   4bb48:	8460983a 	sll	r16,r16,r17
   4bb4c:	98c6d83a 	srl	r3,r19,r3
   4bb50:	9c64983a 	sll	r18,r19,r17
   4bb54:	1c20b03a 	or	r16,r3,r16
   4bb58:	1080fcc4 	addi	r2,r2,1011
   4bb5c:	00abc83a 	sub	r21,zero,r2
   4bb60:	0027883a 	mov	r19,zero
   4bb64:	0013883a 	mov	r9,zero
   4bb68:	003f9106 	br	4b9b0 <__alt_data_end+0xfffe48b0>
   4bb6c:	3446b03a 	or	r3,r6,r17
   4bb70:	18001f1e 	bne	r3,zero,4bbf0 <__divdf3+0x2b8>
   4bb74:	0023883a 	mov	r17,zero
   4bb78:	0011883a 	mov	r8,zero
   4bb7c:	01c00084 	movi	r7,2
   4bb80:	003f9d06 	br	4b9f8 <__alt_data_end+0xfffe48f8>
   4bb84:	3446b03a 	or	r3,r6,r17
   4bb88:	18001526 	beq	r3,zero,4bbe0 <__divdf3+0x2a8>
   4bb8c:	88011b26 	beq	r17,zero,4bffc <__divdf3+0x6c4>
   4bb90:	8809883a 	mov	r4,r17
   4bb94:	d9800315 	stw	r6,12(sp)
   4bb98:	da400115 	stw	r9,4(sp)
   4bb9c:	0040d700 	call	40d70 <__clzsi2>
   4bba0:	d9800317 	ldw	r6,12(sp)
   4bba4:	da400117 	ldw	r9,4(sp)
   4bba8:	113ffd44 	addi	r4,r2,-11
   4bbac:	00c00704 	movi	r3,28
   4bbb0:	19010e16 	blt	r3,r4,4bfec <__divdf3+0x6b4>
   4bbb4:	00c00744 	movi	r3,29
   4bbb8:	123ffe04 	addi	r8,r2,-8
   4bbbc:	1907c83a 	sub	r3,r3,r4
   4bbc0:	8a22983a 	sll	r17,r17,r8
   4bbc4:	30c6d83a 	srl	r3,r6,r3
   4bbc8:	3210983a 	sll	r8,r6,r8
   4bbcc:	1c62b03a 	or	r17,r3,r17
   4bbd0:	1080fcc4 	addi	r2,r2,1011
   4bbd4:	0085c83a 	sub	r2,zero,r2
   4bbd8:	000f883a 	mov	r7,zero
   4bbdc:	003f8606 	br	4b9f8 <__alt_data_end+0xfffe48f8>
   4bbe0:	0023883a 	mov	r17,zero
   4bbe4:	0011883a 	mov	r8,zero
   4bbe8:	01c00044 	movi	r7,1
   4bbec:	003f8206 	br	4b9f8 <__alt_data_end+0xfffe48f8>
   4bbf0:	01c000c4 	movi	r7,3
   4bbf4:	003f8006 	br	4b9f8 <__alt_data_end+0xfffe48f8>
   4bbf8:	04c00104 	movi	r19,4
   4bbfc:	0021883a 	mov	r16,zero
   4bc00:	0025883a 	mov	r18,zero
   4bc04:	02400044 	movi	r9,1
   4bc08:	003f6906 	br	4b9b0 <__alt_data_end+0xfffe48b0>
   4bc0c:	04c00304 	movi	r19,12
   4bc10:	024000c4 	movi	r9,3
   4bc14:	003f6606 	br	4b9b0 <__alt_data_end+0xfffe48b0>
   4bc18:	01400434 	movhi	r5,16
   4bc1c:	0007883a 	mov	r3,zero
   4bc20:	297fffc4 	addi	r5,r5,-1
   4bc24:	04bfffc4 	movi	r18,-1
   4bc28:	0081ffc4 	movi	r2,2047
   4bc2c:	003fa106 	br	4bab4 <__alt_data_end+0xfffe49b4>
   4bc30:	00c00044 	movi	r3,1
   4bc34:	1887c83a 	sub	r3,r3,r2
   4bc38:	01000e04 	movi	r4,56
   4bc3c:	20c1210e 	bge	r4,r3,4c0c4 <__divdf3+0x78c>
   4bc40:	98c0004c 	andi	r3,r19,1
   4bc44:	0005883a 	mov	r2,zero
   4bc48:	000b883a 	mov	r5,zero
   4bc4c:	0025883a 	mov	r18,zero
   4bc50:	003f9806 	br	4bab4 <__alt_data_end+0xfffe49b4>
   4bc54:	8c00fd36 	bltu	r17,r16,4c04c <__divdf3+0x714>
   4bc58:	8440fb26 	beq	r16,r17,4c048 <__divdf3+0x710>
   4bc5c:	8007883a 	mov	r3,r16
   4bc60:	ad7fffc4 	addi	r21,r21,-1
   4bc64:	0021883a 	mov	r16,zero
   4bc68:	4004d63a 	srli	r2,r8,24
   4bc6c:	8822923a 	slli	r17,r17,8
   4bc70:	1809883a 	mov	r4,r3
   4bc74:	402c923a 	slli	r22,r8,8
   4bc78:	88b8b03a 	or	fp,r17,r2
   4bc7c:	e028d43a 	srli	r20,fp,16
   4bc80:	d8c00015 	stw	r3,0(sp)
   4bc84:	e5ffffcc 	andi	r23,fp,65535
   4bc88:	a00b883a 	mov	r5,r20
   4bc8c:	004afd00 	call	4afd0 <__udivsi3>
   4bc90:	d8c00017 	ldw	r3,0(sp)
   4bc94:	a00b883a 	mov	r5,r20
   4bc98:	d8800315 	stw	r2,12(sp)
   4bc9c:	1809883a 	mov	r4,r3
   4bca0:	004b0340 	call	4b034 <__umodsi3>
   4bca4:	d9800317 	ldw	r6,12(sp)
   4bca8:	1006943a 	slli	r3,r2,16
   4bcac:	9004d43a 	srli	r2,r18,16
   4bcb0:	b9a3383a 	mul	r17,r23,r6
   4bcb4:	10c4b03a 	or	r2,r2,r3
   4bcb8:	1440062e 	bgeu	r2,r17,4bcd4 <__divdf3+0x39c>
   4bcbc:	1705883a 	add	r2,r2,fp
   4bcc0:	30ffffc4 	addi	r3,r6,-1
   4bcc4:	1700ee36 	bltu	r2,fp,4c080 <__divdf3+0x748>
   4bcc8:	1440ed2e 	bgeu	r2,r17,4c080 <__divdf3+0x748>
   4bccc:	31bfff84 	addi	r6,r6,-2
   4bcd0:	1705883a 	add	r2,r2,fp
   4bcd4:	1463c83a 	sub	r17,r2,r17
   4bcd8:	a00b883a 	mov	r5,r20
   4bcdc:	8809883a 	mov	r4,r17
   4bce0:	d9800315 	stw	r6,12(sp)
   4bce4:	004afd00 	call	4afd0 <__udivsi3>
   4bce8:	a00b883a 	mov	r5,r20
   4bcec:	8809883a 	mov	r4,r17
   4bcf0:	d8800215 	stw	r2,8(sp)
   4bcf4:	004b0340 	call	4b034 <__umodsi3>
   4bcf8:	d9c00217 	ldw	r7,8(sp)
   4bcfc:	1004943a 	slli	r2,r2,16
   4bd00:	94bfffcc 	andi	r18,r18,65535
   4bd04:	b9d1383a 	mul	r8,r23,r7
   4bd08:	90a4b03a 	or	r18,r18,r2
   4bd0c:	d9800317 	ldw	r6,12(sp)
   4bd10:	9200062e 	bgeu	r18,r8,4bd2c <__divdf3+0x3f4>
   4bd14:	9725883a 	add	r18,r18,fp
   4bd18:	38bfffc4 	addi	r2,r7,-1
   4bd1c:	9700d636 	bltu	r18,fp,4c078 <__divdf3+0x740>
   4bd20:	9200d52e 	bgeu	r18,r8,4c078 <__divdf3+0x740>
   4bd24:	39ffff84 	addi	r7,r7,-2
   4bd28:	9725883a 	add	r18,r18,fp
   4bd2c:	3004943a 	slli	r2,r6,16
   4bd30:	b012d43a 	srli	r9,r22,16
   4bd34:	b1bfffcc 	andi	r6,r22,65535
   4bd38:	11e2b03a 	or	r17,r2,r7
   4bd3c:	8806d43a 	srli	r3,r17,16
   4bd40:	893fffcc 	andi	r4,r17,65535
   4bd44:	218b383a 	mul	r5,r4,r6
   4bd48:	30c5383a 	mul	r2,r6,r3
   4bd4c:	2249383a 	mul	r4,r4,r9
   4bd50:	280ed43a 	srli	r7,r5,16
   4bd54:	9225c83a 	sub	r18,r18,r8
   4bd58:	2089883a 	add	r4,r4,r2
   4bd5c:	3909883a 	add	r4,r7,r4
   4bd60:	1a47383a 	mul	r3,r3,r9
   4bd64:	2080022e 	bgeu	r4,r2,4bd70 <__divdf3+0x438>
   4bd68:	00800074 	movhi	r2,1
   4bd6c:	1887883a 	add	r3,r3,r2
   4bd70:	2004d43a 	srli	r2,r4,16
   4bd74:	2008943a 	slli	r4,r4,16
   4bd78:	297fffcc 	andi	r5,r5,65535
   4bd7c:	10c7883a 	add	r3,r2,r3
   4bd80:	2149883a 	add	r4,r4,r5
   4bd84:	90c0a536 	bltu	r18,r3,4c01c <__divdf3+0x6e4>
   4bd88:	90c0bf26 	beq	r18,r3,4c088 <__divdf3+0x750>
   4bd8c:	90c7c83a 	sub	r3,r18,r3
   4bd90:	810fc83a 	sub	r7,r16,r4
   4bd94:	81e5803a 	cmpltu	r18,r16,r7
   4bd98:	1ca5c83a 	sub	r18,r3,r18
   4bd9c:	e480c126 	beq	fp,r18,4c0a4 <__divdf3+0x76c>
   4bda0:	a00b883a 	mov	r5,r20
   4bda4:	9009883a 	mov	r4,r18
   4bda8:	d9800315 	stw	r6,12(sp)
   4bdac:	d9c00215 	stw	r7,8(sp)
   4bdb0:	da400115 	stw	r9,4(sp)
   4bdb4:	004afd00 	call	4afd0 <__udivsi3>
   4bdb8:	a00b883a 	mov	r5,r20
   4bdbc:	9009883a 	mov	r4,r18
   4bdc0:	d8800015 	stw	r2,0(sp)
   4bdc4:	004b0340 	call	4b034 <__umodsi3>
   4bdc8:	d9c00217 	ldw	r7,8(sp)
   4bdcc:	da000017 	ldw	r8,0(sp)
   4bdd0:	1006943a 	slli	r3,r2,16
   4bdd4:	3804d43a 	srli	r2,r7,16
   4bdd8:	ba21383a 	mul	r16,r23,r8
   4bddc:	d9800317 	ldw	r6,12(sp)
   4bde0:	10c4b03a 	or	r2,r2,r3
   4bde4:	da400117 	ldw	r9,4(sp)
   4bde8:	1400062e 	bgeu	r2,r16,4be04 <__divdf3+0x4cc>
   4bdec:	1705883a 	add	r2,r2,fp
   4bdf0:	40ffffc4 	addi	r3,r8,-1
   4bdf4:	1700ad36 	bltu	r2,fp,4c0ac <__divdf3+0x774>
   4bdf8:	1400ac2e 	bgeu	r2,r16,4c0ac <__divdf3+0x774>
   4bdfc:	423fff84 	addi	r8,r8,-2
   4be00:	1705883a 	add	r2,r2,fp
   4be04:	1421c83a 	sub	r16,r2,r16
   4be08:	a00b883a 	mov	r5,r20
   4be0c:	8009883a 	mov	r4,r16
   4be10:	d9800315 	stw	r6,12(sp)
   4be14:	d9c00215 	stw	r7,8(sp)
   4be18:	da000015 	stw	r8,0(sp)
   4be1c:	da400115 	stw	r9,4(sp)
   4be20:	004afd00 	call	4afd0 <__udivsi3>
   4be24:	8009883a 	mov	r4,r16
   4be28:	a00b883a 	mov	r5,r20
   4be2c:	1025883a 	mov	r18,r2
   4be30:	004b0340 	call	4b034 <__umodsi3>
   4be34:	d9c00217 	ldw	r7,8(sp)
   4be38:	1004943a 	slli	r2,r2,16
   4be3c:	bcaf383a 	mul	r23,r23,r18
   4be40:	393fffcc 	andi	r4,r7,65535
   4be44:	2088b03a 	or	r4,r4,r2
   4be48:	d9800317 	ldw	r6,12(sp)
   4be4c:	da000017 	ldw	r8,0(sp)
   4be50:	da400117 	ldw	r9,4(sp)
   4be54:	25c0062e 	bgeu	r4,r23,4be70 <__divdf3+0x538>
   4be58:	2709883a 	add	r4,r4,fp
   4be5c:	90bfffc4 	addi	r2,r18,-1
   4be60:	27009436 	bltu	r4,fp,4c0b4 <__divdf3+0x77c>
   4be64:	25c0932e 	bgeu	r4,r23,4c0b4 <__divdf3+0x77c>
   4be68:	94bfff84 	addi	r18,r18,-2
   4be6c:	2709883a 	add	r4,r4,fp
   4be70:	4004943a 	slli	r2,r8,16
   4be74:	25efc83a 	sub	r23,r4,r23
   4be78:	1490b03a 	or	r8,r2,r18
   4be7c:	4008d43a 	srli	r4,r8,16
   4be80:	40ffffcc 	andi	r3,r8,65535
   4be84:	30c5383a 	mul	r2,r6,r3
   4be88:	1a47383a 	mul	r3,r3,r9
   4be8c:	310d383a 	mul	r6,r6,r4
   4be90:	100ad43a 	srli	r5,r2,16
   4be94:	4913383a 	mul	r9,r9,r4
   4be98:	1987883a 	add	r3,r3,r6
   4be9c:	28c7883a 	add	r3,r5,r3
   4bea0:	1980022e 	bgeu	r3,r6,4beac <__divdf3+0x574>
   4bea4:	01000074 	movhi	r4,1
   4bea8:	4913883a 	add	r9,r9,r4
   4beac:	1808d43a 	srli	r4,r3,16
   4beb0:	1806943a 	slli	r3,r3,16
   4beb4:	10bfffcc 	andi	r2,r2,65535
   4beb8:	2253883a 	add	r9,r4,r9
   4bebc:	1887883a 	add	r3,r3,r2
   4bec0:	ba403836 	bltu	r23,r9,4bfa4 <__divdf3+0x66c>
   4bec4:	ba403626 	beq	r23,r9,4bfa0 <__divdf3+0x668>
   4bec8:	42000054 	ori	r8,r8,1
   4becc:	a880ffc4 	addi	r2,r21,1023
   4bed0:	00bf570e 	bge	zero,r2,4bc30 <__alt_data_end+0xfffe4b30>
   4bed4:	40c001cc 	andi	r3,r8,7
   4bed8:	18000726 	beq	r3,zero,4bef8 <__divdf3+0x5c0>
   4bedc:	40c003cc 	andi	r3,r8,15
   4bee0:	01000104 	movi	r4,4
   4bee4:	19000426 	beq	r3,r4,4bef8 <__divdf3+0x5c0>
   4bee8:	4107883a 	add	r3,r8,r4
   4beec:	1a11803a 	cmpltu	r8,r3,r8
   4bef0:	8a23883a 	add	r17,r17,r8
   4bef4:	1811883a 	mov	r8,r3
   4bef8:	88c0402c 	andhi	r3,r17,256
   4befc:	18000426 	beq	r3,zero,4bf10 <__divdf3+0x5d8>
   4bf00:	00ffc034 	movhi	r3,65280
   4bf04:	18ffffc4 	addi	r3,r3,-1
   4bf08:	a8810004 	addi	r2,r21,1024
   4bf0c:	88e2703a 	and	r17,r17,r3
   4bf10:	00c1ff84 	movi	r3,2046
   4bf14:	18bee316 	blt	r3,r2,4baa4 <__alt_data_end+0xfffe49a4>
   4bf18:	8824977a 	slli	r18,r17,29
   4bf1c:	4010d0fa 	srli	r8,r8,3
   4bf20:	8822927a 	slli	r17,r17,9
   4bf24:	1081ffcc 	andi	r2,r2,2047
   4bf28:	9224b03a 	or	r18,r18,r8
   4bf2c:	880ad33a 	srli	r5,r17,12
   4bf30:	98c0004c 	andi	r3,r19,1
   4bf34:	003edf06 	br	4bab4 <__alt_data_end+0xfffe49b4>
   4bf38:	8080022c 	andhi	r2,r16,8
   4bf3c:	10001226 	beq	r2,zero,4bf88 <__divdf3+0x650>
   4bf40:	8880022c 	andhi	r2,r17,8
   4bf44:	1000101e 	bne	r2,zero,4bf88 <__divdf3+0x650>
   4bf48:	00800434 	movhi	r2,16
   4bf4c:	89400234 	orhi	r5,r17,8
   4bf50:	10bfffc4 	addi	r2,r2,-1
   4bf54:	b007883a 	mov	r3,r22
   4bf58:	288a703a 	and	r5,r5,r2
   4bf5c:	4025883a 	mov	r18,r8
   4bf60:	003f3106 	br	4bc28 <__alt_data_end+0xfffe4b28>
   4bf64:	008000c4 	movi	r2,3
   4bf68:	3880a626 	beq	r7,r2,4c204 <__divdf3+0x8cc>
   4bf6c:	00800044 	movi	r2,1
   4bf70:	3880521e 	bne	r7,r2,4c0bc <__divdf3+0x784>
   4bf74:	b807883a 	mov	r3,r23
   4bf78:	0005883a 	mov	r2,zero
   4bf7c:	000b883a 	mov	r5,zero
   4bf80:	0025883a 	mov	r18,zero
   4bf84:	003ecb06 	br	4bab4 <__alt_data_end+0xfffe49b4>
   4bf88:	00800434 	movhi	r2,16
   4bf8c:	81400234 	orhi	r5,r16,8
   4bf90:	10bfffc4 	addi	r2,r2,-1
   4bf94:	a007883a 	mov	r3,r20
   4bf98:	288a703a 	and	r5,r5,r2
   4bf9c:	003f2206 	br	4bc28 <__alt_data_end+0xfffe4b28>
   4bfa0:	183fca26 	beq	r3,zero,4becc <__alt_data_end+0xfffe4dcc>
   4bfa4:	e5ef883a 	add	r23,fp,r23
   4bfa8:	40bfffc4 	addi	r2,r8,-1
   4bfac:	bf00392e 	bgeu	r23,fp,4c094 <__divdf3+0x75c>
   4bfb0:	1011883a 	mov	r8,r2
   4bfb4:	ba7fc41e 	bne	r23,r9,4bec8 <__alt_data_end+0xfffe4dc8>
   4bfb8:	b0ffc31e 	bne	r22,r3,4bec8 <__alt_data_end+0xfffe4dc8>
   4bfbc:	003fc306 	br	4becc <__alt_data_end+0xfffe4dcc>
   4bfc0:	143ff604 	addi	r16,r2,-40
   4bfc4:	9c20983a 	sll	r16,r19,r16
   4bfc8:	0025883a 	mov	r18,zero
   4bfcc:	003ee206 	br	4bb58 <__alt_data_end+0xfffe4a58>
   4bfd0:	d9800315 	stw	r6,12(sp)
   4bfd4:	d9c00215 	stw	r7,8(sp)
   4bfd8:	0040d700 	call	40d70 <__clzsi2>
   4bfdc:	10800804 	addi	r2,r2,32
   4bfe0:	d9c00217 	ldw	r7,8(sp)
   4bfe4:	d9800317 	ldw	r6,12(sp)
   4bfe8:	003ed106 	br	4bb30 <__alt_data_end+0xfffe4a30>
   4bfec:	147ff604 	addi	r17,r2,-40
   4bff0:	3462983a 	sll	r17,r6,r17
   4bff4:	0011883a 	mov	r8,zero
   4bff8:	003ef506 	br	4bbd0 <__alt_data_end+0xfffe4ad0>
   4bffc:	3009883a 	mov	r4,r6
   4c000:	d9800315 	stw	r6,12(sp)
   4c004:	da400115 	stw	r9,4(sp)
   4c008:	0040d700 	call	40d70 <__clzsi2>
   4c00c:	10800804 	addi	r2,r2,32
   4c010:	da400117 	ldw	r9,4(sp)
   4c014:	d9800317 	ldw	r6,12(sp)
   4c018:	003ee306 	br	4bba8 <__alt_data_end+0xfffe4aa8>
   4c01c:	85a1883a 	add	r16,r16,r22
   4c020:	8585803a 	cmpltu	r2,r16,r22
   4c024:	1705883a 	add	r2,r2,fp
   4c028:	14a5883a 	add	r18,r2,r18
   4c02c:	88bfffc4 	addi	r2,r17,-1
   4c030:	e4800c2e 	bgeu	fp,r18,4c064 <__divdf3+0x72c>
   4c034:	90c03e36 	bltu	r18,r3,4c130 <__divdf3+0x7f8>
   4c038:	1c806926 	beq	r3,r18,4c1e0 <__divdf3+0x8a8>
   4c03c:	90c7c83a 	sub	r3,r18,r3
   4c040:	1023883a 	mov	r17,r2
   4c044:	003f5206 	br	4bd90 <__alt_data_end+0xfffe4c90>
   4c048:	923f0436 	bltu	r18,r8,4bc5c <__alt_data_end+0xfffe4b5c>
   4c04c:	800897fa 	slli	r4,r16,31
   4c050:	9004d07a 	srli	r2,r18,1
   4c054:	8006d07a 	srli	r3,r16,1
   4c058:	902097fa 	slli	r16,r18,31
   4c05c:	20a4b03a 	or	r18,r4,r2
   4c060:	003f0106 	br	4bc68 <__alt_data_end+0xfffe4b68>
   4c064:	e4bff51e 	bne	fp,r18,4c03c <__alt_data_end+0xfffe4f3c>
   4c068:	85bff22e 	bgeu	r16,r22,4c034 <__alt_data_end+0xfffe4f34>
   4c06c:	e0c7c83a 	sub	r3,fp,r3
   4c070:	1023883a 	mov	r17,r2
   4c074:	003f4606 	br	4bd90 <__alt_data_end+0xfffe4c90>
   4c078:	100f883a 	mov	r7,r2
   4c07c:	003f2b06 	br	4bd2c <__alt_data_end+0xfffe4c2c>
   4c080:	180d883a 	mov	r6,r3
   4c084:	003f1306 	br	4bcd4 <__alt_data_end+0xfffe4bd4>
   4c088:	813fe436 	bltu	r16,r4,4c01c <__alt_data_end+0xfffe4f1c>
   4c08c:	0007883a 	mov	r3,zero
   4c090:	003f3f06 	br	4bd90 <__alt_data_end+0xfffe4c90>
   4c094:	ba402c36 	bltu	r23,r9,4c148 <__divdf3+0x810>
   4c098:	4dc05426 	beq	r9,r23,4c1ec <__divdf3+0x8b4>
   4c09c:	1011883a 	mov	r8,r2
   4c0a0:	003f8906 	br	4bec8 <__alt_data_end+0xfffe4dc8>
   4c0a4:	023fffc4 	movi	r8,-1
   4c0a8:	003f8806 	br	4becc <__alt_data_end+0xfffe4dcc>
   4c0ac:	1811883a 	mov	r8,r3
   4c0b0:	003f5406 	br	4be04 <__alt_data_end+0xfffe4d04>
   4c0b4:	1025883a 	mov	r18,r2
   4c0b8:	003f6d06 	br	4be70 <__alt_data_end+0xfffe4d70>
   4c0bc:	b827883a 	mov	r19,r23
   4c0c0:	003f8206 	br	4becc <__alt_data_end+0xfffe4dcc>
   4c0c4:	010007c4 	movi	r4,31
   4c0c8:	20c02616 	blt	r4,r3,4c164 <__divdf3+0x82c>
   4c0cc:	00800804 	movi	r2,32
   4c0d0:	10c5c83a 	sub	r2,r2,r3
   4c0d4:	888a983a 	sll	r5,r17,r2
   4c0d8:	40c8d83a 	srl	r4,r8,r3
   4c0dc:	4084983a 	sll	r2,r8,r2
   4c0e0:	88e2d83a 	srl	r17,r17,r3
   4c0e4:	2906b03a 	or	r3,r5,r4
   4c0e8:	1004c03a 	cmpne	r2,r2,zero
   4c0ec:	1886b03a 	or	r3,r3,r2
   4c0f0:	188001cc 	andi	r2,r3,7
   4c0f4:	10000726 	beq	r2,zero,4c114 <__divdf3+0x7dc>
   4c0f8:	188003cc 	andi	r2,r3,15
   4c0fc:	01000104 	movi	r4,4
   4c100:	11000426 	beq	r2,r4,4c114 <__divdf3+0x7dc>
   4c104:	1805883a 	mov	r2,r3
   4c108:	10c00104 	addi	r3,r2,4
   4c10c:	1885803a 	cmpltu	r2,r3,r2
   4c110:	88a3883a 	add	r17,r17,r2
   4c114:	8880202c 	andhi	r2,r17,128
   4c118:	10002726 	beq	r2,zero,4c1b8 <__divdf3+0x880>
   4c11c:	98c0004c 	andi	r3,r19,1
   4c120:	00800044 	movi	r2,1
   4c124:	000b883a 	mov	r5,zero
   4c128:	0025883a 	mov	r18,zero
   4c12c:	003e6106 	br	4bab4 <__alt_data_end+0xfffe49b4>
   4c130:	85a1883a 	add	r16,r16,r22
   4c134:	8585803a 	cmpltu	r2,r16,r22
   4c138:	1705883a 	add	r2,r2,fp
   4c13c:	14a5883a 	add	r18,r2,r18
   4c140:	8c7fff84 	addi	r17,r17,-2
   4c144:	003f1106 	br	4bd8c <__alt_data_end+0xfffe4c8c>
   4c148:	b589883a 	add	r4,r22,r22
   4c14c:	25ad803a 	cmpltu	r22,r4,r22
   4c150:	b739883a 	add	fp,r22,fp
   4c154:	40bfff84 	addi	r2,r8,-2
   4c158:	bf2f883a 	add	r23,r23,fp
   4c15c:	202d883a 	mov	r22,r4
   4c160:	003f9306 	br	4bfb0 <__alt_data_end+0xfffe4eb0>
   4c164:	013ff844 	movi	r4,-31
   4c168:	2085c83a 	sub	r2,r4,r2
   4c16c:	8888d83a 	srl	r4,r17,r2
   4c170:	00800804 	movi	r2,32
   4c174:	18802126 	beq	r3,r2,4c1fc <__divdf3+0x8c4>
   4c178:	00801004 	movi	r2,64
   4c17c:	10c5c83a 	sub	r2,r2,r3
   4c180:	8884983a 	sll	r2,r17,r2
   4c184:	1204b03a 	or	r2,r2,r8
   4c188:	1004c03a 	cmpne	r2,r2,zero
   4c18c:	2084b03a 	or	r2,r4,r2
   4c190:	144001cc 	andi	r17,r2,7
   4c194:	88000d1e 	bne	r17,zero,4c1cc <__divdf3+0x894>
   4c198:	000b883a 	mov	r5,zero
   4c19c:	1024d0fa 	srli	r18,r2,3
   4c1a0:	98c0004c 	andi	r3,r19,1
   4c1a4:	0005883a 	mov	r2,zero
   4c1a8:	9464b03a 	or	r18,r18,r17
   4c1ac:	003e4106 	br	4bab4 <__alt_data_end+0xfffe49b4>
   4c1b0:	1007883a 	mov	r3,r2
   4c1b4:	0023883a 	mov	r17,zero
   4c1b8:	880a927a 	slli	r5,r17,9
   4c1bc:	1805883a 	mov	r2,r3
   4c1c0:	8822977a 	slli	r17,r17,29
   4c1c4:	280ad33a 	srli	r5,r5,12
   4c1c8:	003ff406 	br	4c19c <__alt_data_end+0xfffe509c>
   4c1cc:	10c003cc 	andi	r3,r2,15
   4c1d0:	01000104 	movi	r4,4
   4c1d4:	193ff626 	beq	r3,r4,4c1b0 <__alt_data_end+0xfffe50b0>
   4c1d8:	0023883a 	mov	r17,zero
   4c1dc:	003fca06 	br	4c108 <__alt_data_end+0xfffe5008>
   4c1e0:	813fd336 	bltu	r16,r4,4c130 <__alt_data_end+0xfffe5030>
   4c1e4:	1023883a 	mov	r17,r2
   4c1e8:	003fa806 	br	4c08c <__alt_data_end+0xfffe4f8c>
   4c1ec:	b0ffd636 	bltu	r22,r3,4c148 <__alt_data_end+0xfffe5048>
   4c1f0:	1011883a 	mov	r8,r2
   4c1f4:	b0ff341e 	bne	r22,r3,4bec8 <__alt_data_end+0xfffe4dc8>
   4c1f8:	003f3406 	br	4becc <__alt_data_end+0xfffe4dcc>
   4c1fc:	0005883a 	mov	r2,zero
   4c200:	003fe006 	br	4c184 <__alt_data_end+0xfffe5084>
   4c204:	00800434 	movhi	r2,16
   4c208:	89400234 	orhi	r5,r17,8
   4c20c:	10bfffc4 	addi	r2,r2,-1
   4c210:	b807883a 	mov	r3,r23
   4c214:	288a703a 	and	r5,r5,r2
   4c218:	4025883a 	mov	r18,r8
   4c21c:	003e8206 	br	4bc28 <__alt_data_end+0xfffe4b28>

0004c220 <__eqdf2>:
   4c220:	2804d53a 	srli	r2,r5,20
   4c224:	3806d53a 	srli	r3,r7,20
   4c228:	02000434 	movhi	r8,16
   4c22c:	423fffc4 	addi	r8,r8,-1
   4c230:	1081ffcc 	andi	r2,r2,2047
   4c234:	0281ffc4 	movi	r10,2047
   4c238:	2a12703a 	and	r9,r5,r8
   4c23c:	18c1ffcc 	andi	r3,r3,2047
   4c240:	3a10703a 	and	r8,r7,r8
   4c244:	280ad7fa 	srli	r5,r5,31
   4c248:	380ed7fa 	srli	r7,r7,31
   4c24c:	12801026 	beq	r2,r10,4c290 <__eqdf2+0x70>
   4c250:	0281ffc4 	movi	r10,2047
   4c254:	1a800a26 	beq	r3,r10,4c280 <__eqdf2+0x60>
   4c258:	10c00226 	beq	r2,r3,4c264 <__eqdf2+0x44>
   4c25c:	00800044 	movi	r2,1
   4c260:	f800283a 	ret
   4c264:	4a3ffd1e 	bne	r9,r8,4c25c <__alt_data_end+0xfffe515c>
   4c268:	21bffc1e 	bne	r4,r6,4c25c <__alt_data_end+0xfffe515c>
   4c26c:	29c00c26 	beq	r5,r7,4c2a0 <__eqdf2+0x80>
   4c270:	103ffa1e 	bne	r2,zero,4c25c <__alt_data_end+0xfffe515c>
   4c274:	2244b03a 	or	r2,r4,r9
   4c278:	1004c03a 	cmpne	r2,r2,zero
   4c27c:	f800283a 	ret
   4c280:	3214b03a 	or	r10,r6,r8
   4c284:	503ff426 	beq	r10,zero,4c258 <__alt_data_end+0xfffe5158>
   4c288:	00800044 	movi	r2,1
   4c28c:	f800283a 	ret
   4c290:	2254b03a 	or	r10,r4,r9
   4c294:	503fee26 	beq	r10,zero,4c250 <__alt_data_end+0xfffe5150>
   4c298:	00800044 	movi	r2,1
   4c29c:	f800283a 	ret
   4c2a0:	0005883a 	mov	r2,zero
   4c2a4:	f800283a 	ret

0004c2a8 <__gedf2>:
   4c2a8:	2804d53a 	srli	r2,r5,20
   4c2ac:	3806d53a 	srli	r3,r7,20
   4c2b0:	02000434 	movhi	r8,16
   4c2b4:	423fffc4 	addi	r8,r8,-1
   4c2b8:	1081ffcc 	andi	r2,r2,2047
   4c2bc:	0241ffc4 	movi	r9,2047
   4c2c0:	2a14703a 	and	r10,r5,r8
   4c2c4:	18c1ffcc 	andi	r3,r3,2047
   4c2c8:	3a10703a 	and	r8,r7,r8
   4c2cc:	280ad7fa 	srli	r5,r5,31
   4c2d0:	380ed7fa 	srli	r7,r7,31
   4c2d4:	12401d26 	beq	r2,r9,4c34c <__gedf2+0xa4>
   4c2d8:	0241ffc4 	movi	r9,2047
   4c2dc:	1a401226 	beq	r3,r9,4c328 <__gedf2+0x80>
   4c2e0:	1000081e 	bne	r2,zero,4c304 <__gedf2+0x5c>
   4c2e4:	2296b03a 	or	r11,r4,r10
   4c2e8:	5813003a 	cmpeq	r9,r11,zero
   4c2ec:	1800091e 	bne	r3,zero,4c314 <__gedf2+0x6c>
   4c2f0:	3218b03a 	or	r12,r6,r8
   4c2f4:	6000071e 	bne	r12,zero,4c314 <__gedf2+0x6c>
   4c2f8:	0005883a 	mov	r2,zero
   4c2fc:	5800101e 	bne	r11,zero,4c340 <__gedf2+0x98>
   4c300:	f800283a 	ret
   4c304:	18000c1e 	bne	r3,zero,4c338 <__gedf2+0x90>
   4c308:	3212b03a 	or	r9,r6,r8
   4c30c:	48000c26 	beq	r9,zero,4c340 <__gedf2+0x98>
   4c310:	0013883a 	mov	r9,zero
   4c314:	39c03fcc 	andi	r7,r7,255
   4c318:	48000826 	beq	r9,zero,4c33c <__gedf2+0x94>
   4c31c:	38000926 	beq	r7,zero,4c344 <__gedf2+0x9c>
   4c320:	00800044 	movi	r2,1
   4c324:	f800283a 	ret
   4c328:	3212b03a 	or	r9,r6,r8
   4c32c:	483fec26 	beq	r9,zero,4c2e0 <__alt_data_end+0xfffe51e0>
   4c330:	00bfff84 	movi	r2,-2
   4c334:	f800283a 	ret
   4c338:	39c03fcc 	andi	r7,r7,255
   4c33c:	29c00626 	beq	r5,r7,4c358 <__gedf2+0xb0>
   4c340:	283ff726 	beq	r5,zero,4c320 <__alt_data_end+0xfffe5220>
   4c344:	00bfffc4 	movi	r2,-1
   4c348:	f800283a 	ret
   4c34c:	2292b03a 	or	r9,r4,r10
   4c350:	483fe126 	beq	r9,zero,4c2d8 <__alt_data_end+0xfffe51d8>
   4c354:	003ff606 	br	4c330 <__alt_data_end+0xfffe5230>
   4c358:	18bff916 	blt	r3,r2,4c340 <__alt_data_end+0xfffe5240>
   4c35c:	10c00316 	blt	r2,r3,4c36c <__gedf2+0xc4>
   4c360:	42bff736 	bltu	r8,r10,4c340 <__alt_data_end+0xfffe5240>
   4c364:	52000326 	beq	r10,r8,4c374 <__gedf2+0xcc>
   4c368:	5200042e 	bgeu	r10,r8,4c37c <__gedf2+0xd4>
   4c36c:	283fec1e 	bne	r5,zero,4c320 <__alt_data_end+0xfffe5220>
   4c370:	003ff406 	br	4c344 <__alt_data_end+0xfffe5244>
   4c374:	313ff236 	bltu	r6,r4,4c340 <__alt_data_end+0xfffe5240>
   4c378:	21bffc36 	bltu	r4,r6,4c36c <__alt_data_end+0xfffe526c>
   4c37c:	0005883a 	mov	r2,zero
   4c380:	f800283a 	ret

0004c384 <__ledf2>:
   4c384:	2804d53a 	srli	r2,r5,20
   4c388:	3810d53a 	srli	r8,r7,20
   4c38c:	00c00434 	movhi	r3,16
   4c390:	18ffffc4 	addi	r3,r3,-1
   4c394:	1081ffcc 	andi	r2,r2,2047
   4c398:	0241ffc4 	movi	r9,2047
   4c39c:	28d4703a 	and	r10,r5,r3
   4c3a0:	4201ffcc 	andi	r8,r8,2047
   4c3a4:	38c6703a 	and	r3,r7,r3
   4c3a8:	280ad7fa 	srli	r5,r5,31
   4c3ac:	380ed7fa 	srli	r7,r7,31
   4c3b0:	12401f26 	beq	r2,r9,4c430 <__ledf2+0xac>
   4c3b4:	0241ffc4 	movi	r9,2047
   4c3b8:	42401426 	beq	r8,r9,4c40c <__ledf2+0x88>
   4c3bc:	1000091e 	bne	r2,zero,4c3e4 <__ledf2+0x60>
   4c3c0:	2296b03a 	or	r11,r4,r10
   4c3c4:	5813003a 	cmpeq	r9,r11,zero
   4c3c8:	29403fcc 	andi	r5,r5,255
   4c3cc:	40000a1e 	bne	r8,zero,4c3f8 <__ledf2+0x74>
   4c3d0:	30d8b03a 	or	r12,r6,r3
   4c3d4:	6000081e 	bne	r12,zero,4c3f8 <__ledf2+0x74>
   4c3d8:	0005883a 	mov	r2,zero
   4c3dc:	5800111e 	bne	r11,zero,4c424 <__ledf2+0xa0>
   4c3e0:	f800283a 	ret
   4c3e4:	29403fcc 	andi	r5,r5,255
   4c3e8:	40000c1e 	bne	r8,zero,4c41c <__ledf2+0x98>
   4c3ec:	30d2b03a 	or	r9,r6,r3
   4c3f0:	48000c26 	beq	r9,zero,4c424 <__ledf2+0xa0>
   4c3f4:	0013883a 	mov	r9,zero
   4c3f8:	39c03fcc 	andi	r7,r7,255
   4c3fc:	48000826 	beq	r9,zero,4c420 <__ledf2+0x9c>
   4c400:	38001126 	beq	r7,zero,4c448 <__ledf2+0xc4>
   4c404:	00800044 	movi	r2,1
   4c408:	f800283a 	ret
   4c40c:	30d2b03a 	or	r9,r6,r3
   4c410:	483fea26 	beq	r9,zero,4c3bc <__alt_data_end+0xfffe52bc>
   4c414:	00800084 	movi	r2,2
   4c418:	f800283a 	ret
   4c41c:	39c03fcc 	andi	r7,r7,255
   4c420:	39400726 	beq	r7,r5,4c440 <__ledf2+0xbc>
   4c424:	2800081e 	bne	r5,zero,4c448 <__ledf2+0xc4>
   4c428:	00800044 	movi	r2,1
   4c42c:	f800283a 	ret
   4c430:	2292b03a 	or	r9,r4,r10
   4c434:	483fdf26 	beq	r9,zero,4c3b4 <__alt_data_end+0xfffe52b4>
   4c438:	00800084 	movi	r2,2
   4c43c:	f800283a 	ret
   4c440:	4080030e 	bge	r8,r2,4c450 <__ledf2+0xcc>
   4c444:	383fef26 	beq	r7,zero,4c404 <__alt_data_end+0xfffe5304>
   4c448:	00bfffc4 	movi	r2,-1
   4c44c:	f800283a 	ret
   4c450:	123feb16 	blt	r2,r8,4c400 <__alt_data_end+0xfffe5300>
   4c454:	1abff336 	bltu	r3,r10,4c424 <__alt_data_end+0xfffe5324>
   4c458:	50c00326 	beq	r10,r3,4c468 <__ledf2+0xe4>
   4c45c:	50c0042e 	bgeu	r10,r3,4c470 <__ledf2+0xec>
   4c460:	283fe81e 	bne	r5,zero,4c404 <__alt_data_end+0xfffe5304>
   4c464:	003ff806 	br	4c448 <__alt_data_end+0xfffe5348>
   4c468:	313fee36 	bltu	r6,r4,4c424 <__alt_data_end+0xfffe5324>
   4c46c:	21bffc36 	bltu	r4,r6,4c460 <__alt_data_end+0xfffe5360>
   4c470:	0005883a 	mov	r2,zero
   4c474:	f800283a 	ret

0004c478 <__subdf3>:
   4c478:	02000434 	movhi	r8,16
   4c47c:	423fffc4 	addi	r8,r8,-1
   4c480:	defffb04 	addi	sp,sp,-20
   4c484:	2a14703a 	and	r10,r5,r8
   4c488:	3812d53a 	srli	r9,r7,20
   4c48c:	3a10703a 	and	r8,r7,r8
   4c490:	2006d77a 	srli	r3,r4,29
   4c494:	3004d77a 	srli	r2,r6,29
   4c498:	dc000015 	stw	r16,0(sp)
   4c49c:	501490fa 	slli	r10,r10,3
   4c4a0:	2820d53a 	srli	r16,r5,20
   4c4a4:	401090fa 	slli	r8,r8,3
   4c4a8:	dc800215 	stw	r18,8(sp)
   4c4ac:	dc400115 	stw	r17,4(sp)
   4c4b0:	dfc00415 	stw	ra,16(sp)
   4c4b4:	202290fa 	slli	r17,r4,3
   4c4b8:	dcc00315 	stw	r19,12(sp)
   4c4bc:	4a41ffcc 	andi	r9,r9,2047
   4c4c0:	0101ffc4 	movi	r4,2047
   4c4c4:	2824d7fa 	srli	r18,r5,31
   4c4c8:	8401ffcc 	andi	r16,r16,2047
   4c4cc:	50c6b03a 	or	r3,r10,r3
   4c4d0:	380ed7fa 	srli	r7,r7,31
   4c4d4:	408ab03a 	or	r5,r8,r2
   4c4d8:	300c90fa 	slli	r6,r6,3
   4c4dc:	49009626 	beq	r9,r4,4c738 <__subdf3+0x2c0>
   4c4e0:	39c0005c 	xori	r7,r7,1
   4c4e4:	8245c83a 	sub	r2,r16,r9
   4c4e8:	3c807426 	beq	r7,r18,4c6bc <__subdf3+0x244>
   4c4ec:	0080af0e 	bge	zero,r2,4c7ac <__subdf3+0x334>
   4c4f0:	48002a1e 	bne	r9,zero,4c59c <__subdf3+0x124>
   4c4f4:	2988b03a 	or	r4,r5,r6
   4c4f8:	20009a1e 	bne	r4,zero,4c764 <__subdf3+0x2ec>
   4c4fc:	888001cc 	andi	r2,r17,7
   4c500:	10000726 	beq	r2,zero,4c520 <__subdf3+0xa8>
   4c504:	888003cc 	andi	r2,r17,15
   4c508:	01000104 	movi	r4,4
   4c50c:	11000426 	beq	r2,r4,4c520 <__subdf3+0xa8>
   4c510:	890b883a 	add	r5,r17,r4
   4c514:	2c63803a 	cmpltu	r17,r5,r17
   4c518:	1c47883a 	add	r3,r3,r17
   4c51c:	2823883a 	mov	r17,r5
   4c520:	1880202c 	andhi	r2,r3,128
   4c524:	10005926 	beq	r2,zero,4c68c <__subdf3+0x214>
   4c528:	84000044 	addi	r16,r16,1
   4c52c:	0081ffc4 	movi	r2,2047
   4c530:	8080be26 	beq	r16,r2,4c82c <__subdf3+0x3b4>
   4c534:	017fe034 	movhi	r5,65408
   4c538:	297fffc4 	addi	r5,r5,-1
   4c53c:	1946703a 	and	r3,r3,r5
   4c540:	1804977a 	slli	r2,r3,29
   4c544:	1806927a 	slli	r3,r3,9
   4c548:	8822d0fa 	srli	r17,r17,3
   4c54c:	8401ffcc 	andi	r16,r16,2047
   4c550:	180ad33a 	srli	r5,r3,12
   4c554:	9100004c 	andi	r4,r18,1
   4c558:	1444b03a 	or	r2,r2,r17
   4c55c:	80c1ffcc 	andi	r3,r16,2047
   4c560:	1820953a 	slli	r16,r3,20
   4c564:	20c03fcc 	andi	r3,r4,255
   4c568:	180897fa 	slli	r4,r3,31
   4c56c:	00c00434 	movhi	r3,16
   4c570:	18ffffc4 	addi	r3,r3,-1
   4c574:	28c6703a 	and	r3,r5,r3
   4c578:	1c06b03a 	or	r3,r3,r16
   4c57c:	1906b03a 	or	r3,r3,r4
   4c580:	dfc00417 	ldw	ra,16(sp)
   4c584:	dcc00317 	ldw	r19,12(sp)
   4c588:	dc800217 	ldw	r18,8(sp)
   4c58c:	dc400117 	ldw	r17,4(sp)
   4c590:	dc000017 	ldw	r16,0(sp)
   4c594:	dec00504 	addi	sp,sp,20
   4c598:	f800283a 	ret
   4c59c:	0101ffc4 	movi	r4,2047
   4c5a0:	813fd626 	beq	r16,r4,4c4fc <__alt_data_end+0xfffe53fc>
   4c5a4:	29402034 	orhi	r5,r5,128
   4c5a8:	01000e04 	movi	r4,56
   4c5ac:	2080a316 	blt	r4,r2,4c83c <__subdf3+0x3c4>
   4c5b0:	010007c4 	movi	r4,31
   4c5b4:	2080c616 	blt	r4,r2,4c8d0 <__subdf3+0x458>
   4c5b8:	01000804 	movi	r4,32
   4c5bc:	2089c83a 	sub	r4,r4,r2
   4c5c0:	2910983a 	sll	r8,r5,r4
   4c5c4:	308ed83a 	srl	r7,r6,r2
   4c5c8:	3108983a 	sll	r4,r6,r4
   4c5cc:	2884d83a 	srl	r2,r5,r2
   4c5d0:	41ccb03a 	or	r6,r8,r7
   4c5d4:	2008c03a 	cmpne	r4,r4,zero
   4c5d8:	310cb03a 	or	r6,r6,r4
   4c5dc:	898dc83a 	sub	r6,r17,r6
   4c5e0:	89a3803a 	cmpltu	r17,r17,r6
   4c5e4:	1887c83a 	sub	r3,r3,r2
   4c5e8:	1c47c83a 	sub	r3,r3,r17
   4c5ec:	3023883a 	mov	r17,r6
   4c5f0:	1880202c 	andhi	r2,r3,128
   4c5f4:	10002326 	beq	r2,zero,4c684 <__subdf3+0x20c>
   4c5f8:	04c02034 	movhi	r19,128
   4c5fc:	9cffffc4 	addi	r19,r19,-1
   4c600:	1ce6703a 	and	r19,r3,r19
   4c604:	98007a26 	beq	r19,zero,4c7f0 <__subdf3+0x378>
   4c608:	9809883a 	mov	r4,r19
   4c60c:	0040d700 	call	40d70 <__clzsi2>
   4c610:	113ffe04 	addi	r4,r2,-8
   4c614:	00c007c4 	movi	r3,31
   4c618:	19007b16 	blt	r3,r4,4c808 <__subdf3+0x390>
   4c61c:	00800804 	movi	r2,32
   4c620:	1105c83a 	sub	r2,r2,r4
   4c624:	8884d83a 	srl	r2,r17,r2
   4c628:	9906983a 	sll	r3,r19,r4
   4c62c:	8922983a 	sll	r17,r17,r4
   4c630:	10c4b03a 	or	r2,r2,r3
   4c634:	24007816 	blt	r4,r16,4c818 <__subdf3+0x3a0>
   4c638:	2421c83a 	sub	r16,r4,r16
   4c63c:	80c00044 	addi	r3,r16,1
   4c640:	010007c4 	movi	r4,31
   4c644:	20c09516 	blt	r4,r3,4c89c <__subdf3+0x424>
   4c648:	01400804 	movi	r5,32
   4c64c:	28cbc83a 	sub	r5,r5,r3
   4c650:	88c8d83a 	srl	r4,r17,r3
   4c654:	8962983a 	sll	r17,r17,r5
   4c658:	114a983a 	sll	r5,r2,r5
   4c65c:	10c6d83a 	srl	r3,r2,r3
   4c660:	8804c03a 	cmpne	r2,r17,zero
   4c664:	290ab03a 	or	r5,r5,r4
   4c668:	28a2b03a 	or	r17,r5,r2
   4c66c:	0021883a 	mov	r16,zero
   4c670:	003fa206 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4c674:	2090b03a 	or	r8,r4,r2
   4c678:	40018e26 	beq	r8,zero,4ccb4 <__subdf3+0x83c>
   4c67c:	1007883a 	mov	r3,r2
   4c680:	2023883a 	mov	r17,r4
   4c684:	888001cc 	andi	r2,r17,7
   4c688:	103f9e1e 	bne	r2,zero,4c504 <__alt_data_end+0xfffe5404>
   4c68c:	1804977a 	slli	r2,r3,29
   4c690:	8822d0fa 	srli	r17,r17,3
   4c694:	1810d0fa 	srli	r8,r3,3
   4c698:	9100004c 	andi	r4,r18,1
   4c69c:	1444b03a 	or	r2,r2,r17
   4c6a0:	00c1ffc4 	movi	r3,2047
   4c6a4:	80c02826 	beq	r16,r3,4c748 <__subdf3+0x2d0>
   4c6a8:	01400434 	movhi	r5,16
   4c6ac:	297fffc4 	addi	r5,r5,-1
   4c6b0:	80e0703a 	and	r16,r16,r3
   4c6b4:	414a703a 	and	r5,r8,r5
   4c6b8:	003fa806 	br	4c55c <__alt_data_end+0xfffe545c>
   4c6bc:	0080630e 	bge	zero,r2,4c84c <__subdf3+0x3d4>
   4c6c0:	48003026 	beq	r9,zero,4c784 <__subdf3+0x30c>
   4c6c4:	0101ffc4 	movi	r4,2047
   4c6c8:	813f8c26 	beq	r16,r4,4c4fc <__alt_data_end+0xfffe53fc>
   4c6cc:	29402034 	orhi	r5,r5,128
   4c6d0:	01000e04 	movi	r4,56
   4c6d4:	2080a90e 	bge	r4,r2,4c97c <__subdf3+0x504>
   4c6d8:	298cb03a 	or	r6,r5,r6
   4c6dc:	3012c03a 	cmpne	r9,r6,zero
   4c6e0:	0005883a 	mov	r2,zero
   4c6e4:	4c53883a 	add	r9,r9,r17
   4c6e8:	4c63803a 	cmpltu	r17,r9,r17
   4c6ec:	10c7883a 	add	r3,r2,r3
   4c6f0:	88c7883a 	add	r3,r17,r3
   4c6f4:	4823883a 	mov	r17,r9
   4c6f8:	1880202c 	andhi	r2,r3,128
   4c6fc:	1000d026 	beq	r2,zero,4ca40 <__subdf3+0x5c8>
   4c700:	84000044 	addi	r16,r16,1
   4c704:	0081ffc4 	movi	r2,2047
   4c708:	8080fe26 	beq	r16,r2,4cb04 <__subdf3+0x68c>
   4c70c:	00bfe034 	movhi	r2,65408
   4c710:	10bfffc4 	addi	r2,r2,-1
   4c714:	1886703a 	and	r3,r3,r2
   4c718:	880ad07a 	srli	r5,r17,1
   4c71c:	180497fa 	slli	r2,r3,31
   4c720:	8900004c 	andi	r4,r17,1
   4c724:	2922b03a 	or	r17,r5,r4
   4c728:	1806d07a 	srli	r3,r3,1
   4c72c:	1462b03a 	or	r17,r2,r17
   4c730:	3825883a 	mov	r18,r7
   4c734:	003f7106 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4c738:	2984b03a 	or	r2,r5,r6
   4c73c:	103f6826 	beq	r2,zero,4c4e0 <__alt_data_end+0xfffe53e0>
   4c740:	39c03fcc 	andi	r7,r7,255
   4c744:	003f6706 	br	4c4e4 <__alt_data_end+0xfffe53e4>
   4c748:	4086b03a 	or	r3,r8,r2
   4c74c:	18015226 	beq	r3,zero,4cc98 <__subdf3+0x820>
   4c750:	00c00434 	movhi	r3,16
   4c754:	41400234 	orhi	r5,r8,8
   4c758:	18ffffc4 	addi	r3,r3,-1
   4c75c:	28ca703a 	and	r5,r5,r3
   4c760:	003f7e06 	br	4c55c <__alt_data_end+0xfffe545c>
   4c764:	10bfffc4 	addi	r2,r2,-1
   4c768:	1000491e 	bne	r2,zero,4c890 <__subdf3+0x418>
   4c76c:	898fc83a 	sub	r7,r17,r6
   4c770:	89e3803a 	cmpltu	r17,r17,r7
   4c774:	1947c83a 	sub	r3,r3,r5
   4c778:	1c47c83a 	sub	r3,r3,r17
   4c77c:	3823883a 	mov	r17,r7
   4c780:	003f9b06 	br	4c5f0 <__alt_data_end+0xfffe54f0>
   4c784:	2988b03a 	or	r4,r5,r6
   4c788:	203f5c26 	beq	r4,zero,4c4fc <__alt_data_end+0xfffe53fc>
   4c78c:	10bfffc4 	addi	r2,r2,-1
   4c790:	1000931e 	bne	r2,zero,4c9e0 <__subdf3+0x568>
   4c794:	898d883a 	add	r6,r17,r6
   4c798:	3463803a 	cmpltu	r17,r6,r17
   4c79c:	1947883a 	add	r3,r3,r5
   4c7a0:	88c7883a 	add	r3,r17,r3
   4c7a4:	3023883a 	mov	r17,r6
   4c7a8:	003fd306 	br	4c6f8 <__alt_data_end+0xfffe55f8>
   4c7ac:	1000541e 	bne	r2,zero,4c900 <__subdf3+0x488>
   4c7b0:	80800044 	addi	r2,r16,1
   4c7b4:	1081ffcc 	andi	r2,r2,2047
   4c7b8:	01000044 	movi	r4,1
   4c7bc:	2080a20e 	bge	r4,r2,4ca48 <__subdf3+0x5d0>
   4c7c0:	8989c83a 	sub	r4,r17,r6
   4c7c4:	8905803a 	cmpltu	r2,r17,r4
   4c7c8:	1967c83a 	sub	r19,r3,r5
   4c7cc:	98a7c83a 	sub	r19,r19,r2
   4c7d0:	9880202c 	andhi	r2,r19,128
   4c7d4:	10006326 	beq	r2,zero,4c964 <__subdf3+0x4ec>
   4c7d8:	3463c83a 	sub	r17,r6,r17
   4c7dc:	28c7c83a 	sub	r3,r5,r3
   4c7e0:	344d803a 	cmpltu	r6,r6,r17
   4c7e4:	19a7c83a 	sub	r19,r3,r6
   4c7e8:	3825883a 	mov	r18,r7
   4c7ec:	983f861e 	bne	r19,zero,4c608 <__alt_data_end+0xfffe5508>
   4c7f0:	8809883a 	mov	r4,r17
   4c7f4:	0040d700 	call	40d70 <__clzsi2>
   4c7f8:	10800804 	addi	r2,r2,32
   4c7fc:	113ffe04 	addi	r4,r2,-8
   4c800:	00c007c4 	movi	r3,31
   4c804:	193f850e 	bge	r3,r4,4c61c <__alt_data_end+0xfffe551c>
   4c808:	10bff604 	addi	r2,r2,-40
   4c80c:	8884983a 	sll	r2,r17,r2
   4c810:	0023883a 	mov	r17,zero
   4c814:	243f880e 	bge	r4,r16,4c638 <__alt_data_end+0xfffe5538>
   4c818:	00ffe034 	movhi	r3,65408
   4c81c:	18ffffc4 	addi	r3,r3,-1
   4c820:	8121c83a 	sub	r16,r16,r4
   4c824:	10c6703a 	and	r3,r2,r3
   4c828:	003f3406 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4c82c:	9100004c 	andi	r4,r18,1
   4c830:	000b883a 	mov	r5,zero
   4c834:	0005883a 	mov	r2,zero
   4c838:	003f4806 	br	4c55c <__alt_data_end+0xfffe545c>
   4c83c:	298cb03a 	or	r6,r5,r6
   4c840:	300cc03a 	cmpne	r6,r6,zero
   4c844:	0005883a 	mov	r2,zero
   4c848:	003f6406 	br	4c5dc <__alt_data_end+0xfffe54dc>
   4c84c:	10009a1e 	bne	r2,zero,4cab8 <__subdf3+0x640>
   4c850:	82400044 	addi	r9,r16,1
   4c854:	4881ffcc 	andi	r2,r9,2047
   4c858:	02800044 	movi	r10,1
   4c85c:	5080670e 	bge	r10,r2,4c9fc <__subdf3+0x584>
   4c860:	0081ffc4 	movi	r2,2047
   4c864:	4880af26 	beq	r9,r2,4cb24 <__subdf3+0x6ac>
   4c868:	898d883a 	add	r6,r17,r6
   4c86c:	1945883a 	add	r2,r3,r5
   4c870:	3447803a 	cmpltu	r3,r6,r17
   4c874:	1887883a 	add	r3,r3,r2
   4c878:	182297fa 	slli	r17,r3,31
   4c87c:	300cd07a 	srli	r6,r6,1
   4c880:	1806d07a 	srli	r3,r3,1
   4c884:	4821883a 	mov	r16,r9
   4c888:	89a2b03a 	or	r17,r17,r6
   4c88c:	003f1b06 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4c890:	0101ffc4 	movi	r4,2047
   4c894:	813f441e 	bne	r16,r4,4c5a8 <__alt_data_end+0xfffe54a8>
   4c898:	003f1806 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4c89c:	843ff844 	addi	r16,r16,-31
   4c8a0:	01400804 	movi	r5,32
   4c8a4:	1408d83a 	srl	r4,r2,r16
   4c8a8:	19405026 	beq	r3,r5,4c9ec <__subdf3+0x574>
   4c8ac:	01401004 	movi	r5,64
   4c8b0:	28c7c83a 	sub	r3,r5,r3
   4c8b4:	10c4983a 	sll	r2,r2,r3
   4c8b8:	88a2b03a 	or	r17,r17,r2
   4c8bc:	8822c03a 	cmpne	r17,r17,zero
   4c8c0:	2462b03a 	or	r17,r4,r17
   4c8c4:	0007883a 	mov	r3,zero
   4c8c8:	0021883a 	mov	r16,zero
   4c8cc:	003f6d06 	br	4c684 <__alt_data_end+0xfffe5584>
   4c8d0:	11fff804 	addi	r7,r2,-32
   4c8d4:	01000804 	movi	r4,32
   4c8d8:	29ced83a 	srl	r7,r5,r7
   4c8dc:	11004526 	beq	r2,r4,4c9f4 <__subdf3+0x57c>
   4c8e0:	01001004 	movi	r4,64
   4c8e4:	2089c83a 	sub	r4,r4,r2
   4c8e8:	2904983a 	sll	r2,r5,r4
   4c8ec:	118cb03a 	or	r6,r2,r6
   4c8f0:	300cc03a 	cmpne	r6,r6,zero
   4c8f4:	398cb03a 	or	r6,r7,r6
   4c8f8:	0005883a 	mov	r2,zero
   4c8fc:	003f3706 	br	4c5dc <__alt_data_end+0xfffe54dc>
   4c900:	80002a26 	beq	r16,zero,4c9ac <__subdf3+0x534>
   4c904:	0101ffc4 	movi	r4,2047
   4c908:	49006626 	beq	r9,r4,4caa4 <__subdf3+0x62c>
   4c90c:	0085c83a 	sub	r2,zero,r2
   4c910:	18c02034 	orhi	r3,r3,128
   4c914:	01000e04 	movi	r4,56
   4c918:	20807e16 	blt	r4,r2,4cb14 <__subdf3+0x69c>
   4c91c:	010007c4 	movi	r4,31
   4c920:	2080e716 	blt	r4,r2,4ccc0 <__subdf3+0x848>
   4c924:	01000804 	movi	r4,32
   4c928:	2089c83a 	sub	r4,r4,r2
   4c92c:	1914983a 	sll	r10,r3,r4
   4c930:	8890d83a 	srl	r8,r17,r2
   4c934:	8908983a 	sll	r4,r17,r4
   4c938:	1884d83a 	srl	r2,r3,r2
   4c93c:	5222b03a 	or	r17,r10,r8
   4c940:	2006c03a 	cmpne	r3,r4,zero
   4c944:	88e2b03a 	or	r17,r17,r3
   4c948:	3463c83a 	sub	r17,r6,r17
   4c94c:	2885c83a 	sub	r2,r5,r2
   4c950:	344d803a 	cmpltu	r6,r6,r17
   4c954:	1187c83a 	sub	r3,r2,r6
   4c958:	4821883a 	mov	r16,r9
   4c95c:	3825883a 	mov	r18,r7
   4c960:	003f2306 	br	4c5f0 <__alt_data_end+0xfffe54f0>
   4c964:	24d0b03a 	or	r8,r4,r19
   4c968:	40001b1e 	bne	r8,zero,4c9d8 <__subdf3+0x560>
   4c96c:	0005883a 	mov	r2,zero
   4c970:	0009883a 	mov	r4,zero
   4c974:	0021883a 	mov	r16,zero
   4c978:	003f4906 	br	4c6a0 <__alt_data_end+0xfffe55a0>
   4c97c:	010007c4 	movi	r4,31
   4c980:	20803a16 	blt	r4,r2,4ca6c <__subdf3+0x5f4>
   4c984:	01000804 	movi	r4,32
   4c988:	2089c83a 	sub	r4,r4,r2
   4c98c:	2912983a 	sll	r9,r5,r4
   4c990:	3090d83a 	srl	r8,r6,r2
   4c994:	3108983a 	sll	r4,r6,r4
   4c998:	2884d83a 	srl	r2,r5,r2
   4c99c:	4a12b03a 	or	r9,r9,r8
   4c9a0:	2008c03a 	cmpne	r4,r4,zero
   4c9a4:	4912b03a 	or	r9,r9,r4
   4c9a8:	003f4e06 	br	4c6e4 <__alt_data_end+0xfffe55e4>
   4c9ac:	1c48b03a 	or	r4,r3,r17
   4c9b0:	20003c26 	beq	r4,zero,4caa4 <__subdf3+0x62c>
   4c9b4:	0084303a 	nor	r2,zero,r2
   4c9b8:	1000381e 	bne	r2,zero,4ca9c <__subdf3+0x624>
   4c9bc:	3463c83a 	sub	r17,r6,r17
   4c9c0:	28c5c83a 	sub	r2,r5,r3
   4c9c4:	344d803a 	cmpltu	r6,r6,r17
   4c9c8:	1187c83a 	sub	r3,r2,r6
   4c9cc:	4821883a 	mov	r16,r9
   4c9d0:	3825883a 	mov	r18,r7
   4c9d4:	003f0606 	br	4c5f0 <__alt_data_end+0xfffe54f0>
   4c9d8:	2023883a 	mov	r17,r4
   4c9dc:	003f0906 	br	4c604 <__alt_data_end+0xfffe5504>
   4c9e0:	0101ffc4 	movi	r4,2047
   4c9e4:	813f3a1e 	bne	r16,r4,4c6d0 <__alt_data_end+0xfffe55d0>
   4c9e8:	003ec406 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4c9ec:	0005883a 	mov	r2,zero
   4c9f0:	003fb106 	br	4c8b8 <__alt_data_end+0xfffe57b8>
   4c9f4:	0005883a 	mov	r2,zero
   4c9f8:	003fbc06 	br	4c8ec <__alt_data_end+0xfffe57ec>
   4c9fc:	1c44b03a 	or	r2,r3,r17
   4ca00:	80008e1e 	bne	r16,zero,4cc3c <__subdf3+0x7c4>
   4ca04:	1000c826 	beq	r2,zero,4cd28 <__subdf3+0x8b0>
   4ca08:	2984b03a 	or	r2,r5,r6
   4ca0c:	103ebb26 	beq	r2,zero,4c4fc <__alt_data_end+0xfffe53fc>
   4ca10:	8989883a 	add	r4,r17,r6
   4ca14:	1945883a 	add	r2,r3,r5
   4ca18:	2447803a 	cmpltu	r3,r4,r17
   4ca1c:	1887883a 	add	r3,r3,r2
   4ca20:	1880202c 	andhi	r2,r3,128
   4ca24:	2023883a 	mov	r17,r4
   4ca28:	103f1626 	beq	r2,zero,4c684 <__alt_data_end+0xfffe5584>
   4ca2c:	00bfe034 	movhi	r2,65408
   4ca30:	10bfffc4 	addi	r2,r2,-1
   4ca34:	5021883a 	mov	r16,r10
   4ca38:	1886703a 	and	r3,r3,r2
   4ca3c:	003eaf06 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4ca40:	3825883a 	mov	r18,r7
   4ca44:	003f0f06 	br	4c684 <__alt_data_end+0xfffe5584>
   4ca48:	1c44b03a 	or	r2,r3,r17
   4ca4c:	8000251e 	bne	r16,zero,4cae4 <__subdf3+0x66c>
   4ca50:	1000661e 	bne	r2,zero,4cbec <__subdf3+0x774>
   4ca54:	2990b03a 	or	r8,r5,r6
   4ca58:	40009626 	beq	r8,zero,4ccb4 <__subdf3+0x83c>
   4ca5c:	2807883a 	mov	r3,r5
   4ca60:	3023883a 	mov	r17,r6
   4ca64:	3825883a 	mov	r18,r7
   4ca68:	003ea406 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4ca6c:	127ff804 	addi	r9,r2,-32
   4ca70:	01000804 	movi	r4,32
   4ca74:	2a52d83a 	srl	r9,r5,r9
   4ca78:	11008c26 	beq	r2,r4,4ccac <__subdf3+0x834>
   4ca7c:	01001004 	movi	r4,64
   4ca80:	2085c83a 	sub	r2,r4,r2
   4ca84:	2884983a 	sll	r2,r5,r2
   4ca88:	118cb03a 	or	r6,r2,r6
   4ca8c:	300cc03a 	cmpne	r6,r6,zero
   4ca90:	4992b03a 	or	r9,r9,r6
   4ca94:	0005883a 	mov	r2,zero
   4ca98:	003f1206 	br	4c6e4 <__alt_data_end+0xfffe55e4>
   4ca9c:	0101ffc4 	movi	r4,2047
   4caa0:	493f9c1e 	bne	r9,r4,4c914 <__alt_data_end+0xfffe5814>
   4caa4:	2807883a 	mov	r3,r5
   4caa8:	3023883a 	mov	r17,r6
   4caac:	4821883a 	mov	r16,r9
   4cab0:	3825883a 	mov	r18,r7
   4cab4:	003e9106 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4cab8:	80001f1e 	bne	r16,zero,4cb38 <__subdf3+0x6c0>
   4cabc:	1c48b03a 	or	r4,r3,r17
   4cac0:	20005a26 	beq	r4,zero,4cc2c <__subdf3+0x7b4>
   4cac4:	0084303a 	nor	r2,zero,r2
   4cac8:	1000561e 	bne	r2,zero,4cc24 <__subdf3+0x7ac>
   4cacc:	89a3883a 	add	r17,r17,r6
   4cad0:	1945883a 	add	r2,r3,r5
   4cad4:	898d803a 	cmpltu	r6,r17,r6
   4cad8:	3087883a 	add	r3,r6,r2
   4cadc:	4821883a 	mov	r16,r9
   4cae0:	003f0506 	br	4c6f8 <__alt_data_end+0xfffe55f8>
   4cae4:	10002b1e 	bne	r2,zero,4cb94 <__subdf3+0x71c>
   4cae8:	2984b03a 	or	r2,r5,r6
   4caec:	10008026 	beq	r2,zero,4ccf0 <__subdf3+0x878>
   4caf0:	2807883a 	mov	r3,r5
   4caf4:	3023883a 	mov	r17,r6
   4caf8:	3825883a 	mov	r18,r7
   4cafc:	0401ffc4 	movi	r16,2047
   4cb00:	003e7e06 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4cb04:	3809883a 	mov	r4,r7
   4cb08:	0011883a 	mov	r8,zero
   4cb0c:	0005883a 	mov	r2,zero
   4cb10:	003ee306 	br	4c6a0 <__alt_data_end+0xfffe55a0>
   4cb14:	1c62b03a 	or	r17,r3,r17
   4cb18:	8822c03a 	cmpne	r17,r17,zero
   4cb1c:	0005883a 	mov	r2,zero
   4cb20:	003f8906 	br	4c948 <__alt_data_end+0xfffe5848>
   4cb24:	3809883a 	mov	r4,r7
   4cb28:	4821883a 	mov	r16,r9
   4cb2c:	0011883a 	mov	r8,zero
   4cb30:	0005883a 	mov	r2,zero
   4cb34:	003eda06 	br	4c6a0 <__alt_data_end+0xfffe55a0>
   4cb38:	0101ffc4 	movi	r4,2047
   4cb3c:	49003b26 	beq	r9,r4,4cc2c <__subdf3+0x7b4>
   4cb40:	0085c83a 	sub	r2,zero,r2
   4cb44:	18c02034 	orhi	r3,r3,128
   4cb48:	01000e04 	movi	r4,56
   4cb4c:	20806e16 	blt	r4,r2,4cd08 <__subdf3+0x890>
   4cb50:	010007c4 	movi	r4,31
   4cb54:	20807716 	blt	r4,r2,4cd34 <__subdf3+0x8bc>
   4cb58:	01000804 	movi	r4,32
   4cb5c:	2089c83a 	sub	r4,r4,r2
   4cb60:	1914983a 	sll	r10,r3,r4
   4cb64:	8890d83a 	srl	r8,r17,r2
   4cb68:	8908983a 	sll	r4,r17,r4
   4cb6c:	1884d83a 	srl	r2,r3,r2
   4cb70:	5222b03a 	or	r17,r10,r8
   4cb74:	2006c03a 	cmpne	r3,r4,zero
   4cb78:	88e2b03a 	or	r17,r17,r3
   4cb7c:	89a3883a 	add	r17,r17,r6
   4cb80:	1145883a 	add	r2,r2,r5
   4cb84:	898d803a 	cmpltu	r6,r17,r6
   4cb88:	3087883a 	add	r3,r6,r2
   4cb8c:	4821883a 	mov	r16,r9
   4cb90:	003ed906 	br	4c6f8 <__alt_data_end+0xfffe55f8>
   4cb94:	2984b03a 	or	r2,r5,r6
   4cb98:	10004226 	beq	r2,zero,4cca4 <__subdf3+0x82c>
   4cb9c:	1808d0fa 	srli	r4,r3,3
   4cba0:	8822d0fa 	srli	r17,r17,3
   4cba4:	1806977a 	slli	r3,r3,29
   4cba8:	2080022c 	andhi	r2,r4,8
   4cbac:	1c62b03a 	or	r17,r3,r17
   4cbb0:	10000826 	beq	r2,zero,4cbd4 <__subdf3+0x75c>
   4cbb4:	2812d0fa 	srli	r9,r5,3
   4cbb8:	4880022c 	andhi	r2,r9,8
   4cbbc:	1000051e 	bne	r2,zero,4cbd4 <__subdf3+0x75c>
   4cbc0:	300cd0fa 	srli	r6,r6,3
   4cbc4:	2804977a 	slli	r2,r5,29
   4cbc8:	4809883a 	mov	r4,r9
   4cbcc:	3825883a 	mov	r18,r7
   4cbd0:	11a2b03a 	or	r17,r2,r6
   4cbd4:	8806d77a 	srli	r3,r17,29
   4cbd8:	200890fa 	slli	r4,r4,3
   4cbdc:	882290fa 	slli	r17,r17,3
   4cbe0:	0401ffc4 	movi	r16,2047
   4cbe4:	1906b03a 	or	r3,r3,r4
   4cbe8:	003e4406 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4cbec:	2984b03a 	or	r2,r5,r6
   4cbf0:	103e4226 	beq	r2,zero,4c4fc <__alt_data_end+0xfffe53fc>
   4cbf4:	8989c83a 	sub	r4,r17,r6
   4cbf8:	8911803a 	cmpltu	r8,r17,r4
   4cbfc:	1945c83a 	sub	r2,r3,r5
   4cc00:	1205c83a 	sub	r2,r2,r8
   4cc04:	1200202c 	andhi	r8,r2,128
   4cc08:	403e9a26 	beq	r8,zero,4c674 <__alt_data_end+0xfffe5574>
   4cc0c:	3463c83a 	sub	r17,r6,r17
   4cc10:	28c5c83a 	sub	r2,r5,r3
   4cc14:	344d803a 	cmpltu	r6,r6,r17
   4cc18:	1187c83a 	sub	r3,r2,r6
   4cc1c:	3825883a 	mov	r18,r7
   4cc20:	003e3606 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4cc24:	0101ffc4 	movi	r4,2047
   4cc28:	493fc71e 	bne	r9,r4,4cb48 <__alt_data_end+0xfffe5a48>
   4cc2c:	2807883a 	mov	r3,r5
   4cc30:	3023883a 	mov	r17,r6
   4cc34:	4821883a 	mov	r16,r9
   4cc38:	003e3006 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4cc3c:	10003626 	beq	r2,zero,4cd18 <__subdf3+0x8a0>
   4cc40:	2984b03a 	or	r2,r5,r6
   4cc44:	10001726 	beq	r2,zero,4cca4 <__subdf3+0x82c>
   4cc48:	1808d0fa 	srli	r4,r3,3
   4cc4c:	8822d0fa 	srli	r17,r17,3
   4cc50:	1806977a 	slli	r3,r3,29
   4cc54:	2080022c 	andhi	r2,r4,8
   4cc58:	1c62b03a 	or	r17,r3,r17
   4cc5c:	10000726 	beq	r2,zero,4cc7c <__subdf3+0x804>
   4cc60:	2812d0fa 	srli	r9,r5,3
   4cc64:	4880022c 	andhi	r2,r9,8
   4cc68:	1000041e 	bne	r2,zero,4cc7c <__subdf3+0x804>
   4cc6c:	300cd0fa 	srli	r6,r6,3
   4cc70:	2804977a 	slli	r2,r5,29
   4cc74:	4809883a 	mov	r4,r9
   4cc78:	11a2b03a 	or	r17,r2,r6
   4cc7c:	8806d77a 	srli	r3,r17,29
   4cc80:	200890fa 	slli	r4,r4,3
   4cc84:	882290fa 	slli	r17,r17,3
   4cc88:	3825883a 	mov	r18,r7
   4cc8c:	1906b03a 	or	r3,r3,r4
   4cc90:	0401ffc4 	movi	r16,2047
   4cc94:	003e1906 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4cc98:	000b883a 	mov	r5,zero
   4cc9c:	0005883a 	mov	r2,zero
   4cca0:	003e2e06 	br	4c55c <__alt_data_end+0xfffe545c>
   4cca4:	0401ffc4 	movi	r16,2047
   4cca8:	003e1406 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4ccac:	0005883a 	mov	r2,zero
   4ccb0:	003f7506 	br	4ca88 <__alt_data_end+0xfffe5988>
   4ccb4:	0005883a 	mov	r2,zero
   4ccb8:	0009883a 	mov	r4,zero
   4ccbc:	003e7806 	br	4c6a0 <__alt_data_end+0xfffe55a0>
   4ccc0:	123ff804 	addi	r8,r2,-32
   4ccc4:	01000804 	movi	r4,32
   4ccc8:	1a10d83a 	srl	r8,r3,r8
   4cccc:	11002526 	beq	r2,r4,4cd64 <__subdf3+0x8ec>
   4ccd0:	01001004 	movi	r4,64
   4ccd4:	2085c83a 	sub	r2,r4,r2
   4ccd8:	1884983a 	sll	r2,r3,r2
   4ccdc:	1444b03a 	or	r2,r2,r17
   4cce0:	1004c03a 	cmpne	r2,r2,zero
   4cce4:	40a2b03a 	or	r17,r8,r2
   4cce8:	0005883a 	mov	r2,zero
   4ccec:	003f1606 	br	4c948 <__alt_data_end+0xfffe5848>
   4ccf0:	02000434 	movhi	r8,16
   4ccf4:	0009883a 	mov	r4,zero
   4ccf8:	423fffc4 	addi	r8,r8,-1
   4ccfc:	00bfffc4 	movi	r2,-1
   4cd00:	0401ffc4 	movi	r16,2047
   4cd04:	003e6606 	br	4c6a0 <__alt_data_end+0xfffe55a0>
   4cd08:	1c62b03a 	or	r17,r3,r17
   4cd0c:	8822c03a 	cmpne	r17,r17,zero
   4cd10:	0005883a 	mov	r2,zero
   4cd14:	003f9906 	br	4cb7c <__alt_data_end+0xfffe5a7c>
   4cd18:	2807883a 	mov	r3,r5
   4cd1c:	3023883a 	mov	r17,r6
   4cd20:	0401ffc4 	movi	r16,2047
   4cd24:	003df506 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4cd28:	2807883a 	mov	r3,r5
   4cd2c:	3023883a 	mov	r17,r6
   4cd30:	003df206 	br	4c4fc <__alt_data_end+0xfffe53fc>
   4cd34:	123ff804 	addi	r8,r2,-32
   4cd38:	01000804 	movi	r4,32
   4cd3c:	1a10d83a 	srl	r8,r3,r8
   4cd40:	11000a26 	beq	r2,r4,4cd6c <__subdf3+0x8f4>
   4cd44:	01001004 	movi	r4,64
   4cd48:	2085c83a 	sub	r2,r4,r2
   4cd4c:	1884983a 	sll	r2,r3,r2
   4cd50:	1444b03a 	or	r2,r2,r17
   4cd54:	1004c03a 	cmpne	r2,r2,zero
   4cd58:	40a2b03a 	or	r17,r8,r2
   4cd5c:	0005883a 	mov	r2,zero
   4cd60:	003f8606 	br	4cb7c <__alt_data_end+0xfffe5a7c>
   4cd64:	0005883a 	mov	r2,zero
   4cd68:	003fdc06 	br	4ccdc <__alt_data_end+0xfffe5bdc>
   4cd6c:	0005883a 	mov	r2,zero
   4cd70:	003ff706 	br	4cd50 <__alt_data_end+0xfffe5c50>

0004cd74 <__fixdfsi>:
   4cd74:	280cd53a 	srli	r6,r5,20
   4cd78:	00c00434 	movhi	r3,16
   4cd7c:	18ffffc4 	addi	r3,r3,-1
   4cd80:	3181ffcc 	andi	r6,r6,2047
   4cd84:	01c0ff84 	movi	r7,1022
   4cd88:	28c6703a 	and	r3,r5,r3
   4cd8c:	280ad7fa 	srli	r5,r5,31
   4cd90:	3980120e 	bge	r7,r6,4cddc <__fixdfsi+0x68>
   4cd94:	00810744 	movi	r2,1053
   4cd98:	11800c16 	blt	r2,r6,4cdcc <__fixdfsi+0x58>
   4cd9c:	00810cc4 	movi	r2,1075
   4cda0:	1185c83a 	sub	r2,r2,r6
   4cda4:	01c007c4 	movi	r7,31
   4cda8:	18c00434 	orhi	r3,r3,16
   4cdac:	38800d16 	blt	r7,r2,4cde4 <__fixdfsi+0x70>
   4cdb0:	31befb44 	addi	r6,r6,-1043
   4cdb4:	2084d83a 	srl	r2,r4,r2
   4cdb8:	1986983a 	sll	r3,r3,r6
   4cdbc:	1884b03a 	or	r2,r3,r2
   4cdc0:	28000726 	beq	r5,zero,4cde0 <__fixdfsi+0x6c>
   4cdc4:	0085c83a 	sub	r2,zero,r2
   4cdc8:	f800283a 	ret
   4cdcc:	00a00034 	movhi	r2,32768
   4cdd0:	10bfffc4 	addi	r2,r2,-1
   4cdd4:	2885883a 	add	r2,r5,r2
   4cdd8:	f800283a 	ret
   4cddc:	0005883a 	mov	r2,zero
   4cde0:	f800283a 	ret
   4cde4:	008104c4 	movi	r2,1043
   4cde8:	1185c83a 	sub	r2,r2,r6
   4cdec:	1884d83a 	srl	r2,r3,r2
   4cdf0:	003ff306 	br	4cdc0 <__alt_data_end+0xfffe5cc0>

0004cdf4 <__floatunsidf>:
   4cdf4:	defffe04 	addi	sp,sp,-8
   4cdf8:	dc000015 	stw	r16,0(sp)
   4cdfc:	dfc00115 	stw	ra,4(sp)
   4ce00:	2021883a 	mov	r16,r4
   4ce04:	20002226 	beq	r4,zero,4ce90 <__floatunsidf+0x9c>
   4ce08:	0040d700 	call	40d70 <__clzsi2>
   4ce0c:	01010784 	movi	r4,1054
   4ce10:	2089c83a 	sub	r4,r4,r2
   4ce14:	01810cc4 	movi	r6,1075
   4ce18:	310dc83a 	sub	r6,r6,r4
   4ce1c:	00c007c4 	movi	r3,31
   4ce20:	1980120e 	bge	r3,r6,4ce6c <__floatunsidf+0x78>
   4ce24:	00c104c4 	movi	r3,1043
   4ce28:	1907c83a 	sub	r3,r3,r4
   4ce2c:	80ca983a 	sll	r5,r16,r3
   4ce30:	00800434 	movhi	r2,16
   4ce34:	10bfffc4 	addi	r2,r2,-1
   4ce38:	2101ffcc 	andi	r4,r4,2047
   4ce3c:	0021883a 	mov	r16,zero
   4ce40:	288a703a 	and	r5,r5,r2
   4ce44:	2008953a 	slli	r4,r4,20
   4ce48:	00c00434 	movhi	r3,16
   4ce4c:	18ffffc4 	addi	r3,r3,-1
   4ce50:	28c6703a 	and	r3,r5,r3
   4ce54:	8005883a 	mov	r2,r16
   4ce58:	1906b03a 	or	r3,r3,r4
   4ce5c:	dfc00117 	ldw	ra,4(sp)
   4ce60:	dc000017 	ldw	r16,0(sp)
   4ce64:	dec00204 	addi	sp,sp,8
   4ce68:	f800283a 	ret
   4ce6c:	00c002c4 	movi	r3,11
   4ce70:	188bc83a 	sub	r5,r3,r2
   4ce74:	814ad83a 	srl	r5,r16,r5
   4ce78:	00c00434 	movhi	r3,16
   4ce7c:	18ffffc4 	addi	r3,r3,-1
   4ce80:	81a0983a 	sll	r16,r16,r6
   4ce84:	2101ffcc 	andi	r4,r4,2047
   4ce88:	28ca703a 	and	r5,r5,r3
   4ce8c:	003fed06 	br	4ce44 <__alt_data_end+0xfffe5d44>
   4ce90:	0009883a 	mov	r4,zero
   4ce94:	000b883a 	mov	r5,zero
   4ce98:	003fea06 	br	4ce44 <__alt_data_end+0xfffe5d44>

0004ce9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4ce9c:	defffe04 	addi	sp,sp,-8
   4cea0:	dfc00115 	stw	ra,4(sp)
   4cea4:	df000015 	stw	fp,0(sp)
   4cea8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ceac:	d0a00b17 	ldw	r2,-32724(gp)
   4ceb0:	10000326 	beq	r2,zero,4cec0 <alt_get_errno+0x24>
   4ceb4:	d0a00b17 	ldw	r2,-32724(gp)
   4ceb8:	103ee83a 	callr	r2
   4cebc:	00000106 	br	4cec4 <alt_get_errno+0x28>
   4cec0:	d0a6d104 	addi	r2,gp,-25788
}
   4cec4:	e037883a 	mov	sp,fp
   4cec8:	dfc00117 	ldw	ra,4(sp)
   4cecc:	df000017 	ldw	fp,0(sp)
   4ced0:	dec00204 	addi	sp,sp,8
   4ced4:	f800283a 	ret

0004ced8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4ced8:	defffb04 	addi	sp,sp,-20
   4cedc:	dfc00415 	stw	ra,16(sp)
   4cee0:	df000315 	stw	fp,12(sp)
   4cee4:	df000304 	addi	fp,sp,12
   4cee8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4ceec:	e0bfff17 	ldw	r2,-4(fp)
   4cef0:	10000616 	blt	r2,zero,4cf0c <close+0x34>
   4cef4:	e0bfff17 	ldw	r2,-4(fp)
   4cef8:	10c00324 	muli	r3,r2,12
   4cefc:	00800174 	movhi	r2,5
   4cf00:	1080af04 	addi	r2,r2,700
   4cf04:	1885883a 	add	r2,r3,r2
   4cf08:	00000106 	br	4cf10 <close+0x38>
   4cf0c:	0005883a 	mov	r2,zero
   4cf10:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   4cf14:	e0bffd17 	ldw	r2,-12(fp)
   4cf18:	10001926 	beq	r2,zero,4cf80 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4cf1c:	e0bffd17 	ldw	r2,-12(fp)
   4cf20:	10800017 	ldw	r2,0(r2)
   4cf24:	10800417 	ldw	r2,16(r2)
   4cf28:	10000626 	beq	r2,zero,4cf44 <close+0x6c>
   4cf2c:	e0bffd17 	ldw	r2,-12(fp)
   4cf30:	10800017 	ldw	r2,0(r2)
   4cf34:	10800417 	ldw	r2,16(r2)
   4cf38:	e13ffd17 	ldw	r4,-12(fp)
   4cf3c:	103ee83a 	callr	r2
   4cf40:	00000106 	br	4cf48 <close+0x70>
   4cf44:	0005883a 	mov	r2,zero
   4cf48:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4cf4c:	e13fff17 	ldw	r4,-4(fp)
   4cf50:	004d5980 	call	4d598 <alt_release_fd>
    if (rval < 0)
   4cf54:	e0bffe17 	ldw	r2,-8(fp)
   4cf58:	1000070e 	bge	r2,zero,4cf78 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   4cf5c:	004ce9c0 	call	4ce9c <alt_get_errno>
   4cf60:	1007883a 	mov	r3,r2
   4cf64:	e0bffe17 	ldw	r2,-8(fp)
   4cf68:	0085c83a 	sub	r2,zero,r2
   4cf6c:	18800015 	stw	r2,0(r3)
      return -1;
   4cf70:	00bfffc4 	movi	r2,-1
   4cf74:	00000706 	br	4cf94 <close+0xbc>
    }
    return 0;
   4cf78:	0005883a 	mov	r2,zero
   4cf7c:	00000506 	br	4cf94 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4cf80:	004ce9c0 	call	4ce9c <alt_get_errno>
   4cf84:	1007883a 	mov	r3,r2
   4cf88:	00801444 	movi	r2,81
   4cf8c:	18800015 	stw	r2,0(r3)
    return -1;
   4cf90:	00bfffc4 	movi	r2,-1
  }
}
   4cf94:	e037883a 	mov	sp,fp
   4cf98:	dfc00117 	ldw	ra,4(sp)
   4cf9c:	df000017 	ldw	fp,0(sp)
   4cfa0:	dec00204 	addi	sp,sp,8
   4cfa4:	f800283a 	ret

0004cfa8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4cfa8:	defffc04 	addi	sp,sp,-16
   4cfac:	df000315 	stw	fp,12(sp)
   4cfb0:	df000304 	addi	fp,sp,12
   4cfb4:	e13ffd15 	stw	r4,-12(fp)
   4cfb8:	e17ffe15 	stw	r5,-8(fp)
   4cfbc:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4cfc0:	e0bfff17 	ldw	r2,-4(fp)
}
   4cfc4:	e037883a 	mov	sp,fp
   4cfc8:	df000017 	ldw	fp,0(sp)
   4cfcc:	dec00104 	addi	sp,sp,4
   4cfd0:	f800283a 	ret

0004cfd4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4cfd4:	defffe04 	addi	sp,sp,-8
   4cfd8:	dfc00115 	stw	ra,4(sp)
   4cfdc:	df000015 	stw	fp,0(sp)
   4cfe0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4cfe4:	d0a00b17 	ldw	r2,-32724(gp)
   4cfe8:	10000326 	beq	r2,zero,4cff8 <alt_get_errno+0x24>
   4cfec:	d0a00b17 	ldw	r2,-32724(gp)
   4cff0:	103ee83a 	callr	r2
   4cff4:	00000106 	br	4cffc <alt_get_errno+0x28>
   4cff8:	d0a6d104 	addi	r2,gp,-25788
}
   4cffc:	e037883a 	mov	sp,fp
   4d000:	dfc00117 	ldw	ra,4(sp)
   4d004:	df000017 	ldw	fp,0(sp)
   4d008:	dec00204 	addi	sp,sp,8
   4d00c:	f800283a 	ret

0004d010 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4d010:	defffb04 	addi	sp,sp,-20
   4d014:	dfc00415 	stw	ra,16(sp)
   4d018:	df000315 	stw	fp,12(sp)
   4d01c:	df000304 	addi	fp,sp,12
   4d020:	e13ffe15 	stw	r4,-8(fp)
   4d024:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d028:	e0bffe17 	ldw	r2,-8(fp)
   4d02c:	10000616 	blt	r2,zero,4d048 <fstat+0x38>
   4d030:	e0bffe17 	ldw	r2,-8(fp)
   4d034:	10c00324 	muli	r3,r2,12
   4d038:	00800174 	movhi	r2,5
   4d03c:	1080af04 	addi	r2,r2,700
   4d040:	1885883a 	add	r2,r3,r2
   4d044:	00000106 	br	4d04c <fstat+0x3c>
   4d048:	0005883a 	mov	r2,zero
   4d04c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   4d050:	e0bffd17 	ldw	r2,-12(fp)
   4d054:	10001026 	beq	r2,zero,4d098 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4d058:	e0bffd17 	ldw	r2,-12(fp)
   4d05c:	10800017 	ldw	r2,0(r2)
   4d060:	10800817 	ldw	r2,32(r2)
   4d064:	10000726 	beq	r2,zero,4d084 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   4d068:	e0bffd17 	ldw	r2,-12(fp)
   4d06c:	10800017 	ldw	r2,0(r2)
   4d070:	10800817 	ldw	r2,32(r2)
   4d074:	e17fff17 	ldw	r5,-4(fp)
   4d078:	e13ffd17 	ldw	r4,-12(fp)
   4d07c:	103ee83a 	callr	r2
   4d080:	00000a06 	br	4d0ac <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4d084:	e0bfff17 	ldw	r2,-4(fp)
   4d088:	00c80004 	movi	r3,8192
   4d08c:	10c00115 	stw	r3,4(r2)
      return 0;
   4d090:	0005883a 	mov	r2,zero
   4d094:	00000506 	br	4d0ac <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d098:	004cfd40 	call	4cfd4 <alt_get_errno>
   4d09c:	1007883a 	mov	r3,r2
   4d0a0:	00801444 	movi	r2,81
   4d0a4:	18800015 	stw	r2,0(r3)
    return -1;
   4d0a8:	00bfffc4 	movi	r2,-1
  }
}
   4d0ac:	e037883a 	mov	sp,fp
   4d0b0:	dfc00117 	ldw	ra,4(sp)
   4d0b4:	df000017 	ldw	fp,0(sp)
   4d0b8:	dec00204 	addi	sp,sp,8
   4d0bc:	f800283a 	ret

0004d0c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d0c0:	defffe04 	addi	sp,sp,-8
   4d0c4:	dfc00115 	stw	ra,4(sp)
   4d0c8:	df000015 	stw	fp,0(sp)
   4d0cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d0d0:	d0a00b17 	ldw	r2,-32724(gp)
   4d0d4:	10000326 	beq	r2,zero,4d0e4 <alt_get_errno+0x24>
   4d0d8:	d0a00b17 	ldw	r2,-32724(gp)
   4d0dc:	103ee83a 	callr	r2
   4d0e0:	00000106 	br	4d0e8 <alt_get_errno+0x28>
   4d0e4:	d0a6d104 	addi	r2,gp,-25788
}
   4d0e8:	e037883a 	mov	sp,fp
   4d0ec:	dfc00117 	ldw	ra,4(sp)
   4d0f0:	df000017 	ldw	fp,0(sp)
   4d0f4:	dec00204 	addi	sp,sp,8
   4d0f8:	f800283a 	ret

0004d0fc <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4d0fc:	deffed04 	addi	sp,sp,-76
   4d100:	dfc01215 	stw	ra,72(sp)
   4d104:	df001115 	stw	fp,68(sp)
   4d108:	df001104 	addi	fp,sp,68
   4d10c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d110:	e0bfff17 	ldw	r2,-4(fp)
   4d114:	10000616 	blt	r2,zero,4d130 <isatty+0x34>
   4d118:	e0bfff17 	ldw	r2,-4(fp)
   4d11c:	10c00324 	muli	r3,r2,12
   4d120:	00800174 	movhi	r2,5
   4d124:	1080af04 	addi	r2,r2,700
   4d128:	1885883a 	add	r2,r3,r2
   4d12c:	00000106 	br	4d134 <isatty+0x38>
   4d130:	0005883a 	mov	r2,zero
   4d134:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   4d138:	e0bfef17 	ldw	r2,-68(fp)
   4d13c:	10000e26 	beq	r2,zero,4d178 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4d140:	e0bfef17 	ldw	r2,-68(fp)
   4d144:	10800017 	ldw	r2,0(r2)
   4d148:	10800817 	ldw	r2,32(r2)
   4d14c:	1000021e 	bne	r2,zero,4d158 <isatty+0x5c>
    {
      return 1;
   4d150:	00800044 	movi	r2,1
   4d154:	00000d06 	br	4d18c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4d158:	e0bff004 	addi	r2,fp,-64
   4d15c:	100b883a 	mov	r5,r2
   4d160:	e13fff17 	ldw	r4,-4(fp)
   4d164:	004d0100 	call	4d010 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4d168:	e0bff117 	ldw	r2,-60(fp)
   4d16c:	10880020 	cmpeqi	r2,r2,8192
   4d170:	10803fcc 	andi	r2,r2,255
   4d174:	00000506 	br	4d18c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d178:	004d0c00 	call	4d0c0 <alt_get_errno>
   4d17c:	1007883a 	mov	r3,r2
   4d180:	00801444 	movi	r2,81
   4d184:	18800015 	stw	r2,0(r3)
    return 0;
   4d188:	0005883a 	mov	r2,zero
  }
}
   4d18c:	e037883a 	mov	sp,fp
   4d190:	dfc00117 	ldw	ra,4(sp)
   4d194:	df000017 	ldw	fp,0(sp)
   4d198:	dec00204 	addi	sp,sp,8
   4d19c:	f800283a 	ret

0004d1a0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4d1a0:	defffc04 	addi	sp,sp,-16
   4d1a4:	df000315 	stw	fp,12(sp)
   4d1a8:	df000304 	addi	fp,sp,12
   4d1ac:	e13ffd15 	stw	r4,-12(fp)
   4d1b0:	e17ffe15 	stw	r5,-8(fp)
   4d1b4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   4d1b8:	e0fffe17 	ldw	r3,-8(fp)
   4d1bc:	e0bffd17 	ldw	r2,-12(fp)
   4d1c0:	18800c26 	beq	r3,r2,4d1f4 <alt_load_section+0x54>
  {
    while( to != end )
   4d1c4:	00000806 	br	4d1e8 <alt_load_section+0x48>
    {
      *to++ = *from++;
   4d1c8:	e0bffe17 	ldw	r2,-8(fp)
   4d1cc:	10c00104 	addi	r3,r2,4
   4d1d0:	e0fffe15 	stw	r3,-8(fp)
   4d1d4:	e0fffd17 	ldw	r3,-12(fp)
   4d1d8:	19000104 	addi	r4,r3,4
   4d1dc:	e13ffd15 	stw	r4,-12(fp)
   4d1e0:	18c00017 	ldw	r3,0(r3)
   4d1e4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   4d1e8:	e0fffe17 	ldw	r3,-8(fp)
   4d1ec:	e0bfff17 	ldw	r2,-4(fp)
   4d1f0:	18bff51e 	bne	r3,r2,4d1c8 <__alt_data_end+0xfffe60c8>
    {
      *to++ = *from++;
    }
  }
}
   4d1f4:	0001883a 	nop
   4d1f8:	e037883a 	mov	sp,fp
   4d1fc:	df000017 	ldw	fp,0(sp)
   4d200:	dec00104 	addi	sp,sp,4
   4d204:	f800283a 	ret

0004d208 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4d208:	defffe04 	addi	sp,sp,-8
   4d20c:	dfc00115 	stw	ra,4(sp)
   4d210:	df000015 	stw	fp,0(sp)
   4d214:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4d218:	01800174 	movhi	r6,5
   4d21c:	31853704 	addi	r6,r6,5340
   4d220:	01400174 	movhi	r5,5
   4d224:	297e7c04 	addi	r5,r5,-1552
   4d228:	01000174 	movhi	r4,5
   4d22c:	21053704 	addi	r4,r4,5340
   4d230:	004d1a00 	call	4d1a0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4d234:	01800134 	movhi	r6,4
   4d238:	31807004 	addi	r6,r6,448
   4d23c:	01400134 	movhi	r5,4
   4d240:	29400804 	addi	r5,r5,32
   4d244:	01000134 	movhi	r4,4
   4d248:	21000804 	addi	r4,r4,32
   4d24c:	004d1a00 	call	4d1a0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4d250:	01800174 	movhi	r6,5
   4d254:	31be7c04 	addi	r6,r6,-1552
   4d258:	01400174 	movhi	r5,5
   4d25c:	297dab04 	addi	r5,r5,-2388
   4d260:	01000174 	movhi	r4,5
   4d264:	213dab04 	addi	r4,r4,-2388
   4d268:	004d1a00 	call	4d1a0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4d26c:	004e6340 	call	4e634 <alt_dcache_flush_all>
  alt_icache_flush_all();
   4d270:	004e81c0 	call	4e81c <alt_icache_flush_all>
}
   4d274:	0001883a 	nop
   4d278:	e037883a 	mov	sp,fp
   4d27c:	dfc00117 	ldw	ra,4(sp)
   4d280:	df000017 	ldw	fp,0(sp)
   4d284:	dec00204 	addi	sp,sp,8
   4d288:	f800283a 	ret

0004d28c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d28c:	defffe04 	addi	sp,sp,-8
   4d290:	dfc00115 	stw	ra,4(sp)
   4d294:	df000015 	stw	fp,0(sp)
   4d298:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d29c:	d0a00b17 	ldw	r2,-32724(gp)
   4d2a0:	10000326 	beq	r2,zero,4d2b0 <alt_get_errno+0x24>
   4d2a4:	d0a00b17 	ldw	r2,-32724(gp)
   4d2a8:	103ee83a 	callr	r2
   4d2ac:	00000106 	br	4d2b4 <alt_get_errno+0x28>
   4d2b0:	d0a6d104 	addi	r2,gp,-25788
}
   4d2b4:	e037883a 	mov	sp,fp
   4d2b8:	dfc00117 	ldw	ra,4(sp)
   4d2bc:	df000017 	ldw	fp,0(sp)
   4d2c0:	dec00204 	addi	sp,sp,8
   4d2c4:	f800283a 	ret

0004d2c8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4d2c8:	defff904 	addi	sp,sp,-28
   4d2cc:	dfc00615 	stw	ra,24(sp)
   4d2d0:	df000515 	stw	fp,20(sp)
   4d2d4:	df000504 	addi	fp,sp,20
   4d2d8:	e13ffd15 	stw	r4,-12(fp)
   4d2dc:	e17ffe15 	stw	r5,-8(fp)
   4d2e0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4d2e4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d2e8:	e0bffd17 	ldw	r2,-12(fp)
   4d2ec:	10000616 	blt	r2,zero,4d308 <lseek+0x40>
   4d2f0:	e0bffd17 	ldw	r2,-12(fp)
   4d2f4:	10c00324 	muli	r3,r2,12
   4d2f8:	00800174 	movhi	r2,5
   4d2fc:	1080af04 	addi	r2,r2,700
   4d300:	1885883a 	add	r2,r3,r2
   4d304:	00000106 	br	4d30c <lseek+0x44>
   4d308:	0005883a 	mov	r2,zero
   4d30c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   4d310:	e0bffc17 	ldw	r2,-16(fp)
   4d314:	10001026 	beq	r2,zero,4d358 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4d318:	e0bffc17 	ldw	r2,-16(fp)
   4d31c:	10800017 	ldw	r2,0(r2)
   4d320:	10800717 	ldw	r2,28(r2)
   4d324:	10000926 	beq	r2,zero,4d34c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4d328:	e0bffc17 	ldw	r2,-16(fp)
   4d32c:	10800017 	ldw	r2,0(r2)
   4d330:	10800717 	ldw	r2,28(r2)
   4d334:	e1bfff17 	ldw	r6,-4(fp)
   4d338:	e17ffe17 	ldw	r5,-8(fp)
   4d33c:	e13ffc17 	ldw	r4,-16(fp)
   4d340:	103ee83a 	callr	r2
   4d344:	e0bffb15 	stw	r2,-20(fp)
   4d348:	00000506 	br	4d360 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4d34c:	00bfde84 	movi	r2,-134
   4d350:	e0bffb15 	stw	r2,-20(fp)
   4d354:	00000206 	br	4d360 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   4d358:	00bfebc4 	movi	r2,-81
   4d35c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   4d360:	e0bffb17 	ldw	r2,-20(fp)
   4d364:	1000070e 	bge	r2,zero,4d384 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   4d368:	004d28c0 	call	4d28c <alt_get_errno>
   4d36c:	1007883a 	mov	r3,r2
   4d370:	e0bffb17 	ldw	r2,-20(fp)
   4d374:	0085c83a 	sub	r2,zero,r2
   4d378:	18800015 	stw	r2,0(r3)
    rc = -1;
   4d37c:	00bfffc4 	movi	r2,-1
   4d380:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   4d384:	e0bffb17 	ldw	r2,-20(fp)
}
   4d388:	e037883a 	mov	sp,fp
   4d38c:	dfc00117 	ldw	ra,4(sp)
   4d390:	df000017 	ldw	fp,0(sp)
   4d394:	dec00204 	addi	sp,sp,8
   4d398:	f800283a 	ret

0004d39c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4d39c:	defffd04 	addi	sp,sp,-12
   4d3a0:	dfc00215 	stw	ra,8(sp)
   4d3a4:	df000115 	stw	fp,4(sp)
   4d3a8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4d3ac:	0009883a 	mov	r4,zero
   4d3b0:	004d8c40 	call	4d8c4 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4d3b4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4d3b8:	004d8fc0 	call	4d8fc <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4d3bc:	01800174 	movhi	r6,5
   4d3c0:	31be7404 	addi	r6,r6,-1584
   4d3c4:	01400174 	movhi	r5,5
   4d3c8:	297e7404 	addi	r5,r5,-1584
   4d3cc:	01000174 	movhi	r4,5
   4d3d0:	213e7404 	addi	r4,r4,-1584
   4d3d4:	004ebb40 	call	4ebb4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4d3d8:	004e75c0 	call	4e75c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4d3dc:	01000174 	movhi	r4,5
   4d3e0:	2139ef04 	addi	r4,r4,-6212
   4d3e4:	004f3180 	call	4f318 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4d3e8:	d0a6d217 	ldw	r2,-25784(gp)
   4d3ec:	d0e6d317 	ldw	r3,-25780(gp)
   4d3f0:	d126d417 	ldw	r4,-25776(gp)
   4d3f4:	200d883a 	mov	r6,r4
   4d3f8:	180b883a 	mov	r5,r3
   4d3fc:	1009883a 	mov	r4,r2
   4d400:	004020c0 	call	4020c <main>
   4d404:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4d408:	01000044 	movi	r4,1
   4d40c:	004ced80 	call	4ced8 <close>
  exit (result);
   4d410:	e13fff17 	ldw	r4,-4(fp)
   4d414:	004f32c0 	call	4f32c <exit>

0004d418 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4d418:	defffe04 	addi	sp,sp,-8
   4d41c:	df000115 	stw	fp,4(sp)
   4d420:	df000104 	addi	fp,sp,4
   4d424:	e13fff15 	stw	r4,-4(fp)
}
   4d428:	0001883a 	nop
   4d42c:	e037883a 	mov	sp,fp
   4d430:	df000017 	ldw	fp,0(sp)
   4d434:	dec00104 	addi	sp,sp,4
   4d438:	f800283a 	ret

0004d43c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4d43c:	defffe04 	addi	sp,sp,-8
   4d440:	df000115 	stw	fp,4(sp)
   4d444:	df000104 	addi	fp,sp,4
   4d448:	e13fff15 	stw	r4,-4(fp)
}
   4d44c:	0001883a 	nop
   4d450:	e037883a 	mov	sp,fp
   4d454:	df000017 	ldw	fp,0(sp)
   4d458:	dec00104 	addi	sp,sp,4
   4d45c:	f800283a 	ret

0004d460 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d460:	defffe04 	addi	sp,sp,-8
   4d464:	dfc00115 	stw	ra,4(sp)
   4d468:	df000015 	stw	fp,0(sp)
   4d46c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d470:	d0a00b17 	ldw	r2,-32724(gp)
   4d474:	10000326 	beq	r2,zero,4d484 <alt_get_errno+0x24>
   4d478:	d0a00b17 	ldw	r2,-32724(gp)
   4d47c:	103ee83a 	callr	r2
   4d480:	00000106 	br	4d488 <alt_get_errno+0x28>
   4d484:	d0a6d104 	addi	r2,gp,-25788
}
   4d488:	e037883a 	mov	sp,fp
   4d48c:	dfc00117 	ldw	ra,4(sp)
   4d490:	df000017 	ldw	fp,0(sp)
   4d494:	dec00204 	addi	sp,sp,8
   4d498:	f800283a 	ret

0004d49c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4d49c:	defff904 	addi	sp,sp,-28
   4d4a0:	dfc00615 	stw	ra,24(sp)
   4d4a4:	df000515 	stw	fp,20(sp)
   4d4a8:	df000504 	addi	fp,sp,20
   4d4ac:	e13ffd15 	stw	r4,-12(fp)
   4d4b0:	e17ffe15 	stw	r5,-8(fp)
   4d4b4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d4b8:	e0bffd17 	ldw	r2,-12(fp)
   4d4bc:	10000616 	blt	r2,zero,4d4d8 <read+0x3c>
   4d4c0:	e0bffd17 	ldw	r2,-12(fp)
   4d4c4:	10c00324 	muli	r3,r2,12
   4d4c8:	00800174 	movhi	r2,5
   4d4cc:	1080af04 	addi	r2,r2,700
   4d4d0:	1885883a 	add	r2,r3,r2
   4d4d4:	00000106 	br	4d4dc <read+0x40>
   4d4d8:	0005883a 	mov	r2,zero
   4d4dc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4d4e0:	e0bffb17 	ldw	r2,-20(fp)
   4d4e4:	10002226 	beq	r2,zero,4d570 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4d4e8:	e0bffb17 	ldw	r2,-20(fp)
   4d4ec:	10800217 	ldw	r2,8(r2)
   4d4f0:	108000cc 	andi	r2,r2,3
   4d4f4:	10800060 	cmpeqi	r2,r2,1
   4d4f8:	1000181e 	bne	r2,zero,4d55c <read+0xc0>
        (fd->dev->read))
   4d4fc:	e0bffb17 	ldw	r2,-20(fp)
   4d500:	10800017 	ldw	r2,0(r2)
   4d504:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4d508:	10001426 	beq	r2,zero,4d55c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4d50c:	e0bffb17 	ldw	r2,-20(fp)
   4d510:	10800017 	ldw	r2,0(r2)
   4d514:	10800517 	ldw	r2,20(r2)
   4d518:	e0ffff17 	ldw	r3,-4(fp)
   4d51c:	180d883a 	mov	r6,r3
   4d520:	e17ffe17 	ldw	r5,-8(fp)
   4d524:	e13ffb17 	ldw	r4,-20(fp)
   4d528:	103ee83a 	callr	r2
   4d52c:	e0bffc15 	stw	r2,-16(fp)
   4d530:	e0bffc17 	ldw	r2,-16(fp)
   4d534:	1000070e 	bge	r2,zero,4d554 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   4d538:	004d4600 	call	4d460 <alt_get_errno>
   4d53c:	1007883a 	mov	r3,r2
   4d540:	e0bffc17 	ldw	r2,-16(fp)
   4d544:	0085c83a 	sub	r2,zero,r2
   4d548:	18800015 	stw	r2,0(r3)
          return -1;
   4d54c:	00bfffc4 	movi	r2,-1
   4d550:	00000c06 	br	4d584 <read+0xe8>
        }
        return rval;
   4d554:	e0bffc17 	ldw	r2,-16(fp)
   4d558:	00000a06 	br	4d584 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4d55c:	004d4600 	call	4d460 <alt_get_errno>
   4d560:	1007883a 	mov	r3,r2
   4d564:	00800344 	movi	r2,13
   4d568:	18800015 	stw	r2,0(r3)
   4d56c:	00000406 	br	4d580 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4d570:	004d4600 	call	4d460 <alt_get_errno>
   4d574:	1007883a 	mov	r3,r2
   4d578:	00801444 	movi	r2,81
   4d57c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4d580:	00bfffc4 	movi	r2,-1
}
   4d584:	e037883a 	mov	sp,fp
   4d588:	dfc00117 	ldw	ra,4(sp)
   4d58c:	df000017 	ldw	fp,0(sp)
   4d590:	dec00204 	addi	sp,sp,8
   4d594:	f800283a 	ret

0004d598 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4d598:	defffe04 	addi	sp,sp,-8
   4d59c:	df000115 	stw	fp,4(sp)
   4d5a0:	df000104 	addi	fp,sp,4
   4d5a4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   4d5a8:	e0bfff17 	ldw	r2,-4(fp)
   4d5ac:	108000d0 	cmplti	r2,r2,3
   4d5b0:	10000d1e 	bne	r2,zero,4d5e8 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   4d5b4:	00800174 	movhi	r2,5
   4d5b8:	1080af04 	addi	r2,r2,700
   4d5bc:	e0ffff17 	ldw	r3,-4(fp)
   4d5c0:	18c00324 	muli	r3,r3,12
   4d5c4:	10c5883a 	add	r2,r2,r3
   4d5c8:	10800204 	addi	r2,r2,8
   4d5cc:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   4d5d0:	00800174 	movhi	r2,5
   4d5d4:	1080af04 	addi	r2,r2,700
   4d5d8:	e0ffff17 	ldw	r3,-4(fp)
   4d5dc:	18c00324 	muli	r3,r3,12
   4d5e0:	10c5883a 	add	r2,r2,r3
   4d5e4:	10000015 	stw	zero,0(r2)
  }
}
   4d5e8:	0001883a 	nop
   4d5ec:	e037883a 	mov	sp,fp
   4d5f0:	df000017 	ldw	fp,0(sp)
   4d5f4:	dec00104 	addi	sp,sp,4
   4d5f8:	f800283a 	ret

0004d5fc <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4d5fc:	defff904 	addi	sp,sp,-28
   4d600:	df000615 	stw	fp,24(sp)
   4d604:	df000604 	addi	fp,sp,24
   4d608:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4d60c:	0005303a 	rdctl	r2,status
   4d610:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4d614:	e0fffe17 	ldw	r3,-8(fp)
   4d618:	00bfff84 	movi	r2,-2
   4d61c:	1884703a 	and	r2,r3,r2
   4d620:	1001703a 	wrctl	status,r2
  
  return context;
   4d624:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4d628:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4d62c:	d0a00c17 	ldw	r2,-32720(gp)
   4d630:	10c000c4 	addi	r3,r2,3
   4d634:	00bfff04 	movi	r2,-4
   4d638:	1884703a 	and	r2,r3,r2
   4d63c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4d640:	d0e00c17 	ldw	r3,-32720(gp)
   4d644:	e0bfff17 	ldw	r2,-4(fp)
   4d648:	1887883a 	add	r3,r3,r2
   4d64c:	008001b4 	movhi	r2,6
   4d650:	109c4004 	addi	r2,r2,28928
   4d654:	10c0062e 	bgeu	r2,r3,4d670 <sbrk+0x74>
   4d658:	e0bffb17 	ldw	r2,-20(fp)
   4d65c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4d660:	e0bffa17 	ldw	r2,-24(fp)
   4d664:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4d668:	00bfffc4 	movi	r2,-1
   4d66c:	00000b06 	br	4d69c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   4d670:	d0a00c17 	ldw	r2,-32720(gp)
   4d674:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   4d678:	d0e00c17 	ldw	r3,-32720(gp)
   4d67c:	e0bfff17 	ldw	r2,-4(fp)
   4d680:	1885883a 	add	r2,r3,r2
   4d684:	d0a00c15 	stw	r2,-32720(gp)
   4d688:	e0bffb17 	ldw	r2,-20(fp)
   4d68c:	e0bffc15 	stw	r2,-16(fp)
   4d690:	e0bffc17 	ldw	r2,-16(fp)
   4d694:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4d698:	e0bffd17 	ldw	r2,-12(fp)
} 
   4d69c:	e037883a 	mov	sp,fp
   4d6a0:	df000017 	ldw	fp,0(sp)
   4d6a4:	dec00104 	addi	sp,sp,4
   4d6a8:	f800283a 	ret

0004d6ac <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   4d6ac:	defffd04 	addi	sp,sp,-12
   4d6b0:	dfc00215 	stw	ra,8(sp)
   4d6b4:	df000115 	stw	fp,4(sp)
   4d6b8:	df000104 	addi	fp,sp,4
   4d6bc:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   4d6c0:	e13fff17 	ldw	r4,-4(fp)
   4d6c4:	004e4dc0 	call	4e4dc <alt_busy_sleep>
}
   4d6c8:	e037883a 	mov	sp,fp
   4d6cc:	dfc00117 	ldw	ra,4(sp)
   4d6d0:	df000017 	ldw	fp,0(sp)
   4d6d4:	dec00204 	addi	sp,sp,8
   4d6d8:	f800283a 	ret

0004d6dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d6dc:	defffe04 	addi	sp,sp,-8
   4d6e0:	dfc00115 	stw	ra,4(sp)
   4d6e4:	df000015 	stw	fp,0(sp)
   4d6e8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d6ec:	d0a00b17 	ldw	r2,-32724(gp)
   4d6f0:	10000326 	beq	r2,zero,4d700 <alt_get_errno+0x24>
   4d6f4:	d0a00b17 	ldw	r2,-32724(gp)
   4d6f8:	103ee83a 	callr	r2
   4d6fc:	00000106 	br	4d704 <alt_get_errno+0x28>
   4d700:	d0a6d104 	addi	r2,gp,-25788
}
   4d704:	e037883a 	mov	sp,fp
   4d708:	dfc00117 	ldw	ra,4(sp)
   4d70c:	df000017 	ldw	fp,0(sp)
   4d710:	dec00204 	addi	sp,sp,8
   4d714:	f800283a 	ret

0004d718 <wait>:
 *
 * ALT_WAIT is mapped onto the wait() system call in alt_syscall.h
 */
 
int ALT_WAIT (int *status)
{
   4d718:	defffd04 	addi	sp,sp,-12
   4d71c:	dfc00215 	stw	ra,8(sp)
   4d720:	df000115 	stw	fp,4(sp)
   4d724:	df000104 	addi	fp,sp,4
   4d728:	e13fff15 	stw	r4,-4(fp)
  *status = 0;
   4d72c:	e0bfff17 	ldw	r2,-4(fp)
   4d730:	10000015 	stw	zero,0(r2)

  ALT_ERRNO = ECHILD;
   4d734:	004d6dc0 	call	4d6dc <alt_get_errno>
   4d738:	1007883a 	mov	r3,r2
   4d73c:	00800284 	movi	r2,10
   4d740:	18800015 	stw	r2,0(r3)

  return -1;
   4d744:	00bfffc4 	movi	r2,-1
}
   4d748:	e037883a 	mov	sp,fp
   4d74c:	dfc00117 	ldw	ra,4(sp)
   4d750:	df000017 	ldw	fp,0(sp)
   4d754:	dec00204 	addi	sp,sp,8
   4d758:	f800283a 	ret

0004d75c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d75c:	defffe04 	addi	sp,sp,-8
   4d760:	dfc00115 	stw	ra,4(sp)
   4d764:	df000015 	stw	fp,0(sp)
   4d768:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d76c:	d0a00b17 	ldw	r2,-32724(gp)
   4d770:	10000326 	beq	r2,zero,4d780 <alt_get_errno+0x24>
   4d774:	d0a00b17 	ldw	r2,-32724(gp)
   4d778:	103ee83a 	callr	r2
   4d77c:	00000106 	br	4d784 <alt_get_errno+0x28>
   4d780:	d0a6d104 	addi	r2,gp,-25788
}
   4d784:	e037883a 	mov	sp,fp
   4d788:	dfc00117 	ldw	ra,4(sp)
   4d78c:	df000017 	ldw	fp,0(sp)
   4d790:	dec00204 	addi	sp,sp,8
   4d794:	f800283a 	ret

0004d798 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4d798:	defff904 	addi	sp,sp,-28
   4d79c:	dfc00615 	stw	ra,24(sp)
   4d7a0:	df000515 	stw	fp,20(sp)
   4d7a4:	df000504 	addi	fp,sp,20
   4d7a8:	e13ffd15 	stw	r4,-12(fp)
   4d7ac:	e17ffe15 	stw	r5,-8(fp)
   4d7b0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d7b4:	e0bffd17 	ldw	r2,-12(fp)
   4d7b8:	10000616 	blt	r2,zero,4d7d4 <write+0x3c>
   4d7bc:	e0bffd17 	ldw	r2,-12(fp)
   4d7c0:	10c00324 	muli	r3,r2,12
   4d7c4:	00800174 	movhi	r2,5
   4d7c8:	1080af04 	addi	r2,r2,700
   4d7cc:	1885883a 	add	r2,r3,r2
   4d7d0:	00000106 	br	4d7d8 <write+0x40>
   4d7d4:	0005883a 	mov	r2,zero
   4d7d8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4d7dc:	e0bffb17 	ldw	r2,-20(fp)
   4d7e0:	10002126 	beq	r2,zero,4d868 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4d7e4:	e0bffb17 	ldw	r2,-20(fp)
   4d7e8:	10800217 	ldw	r2,8(r2)
   4d7ec:	108000cc 	andi	r2,r2,3
   4d7f0:	10001826 	beq	r2,zero,4d854 <write+0xbc>
   4d7f4:	e0bffb17 	ldw	r2,-20(fp)
   4d7f8:	10800017 	ldw	r2,0(r2)
   4d7fc:	10800617 	ldw	r2,24(r2)
   4d800:	10001426 	beq	r2,zero,4d854 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4d804:	e0bffb17 	ldw	r2,-20(fp)
   4d808:	10800017 	ldw	r2,0(r2)
   4d80c:	10800617 	ldw	r2,24(r2)
   4d810:	e0ffff17 	ldw	r3,-4(fp)
   4d814:	180d883a 	mov	r6,r3
   4d818:	e17ffe17 	ldw	r5,-8(fp)
   4d81c:	e13ffb17 	ldw	r4,-20(fp)
   4d820:	103ee83a 	callr	r2
   4d824:	e0bffc15 	stw	r2,-16(fp)
   4d828:	e0bffc17 	ldw	r2,-16(fp)
   4d82c:	1000070e 	bge	r2,zero,4d84c <write+0xb4>
      {
        ALT_ERRNO = -rval;
   4d830:	004d75c0 	call	4d75c <alt_get_errno>
   4d834:	1007883a 	mov	r3,r2
   4d838:	e0bffc17 	ldw	r2,-16(fp)
   4d83c:	0085c83a 	sub	r2,zero,r2
   4d840:	18800015 	stw	r2,0(r3)
        return -1;
   4d844:	00bfffc4 	movi	r2,-1
   4d848:	00000c06 	br	4d87c <write+0xe4>
      }
      return rval;
   4d84c:	e0bffc17 	ldw	r2,-16(fp)
   4d850:	00000a06 	br	4d87c <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4d854:	004d75c0 	call	4d75c <alt_get_errno>
   4d858:	1007883a 	mov	r3,r2
   4d85c:	00800344 	movi	r2,13
   4d860:	18800015 	stw	r2,0(r3)
   4d864:	00000406 	br	4d878 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4d868:	004d75c0 	call	4d75c <alt_get_errno>
   4d86c:	1007883a 	mov	r3,r2
   4d870:	00801444 	movi	r2,81
   4d874:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4d878:	00bfffc4 	movi	r2,-1
}
   4d87c:	e037883a 	mov	sp,fp
   4d880:	dfc00117 	ldw	ra,4(sp)
   4d884:	df000017 	ldw	fp,0(sp)
   4d888:	dec00204 	addi	sp,sp,8
   4d88c:	f800283a 	ret

0004d890 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4d890:	defffd04 	addi	sp,sp,-12
   4d894:	dfc00215 	stw	ra,8(sp)
   4d898:	df000115 	stw	fp,4(sp)
   4d89c:	df000104 	addi	fp,sp,4
   4d8a0:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4d8a4:	d1600804 	addi	r5,gp,-32736
   4d8a8:	e13fff17 	ldw	r4,-4(fp)
   4d8ac:	004e6b80 	call	4e6b8 <alt_dev_llist_insert>
}
   4d8b0:	e037883a 	mov	sp,fp
   4d8b4:	dfc00117 	ldw	ra,4(sp)
   4d8b8:	df000017 	ldw	fp,0(sp)
   4d8bc:	dec00204 	addi	sp,sp,8
   4d8c0:	f800283a 	ret

0004d8c4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4d8c4:	defffd04 	addi	sp,sp,-12
   4d8c8:	dfc00215 	stw	ra,8(sp)
   4d8cc:	df000115 	stw	fp,4(sp)
   4d8d0:	df000104 	addi	fp,sp,4
   4d8d4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS, nios2_qsys);
   4d8d8:	004f0280 	call	4f028 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4d8dc:	00800044 	movi	r2,1
   4d8e0:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   4d8e4:	0001883a 	nop
   4d8e8:	e037883a 	mov	sp,fp
   4d8ec:	dfc00117 	ldw	ra,4(sp)
   4d8f0:	df000017 	ldw	fp,0(sp)
   4d8f4:	dec00204 	addi	sp,sp,8
   4d8f8:	f800283a 	ret

0004d8fc <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4d8fc:	defffe04 	addi	sp,sp,-8
   4d900:	dfc00115 	stw	ra,4(sp)
   4d904:	df000015 	stw	fp,0(sp)
   4d908:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   4d90c:	000d883a 	mov	r6,zero
   4d910:	000b883a 	mov	r5,zero
   4d914:	01000174 	movhi	r4,5
   4d918:	21011904 	addi	r4,r4,1124
   4d91c:	004daac0 	call	4daac <altera_avalon_jtag_uart_init>
   4d920:	01000174 	movhi	r4,5
   4d924:	21010f04 	addi	r4,r4,1084
   4d928:	004d8900 	call	4d890 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
   4d92c:	0001883a 	nop
}
   4d930:	0001883a 	nop
   4d934:	e037883a 	mov	sp,fp
   4d938:	dfc00117 	ldw	ra,4(sp)
   4d93c:	df000017 	ldw	fp,0(sp)
   4d940:	dec00204 	addi	sp,sp,8
   4d944:	f800283a 	ret

0004d948 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4d948:	defffa04 	addi	sp,sp,-24
   4d94c:	dfc00515 	stw	ra,20(sp)
   4d950:	df000415 	stw	fp,16(sp)
   4d954:	df000404 	addi	fp,sp,16
   4d958:	e13ffd15 	stw	r4,-12(fp)
   4d95c:	e17ffe15 	stw	r5,-8(fp)
   4d960:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4d964:	e0bffd17 	ldw	r2,-12(fp)
   4d968:	10800017 	ldw	r2,0(r2)
   4d96c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4d970:	e0bffc17 	ldw	r2,-16(fp)
   4d974:	10c00a04 	addi	r3,r2,40
   4d978:	e0bffd17 	ldw	r2,-12(fp)
   4d97c:	10800217 	ldw	r2,8(r2)
   4d980:	100f883a 	mov	r7,r2
   4d984:	e1bfff17 	ldw	r6,-4(fp)
   4d988:	e17ffe17 	ldw	r5,-8(fp)
   4d98c:	1809883a 	mov	r4,r3
   4d990:	004df700 	call	4df70 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4d994:	e037883a 	mov	sp,fp
   4d998:	dfc00117 	ldw	ra,4(sp)
   4d99c:	df000017 	ldw	fp,0(sp)
   4d9a0:	dec00204 	addi	sp,sp,8
   4d9a4:	f800283a 	ret

0004d9a8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4d9a8:	defffa04 	addi	sp,sp,-24
   4d9ac:	dfc00515 	stw	ra,20(sp)
   4d9b0:	df000415 	stw	fp,16(sp)
   4d9b4:	df000404 	addi	fp,sp,16
   4d9b8:	e13ffd15 	stw	r4,-12(fp)
   4d9bc:	e17ffe15 	stw	r5,-8(fp)
   4d9c0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4d9c4:	e0bffd17 	ldw	r2,-12(fp)
   4d9c8:	10800017 	ldw	r2,0(r2)
   4d9cc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4d9d0:	e0bffc17 	ldw	r2,-16(fp)
   4d9d4:	10c00a04 	addi	r3,r2,40
   4d9d8:	e0bffd17 	ldw	r2,-12(fp)
   4d9dc:	10800217 	ldw	r2,8(r2)
   4d9e0:	100f883a 	mov	r7,r2
   4d9e4:	e1bfff17 	ldw	r6,-4(fp)
   4d9e8:	e17ffe17 	ldw	r5,-8(fp)
   4d9ec:	1809883a 	mov	r4,r3
   4d9f0:	004e18c0 	call	4e18c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4d9f4:	e037883a 	mov	sp,fp
   4d9f8:	dfc00117 	ldw	ra,4(sp)
   4d9fc:	df000017 	ldw	fp,0(sp)
   4da00:	dec00204 	addi	sp,sp,8
   4da04:	f800283a 	ret

0004da08 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4da08:	defffc04 	addi	sp,sp,-16
   4da0c:	dfc00315 	stw	ra,12(sp)
   4da10:	df000215 	stw	fp,8(sp)
   4da14:	df000204 	addi	fp,sp,8
   4da18:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4da1c:	e0bfff17 	ldw	r2,-4(fp)
   4da20:	10800017 	ldw	r2,0(r2)
   4da24:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4da28:	e0bffe17 	ldw	r2,-8(fp)
   4da2c:	10c00a04 	addi	r3,r2,40
   4da30:	e0bfff17 	ldw	r2,-4(fp)
   4da34:	10800217 	ldw	r2,8(r2)
   4da38:	100b883a 	mov	r5,r2
   4da3c:	1809883a 	mov	r4,r3
   4da40:	004de180 	call	4de18 <altera_avalon_jtag_uart_close>
}
   4da44:	e037883a 	mov	sp,fp
   4da48:	dfc00117 	ldw	ra,4(sp)
   4da4c:	df000017 	ldw	fp,0(sp)
   4da50:	dec00204 	addi	sp,sp,8
   4da54:	f800283a 	ret

0004da58 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4da58:	defffa04 	addi	sp,sp,-24
   4da5c:	dfc00515 	stw	ra,20(sp)
   4da60:	df000415 	stw	fp,16(sp)
   4da64:	df000404 	addi	fp,sp,16
   4da68:	e13ffd15 	stw	r4,-12(fp)
   4da6c:	e17ffe15 	stw	r5,-8(fp)
   4da70:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4da74:	e0bffd17 	ldw	r2,-12(fp)
   4da78:	10800017 	ldw	r2,0(r2)
   4da7c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4da80:	e0bffc17 	ldw	r2,-16(fp)
   4da84:	10800a04 	addi	r2,r2,40
   4da88:	e1bfff17 	ldw	r6,-4(fp)
   4da8c:	e17ffe17 	ldw	r5,-8(fp)
   4da90:	1009883a 	mov	r4,r2
   4da94:	004de800 	call	4de80 <altera_avalon_jtag_uart_ioctl>
}
   4da98:	e037883a 	mov	sp,fp
   4da9c:	dfc00117 	ldw	ra,4(sp)
   4daa0:	df000017 	ldw	fp,0(sp)
   4daa4:	dec00204 	addi	sp,sp,8
   4daa8:	f800283a 	ret

0004daac <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4daac:	defffa04 	addi	sp,sp,-24
   4dab0:	dfc00515 	stw	ra,20(sp)
   4dab4:	df000415 	stw	fp,16(sp)
   4dab8:	df000404 	addi	fp,sp,16
   4dabc:	e13ffd15 	stw	r4,-12(fp)
   4dac0:	e17ffe15 	stw	r5,-8(fp)
   4dac4:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4dac8:	e0bffd17 	ldw	r2,-12(fp)
   4dacc:	00c00044 	movi	r3,1
   4dad0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4dad4:	e0bffd17 	ldw	r2,-12(fp)
   4dad8:	10800017 	ldw	r2,0(r2)
   4dadc:	10800104 	addi	r2,r2,4
   4dae0:	1007883a 	mov	r3,r2
   4dae4:	e0bffd17 	ldw	r2,-12(fp)
   4dae8:	10800817 	ldw	r2,32(r2)
   4daec:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4daf0:	e0bffe17 	ldw	r2,-8(fp)
   4daf4:	e0ffff17 	ldw	r3,-4(fp)
   4daf8:	d8000015 	stw	zero,0(sp)
   4dafc:	e1fffd17 	ldw	r7,-12(fp)
   4db00:	01800174 	movhi	r6,5
   4db04:	31b6db04 	addi	r6,r6,-9364
   4db08:	180b883a 	mov	r5,r3
   4db0c:	1009883a 	mov	r4,r2
   4db10:	004e8500 	call	4e850 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4db14:	e0bffd17 	ldw	r2,-12(fp)
   4db18:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4db1c:	e0bffd17 	ldw	r2,-12(fp)
   4db20:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4db24:	d0e6d617 	ldw	r3,-25768(gp)
   4db28:	e1fffd17 	ldw	r7,-12(fp)
   4db2c:	01800174 	movhi	r6,5
   4db30:	31b75e04 	addi	r6,r6,-8840
   4db34:	180b883a 	mov	r5,r3
   4db38:	1009883a 	mov	r4,r2
   4db3c:	004e3b00 	call	4e3b0 <alt_alarm_start>
   4db40:	1000040e 	bge	r2,zero,4db54 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4db44:	e0fffd17 	ldw	r3,-12(fp)
   4db48:	00a00034 	movhi	r2,32768
   4db4c:	10bfffc4 	addi	r2,r2,-1
   4db50:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4db54:	0001883a 	nop
   4db58:	e037883a 	mov	sp,fp
   4db5c:	dfc00117 	ldw	ra,4(sp)
   4db60:	df000017 	ldw	fp,0(sp)
   4db64:	dec00204 	addi	sp,sp,8
   4db68:	f800283a 	ret

0004db6c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4db6c:	defff804 	addi	sp,sp,-32
   4db70:	df000715 	stw	fp,28(sp)
   4db74:	df000704 	addi	fp,sp,28
   4db78:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4db7c:	e0bfff17 	ldw	r2,-4(fp)
   4db80:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   4db84:	e0bffb17 	ldw	r2,-20(fp)
   4db88:	10800017 	ldw	r2,0(r2)
   4db8c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4db90:	e0bffc17 	ldw	r2,-16(fp)
   4db94:	10800104 	addi	r2,r2,4
   4db98:	10800037 	ldwio	r2,0(r2)
   4db9c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4dba0:	e0bffd17 	ldw	r2,-12(fp)
   4dba4:	1080c00c 	andi	r2,r2,768
   4dba8:	10006d26 	beq	r2,zero,4dd60 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4dbac:	e0bffd17 	ldw	r2,-12(fp)
   4dbb0:	1080400c 	andi	r2,r2,256
   4dbb4:	10003526 	beq	r2,zero,4dc8c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4dbb8:	00800074 	movhi	r2,1
   4dbbc:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4dbc0:	e0bffb17 	ldw	r2,-20(fp)
   4dbc4:	10800a17 	ldw	r2,40(r2)
   4dbc8:	10800044 	addi	r2,r2,1
   4dbcc:	1081ffcc 	andi	r2,r2,2047
   4dbd0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   4dbd4:	e0bffb17 	ldw	r2,-20(fp)
   4dbd8:	10c00b17 	ldw	r3,44(r2)
   4dbdc:	e0bffe17 	ldw	r2,-8(fp)
   4dbe0:	18801526 	beq	r3,r2,4dc38 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4dbe4:	e0bffc17 	ldw	r2,-16(fp)
   4dbe8:	10800037 	ldwio	r2,0(r2)
   4dbec:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4dbf0:	e0bff917 	ldw	r2,-28(fp)
   4dbf4:	10a0000c 	andi	r2,r2,32768
   4dbf8:	10001126 	beq	r2,zero,4dc40 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4dbfc:	e0bffb17 	ldw	r2,-20(fp)
   4dc00:	10800a17 	ldw	r2,40(r2)
   4dc04:	e0fff917 	ldw	r3,-28(fp)
   4dc08:	1809883a 	mov	r4,r3
   4dc0c:	e0fffb17 	ldw	r3,-20(fp)
   4dc10:	1885883a 	add	r2,r3,r2
   4dc14:	10800e04 	addi	r2,r2,56
   4dc18:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4dc1c:	e0bffb17 	ldw	r2,-20(fp)
   4dc20:	10800a17 	ldw	r2,40(r2)
   4dc24:	10800044 	addi	r2,r2,1
   4dc28:	10c1ffcc 	andi	r3,r2,2047
   4dc2c:	e0bffb17 	ldw	r2,-20(fp)
   4dc30:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   4dc34:	003fe206 	br	4dbc0 <__alt_data_end+0xfffe6ac0>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   4dc38:	0001883a 	nop
   4dc3c:	00000106 	br	4dc44 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   4dc40:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4dc44:	e0bff917 	ldw	r2,-28(fp)
   4dc48:	10bfffec 	andhi	r2,r2,65535
   4dc4c:	10000f26 	beq	r2,zero,4dc8c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4dc50:	e0bffb17 	ldw	r2,-20(fp)
   4dc54:	10c00817 	ldw	r3,32(r2)
   4dc58:	00bfff84 	movi	r2,-2
   4dc5c:	1886703a 	and	r3,r3,r2
   4dc60:	e0bffb17 	ldw	r2,-20(fp)
   4dc64:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4dc68:	e0bffc17 	ldw	r2,-16(fp)
   4dc6c:	10800104 	addi	r2,r2,4
   4dc70:	1007883a 	mov	r3,r2
   4dc74:	e0bffb17 	ldw	r2,-20(fp)
   4dc78:	10800817 	ldw	r2,32(r2)
   4dc7c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4dc80:	e0bffc17 	ldw	r2,-16(fp)
   4dc84:	10800104 	addi	r2,r2,4
   4dc88:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4dc8c:	e0bffd17 	ldw	r2,-12(fp)
   4dc90:	1080800c 	andi	r2,r2,512
   4dc94:	103fbe26 	beq	r2,zero,4db90 <__alt_data_end+0xfffe6a90>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4dc98:	e0bffd17 	ldw	r2,-12(fp)
   4dc9c:	1004d43a 	srli	r2,r2,16
   4dca0:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4dca4:	00001406 	br	4dcf8 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4dca8:	e0bffc17 	ldw	r2,-16(fp)
   4dcac:	e0fffb17 	ldw	r3,-20(fp)
   4dcb0:	18c00d17 	ldw	r3,52(r3)
   4dcb4:	e13ffb17 	ldw	r4,-20(fp)
   4dcb8:	20c7883a 	add	r3,r4,r3
   4dcbc:	18c20e04 	addi	r3,r3,2104
   4dcc0:	18c00003 	ldbu	r3,0(r3)
   4dcc4:	18c03fcc 	andi	r3,r3,255
   4dcc8:	18c0201c 	xori	r3,r3,128
   4dccc:	18ffe004 	addi	r3,r3,-128
   4dcd0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4dcd4:	e0bffb17 	ldw	r2,-20(fp)
   4dcd8:	10800d17 	ldw	r2,52(r2)
   4dcdc:	10800044 	addi	r2,r2,1
   4dce0:	10c1ffcc 	andi	r3,r2,2047
   4dce4:	e0bffb17 	ldw	r2,-20(fp)
   4dce8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   4dcec:	e0bffa17 	ldw	r2,-24(fp)
   4dcf0:	10bfffc4 	addi	r2,r2,-1
   4dcf4:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   4dcf8:	e0bffa17 	ldw	r2,-24(fp)
   4dcfc:	10000526 	beq	r2,zero,4dd14 <altera_avalon_jtag_uart_irq+0x1a8>
   4dd00:	e0bffb17 	ldw	r2,-20(fp)
   4dd04:	10c00d17 	ldw	r3,52(r2)
   4dd08:	e0bffb17 	ldw	r2,-20(fp)
   4dd0c:	10800c17 	ldw	r2,48(r2)
   4dd10:	18bfe51e 	bne	r3,r2,4dca8 <__alt_data_end+0xfffe6ba8>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   4dd14:	e0bffa17 	ldw	r2,-24(fp)
   4dd18:	103f9d26 	beq	r2,zero,4db90 <__alt_data_end+0xfffe6a90>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4dd1c:	e0bffb17 	ldw	r2,-20(fp)
   4dd20:	10c00817 	ldw	r3,32(r2)
   4dd24:	00bfff44 	movi	r2,-3
   4dd28:	1886703a 	and	r3,r3,r2
   4dd2c:	e0bffb17 	ldw	r2,-20(fp)
   4dd30:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4dd34:	e0bffb17 	ldw	r2,-20(fp)
   4dd38:	10800017 	ldw	r2,0(r2)
   4dd3c:	10800104 	addi	r2,r2,4
   4dd40:	1007883a 	mov	r3,r2
   4dd44:	e0bffb17 	ldw	r2,-20(fp)
   4dd48:	10800817 	ldw	r2,32(r2)
   4dd4c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4dd50:	e0bffc17 	ldw	r2,-16(fp)
   4dd54:	10800104 	addi	r2,r2,4
   4dd58:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   4dd5c:	003f8c06 	br	4db90 <__alt_data_end+0xfffe6a90>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   4dd60:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   4dd64:	0001883a 	nop
   4dd68:	e037883a 	mov	sp,fp
   4dd6c:	df000017 	ldw	fp,0(sp)
   4dd70:	dec00104 	addi	sp,sp,4
   4dd74:	f800283a 	ret

0004dd78 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4dd78:	defff804 	addi	sp,sp,-32
   4dd7c:	df000715 	stw	fp,28(sp)
   4dd80:	df000704 	addi	fp,sp,28
   4dd84:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4dd88:	e0bffb17 	ldw	r2,-20(fp)
   4dd8c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4dd90:	e0bff917 	ldw	r2,-28(fp)
   4dd94:	10800017 	ldw	r2,0(r2)
   4dd98:	10800104 	addi	r2,r2,4
   4dd9c:	10800037 	ldwio	r2,0(r2)
   4dda0:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4dda4:	e0bffa17 	ldw	r2,-24(fp)
   4dda8:	1081000c 	andi	r2,r2,1024
   4ddac:	10000b26 	beq	r2,zero,4dddc <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4ddb0:	e0bff917 	ldw	r2,-28(fp)
   4ddb4:	10800017 	ldw	r2,0(r2)
   4ddb8:	10800104 	addi	r2,r2,4
   4ddbc:	1007883a 	mov	r3,r2
   4ddc0:	e0bff917 	ldw	r2,-28(fp)
   4ddc4:	10800817 	ldw	r2,32(r2)
   4ddc8:	10810014 	ori	r2,r2,1024
   4ddcc:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4ddd0:	e0bff917 	ldw	r2,-28(fp)
   4ddd4:	10000915 	stw	zero,36(r2)
   4ddd8:	00000a06 	br	4de04 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4dddc:	e0bff917 	ldw	r2,-28(fp)
   4dde0:	10c00917 	ldw	r3,36(r2)
   4dde4:	00a00034 	movhi	r2,32768
   4dde8:	10bfff04 	addi	r2,r2,-4
   4ddec:	10c00536 	bltu	r2,r3,4de04 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   4ddf0:	e0bff917 	ldw	r2,-28(fp)
   4ddf4:	10800917 	ldw	r2,36(r2)
   4ddf8:	10c00044 	addi	r3,r2,1
   4ddfc:	e0bff917 	ldw	r2,-28(fp)
   4de00:	10c00915 	stw	r3,36(r2)
   4de04:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4de08:	e037883a 	mov	sp,fp
   4de0c:	df000017 	ldw	fp,0(sp)
   4de10:	dec00104 	addi	sp,sp,4
   4de14:	f800283a 	ret

0004de18 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4de18:	defffd04 	addi	sp,sp,-12
   4de1c:	df000215 	stw	fp,8(sp)
   4de20:	df000204 	addi	fp,sp,8
   4de24:	e13ffe15 	stw	r4,-8(fp)
   4de28:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4de2c:	00000506 	br	4de44 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4de30:	e0bfff17 	ldw	r2,-4(fp)
   4de34:	1090000c 	andi	r2,r2,16384
   4de38:	10000226 	beq	r2,zero,4de44 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4de3c:	00bffd44 	movi	r2,-11
   4de40:	00000b06 	br	4de70 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4de44:	e0bffe17 	ldw	r2,-8(fp)
   4de48:	10c00d17 	ldw	r3,52(r2)
   4de4c:	e0bffe17 	ldw	r2,-8(fp)
   4de50:	10800c17 	ldw	r2,48(r2)
   4de54:	18800526 	beq	r3,r2,4de6c <altera_avalon_jtag_uart_close+0x54>
   4de58:	e0bffe17 	ldw	r2,-8(fp)
   4de5c:	10c00917 	ldw	r3,36(r2)
   4de60:	e0bffe17 	ldw	r2,-8(fp)
   4de64:	10800117 	ldw	r2,4(r2)
   4de68:	18bff136 	bltu	r3,r2,4de30 <__alt_data_end+0xfffe6d30>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   4de6c:	0005883a 	mov	r2,zero
}
   4de70:	e037883a 	mov	sp,fp
   4de74:	df000017 	ldw	fp,0(sp)
   4de78:	dec00104 	addi	sp,sp,4
   4de7c:	f800283a 	ret

0004de80 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4de80:	defffa04 	addi	sp,sp,-24
   4de84:	df000515 	stw	fp,20(sp)
   4de88:	df000504 	addi	fp,sp,20
   4de8c:	e13ffd15 	stw	r4,-12(fp)
   4de90:	e17ffe15 	stw	r5,-8(fp)
   4de94:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   4de98:	00bff9c4 	movi	r2,-25
   4de9c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   4dea0:	e0bffe17 	ldw	r2,-8(fp)
   4dea4:	10da8060 	cmpeqi	r3,r2,27137
   4dea8:	1800031e 	bne	r3,zero,4deb8 <altera_avalon_jtag_uart_ioctl+0x38>
   4deac:	109a80a0 	cmpeqi	r2,r2,27138
   4deb0:	1000181e 	bne	r2,zero,4df14 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   4deb4:	00002906 	br	4df5c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   4deb8:	e0bffd17 	ldw	r2,-12(fp)
   4debc:	10c00117 	ldw	r3,4(r2)
   4dec0:	00a00034 	movhi	r2,32768
   4dec4:	10bfffc4 	addi	r2,r2,-1
   4dec8:	18802126 	beq	r3,r2,4df50 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   4decc:	e0bfff17 	ldw	r2,-4(fp)
   4ded0:	10800017 	ldw	r2,0(r2)
   4ded4:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4ded8:	e0bffc17 	ldw	r2,-16(fp)
   4dedc:	10800090 	cmplti	r2,r2,2
   4dee0:	1000061e 	bne	r2,zero,4defc <altera_avalon_jtag_uart_ioctl+0x7c>
   4dee4:	e0fffc17 	ldw	r3,-16(fp)
   4dee8:	00a00034 	movhi	r2,32768
   4deec:	10bfffc4 	addi	r2,r2,-1
   4def0:	18800226 	beq	r3,r2,4defc <altera_avalon_jtag_uart_ioctl+0x7c>
   4def4:	e0bffc17 	ldw	r2,-16(fp)
   4def8:	00000206 	br	4df04 <altera_avalon_jtag_uart_ioctl+0x84>
   4defc:	00a00034 	movhi	r2,32768
   4df00:	10bfff84 	addi	r2,r2,-2
   4df04:	e0fffd17 	ldw	r3,-12(fp)
   4df08:	18800115 	stw	r2,4(r3)
      rc = 0;
   4df0c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4df10:	00000f06 	br	4df50 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   4df14:	e0bffd17 	ldw	r2,-12(fp)
   4df18:	10c00117 	ldw	r3,4(r2)
   4df1c:	00a00034 	movhi	r2,32768
   4df20:	10bfffc4 	addi	r2,r2,-1
   4df24:	18800c26 	beq	r3,r2,4df58 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4df28:	e0bffd17 	ldw	r2,-12(fp)
   4df2c:	10c00917 	ldw	r3,36(r2)
   4df30:	e0bffd17 	ldw	r2,-12(fp)
   4df34:	10800117 	ldw	r2,4(r2)
   4df38:	1885803a 	cmpltu	r2,r3,r2
   4df3c:	10c03fcc 	andi	r3,r2,255
   4df40:	e0bfff17 	ldw	r2,-4(fp)
   4df44:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4df48:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4df4c:	00000206 	br	4df58 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   4df50:	0001883a 	nop
   4df54:	00000106 	br	4df5c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   4df58:	0001883a 	nop

  default:
    break;
  }

  return rc;
   4df5c:	e0bffb17 	ldw	r2,-20(fp)
}
   4df60:	e037883a 	mov	sp,fp
   4df64:	df000017 	ldw	fp,0(sp)
   4df68:	dec00104 	addi	sp,sp,4
   4df6c:	f800283a 	ret

0004df70 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4df70:	defff304 	addi	sp,sp,-52
   4df74:	dfc00c15 	stw	ra,48(sp)
   4df78:	df000b15 	stw	fp,44(sp)
   4df7c:	df000b04 	addi	fp,sp,44
   4df80:	e13ffc15 	stw	r4,-16(fp)
   4df84:	e17ffd15 	stw	r5,-12(fp)
   4df88:	e1bffe15 	stw	r6,-8(fp)
   4df8c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   4df90:	e0bffd17 	ldw	r2,-12(fp)
   4df94:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4df98:	00004706 	br	4e0b8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4df9c:	e0bffc17 	ldw	r2,-16(fp)
   4dfa0:	10800a17 	ldw	r2,40(r2)
   4dfa4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   4dfa8:	e0bffc17 	ldw	r2,-16(fp)
   4dfac:	10800b17 	ldw	r2,44(r2)
   4dfb0:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   4dfb4:	e0fff717 	ldw	r3,-36(fp)
   4dfb8:	e0bff817 	ldw	r2,-32(fp)
   4dfbc:	18800536 	bltu	r3,r2,4dfd4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4dfc0:	e0fff717 	ldw	r3,-36(fp)
   4dfc4:	e0bff817 	ldw	r2,-32(fp)
   4dfc8:	1885c83a 	sub	r2,r3,r2
   4dfcc:	e0bff615 	stw	r2,-40(fp)
   4dfd0:	00000406 	br	4dfe4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4dfd4:	00c20004 	movi	r3,2048
   4dfd8:	e0bff817 	ldw	r2,-32(fp)
   4dfdc:	1885c83a 	sub	r2,r3,r2
   4dfe0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4dfe4:	e0bff617 	ldw	r2,-40(fp)
   4dfe8:	10001e26 	beq	r2,zero,4e064 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4dfec:	e0fffe17 	ldw	r3,-8(fp)
   4dff0:	e0bff617 	ldw	r2,-40(fp)
   4dff4:	1880022e 	bgeu	r3,r2,4e000 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4dff8:	e0bffe17 	ldw	r2,-8(fp)
   4dffc:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4e000:	e0bffc17 	ldw	r2,-16(fp)
   4e004:	10c00e04 	addi	r3,r2,56
   4e008:	e0bff817 	ldw	r2,-32(fp)
   4e00c:	1885883a 	add	r2,r3,r2
   4e010:	e1bff617 	ldw	r6,-40(fp)
   4e014:	100b883a 	mov	r5,r2
   4e018:	e13ff517 	ldw	r4,-44(fp)
   4e01c:	00468a00 	call	468a0 <memcpy>
      ptr   += n;
   4e020:	e0fff517 	ldw	r3,-44(fp)
   4e024:	e0bff617 	ldw	r2,-40(fp)
   4e028:	1885883a 	add	r2,r3,r2
   4e02c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   4e030:	e0fffe17 	ldw	r3,-8(fp)
   4e034:	e0bff617 	ldw	r2,-40(fp)
   4e038:	1885c83a 	sub	r2,r3,r2
   4e03c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e040:	e0fff817 	ldw	r3,-32(fp)
   4e044:	e0bff617 	ldw	r2,-40(fp)
   4e048:	1885883a 	add	r2,r3,r2
   4e04c:	10c1ffcc 	andi	r3,r2,2047
   4e050:	e0bffc17 	ldw	r2,-16(fp)
   4e054:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4e058:	e0bffe17 	ldw	r2,-8(fp)
   4e05c:	00bfcf16 	blt	zero,r2,4df9c <__alt_data_end+0xfffe6e9c>
   4e060:	00000106 	br	4e068 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   4e064:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   4e068:	e0fff517 	ldw	r3,-44(fp)
   4e06c:	e0bffd17 	ldw	r2,-12(fp)
   4e070:	1880141e 	bne	r3,r2,4e0c4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4e074:	e0bfff17 	ldw	r2,-4(fp)
   4e078:	1090000c 	andi	r2,r2,16384
   4e07c:	1000131e 	bne	r2,zero,4e0cc <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4e080:	0001883a 	nop
   4e084:	e0bffc17 	ldw	r2,-16(fp)
   4e088:	10c00a17 	ldw	r3,40(r2)
   4e08c:	e0bff717 	ldw	r2,-36(fp)
   4e090:	1880051e 	bne	r3,r2,4e0a8 <altera_avalon_jtag_uart_read+0x138>
   4e094:	e0bffc17 	ldw	r2,-16(fp)
   4e098:	10c00917 	ldw	r3,36(r2)
   4e09c:	e0bffc17 	ldw	r2,-16(fp)
   4e0a0:	10800117 	ldw	r2,4(r2)
   4e0a4:	18bff736 	bltu	r3,r2,4e084 <__alt_data_end+0xfffe6f84>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4e0a8:	e0bffc17 	ldw	r2,-16(fp)
   4e0ac:	10c00a17 	ldw	r3,40(r2)
   4e0b0:	e0bff717 	ldw	r2,-36(fp)
   4e0b4:	18800726 	beq	r3,r2,4e0d4 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e0b8:	e0bffe17 	ldw	r2,-8(fp)
   4e0bc:	00bfb716 	blt	zero,r2,4df9c <__alt_data_end+0xfffe6e9c>
   4e0c0:	00000506 	br	4e0d8 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   4e0c4:	0001883a 	nop
   4e0c8:	00000306 	br	4e0d8 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   4e0cc:	0001883a 	nop
   4e0d0:	00000106 	br	4e0d8 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   4e0d4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4e0d8:	e0fff517 	ldw	r3,-44(fp)
   4e0dc:	e0bffd17 	ldw	r2,-12(fp)
   4e0e0:	18801826 	beq	r3,r2,4e144 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e0e4:	0005303a 	rdctl	r2,status
   4e0e8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e0ec:	e0fffb17 	ldw	r3,-20(fp)
   4e0f0:	00bfff84 	movi	r2,-2
   4e0f4:	1884703a 	and	r2,r3,r2
   4e0f8:	1001703a 	wrctl	status,r2
  
  return context;
   4e0fc:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4e100:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e104:	e0bffc17 	ldw	r2,-16(fp)
   4e108:	10800817 	ldw	r2,32(r2)
   4e10c:	10c00054 	ori	r3,r2,1
   4e110:	e0bffc17 	ldw	r2,-16(fp)
   4e114:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e118:	e0bffc17 	ldw	r2,-16(fp)
   4e11c:	10800017 	ldw	r2,0(r2)
   4e120:	10800104 	addi	r2,r2,4
   4e124:	1007883a 	mov	r3,r2
   4e128:	e0bffc17 	ldw	r2,-16(fp)
   4e12c:	10800817 	ldw	r2,32(r2)
   4e130:	18800035 	stwio	r2,0(r3)
   4e134:	e0bffa17 	ldw	r2,-24(fp)
   4e138:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e13c:	e0bff917 	ldw	r2,-28(fp)
   4e140:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4e144:	e0fff517 	ldw	r3,-44(fp)
   4e148:	e0bffd17 	ldw	r2,-12(fp)
   4e14c:	18800426 	beq	r3,r2,4e160 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   4e150:	e0fff517 	ldw	r3,-44(fp)
   4e154:	e0bffd17 	ldw	r2,-12(fp)
   4e158:	1885c83a 	sub	r2,r3,r2
   4e15c:	00000606 	br	4e178 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   4e160:	e0bfff17 	ldw	r2,-4(fp)
   4e164:	1090000c 	andi	r2,r2,16384
   4e168:	10000226 	beq	r2,zero,4e174 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   4e16c:	00bffd44 	movi	r2,-11
   4e170:	00000106 	br	4e178 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   4e174:	00bffec4 	movi	r2,-5
}
   4e178:	e037883a 	mov	sp,fp
   4e17c:	dfc00117 	ldw	ra,4(sp)
   4e180:	df000017 	ldw	fp,0(sp)
   4e184:	dec00204 	addi	sp,sp,8
   4e188:	f800283a 	ret

0004e18c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4e18c:	defff304 	addi	sp,sp,-52
   4e190:	dfc00c15 	stw	ra,48(sp)
   4e194:	df000b15 	stw	fp,44(sp)
   4e198:	df000b04 	addi	fp,sp,44
   4e19c:	e13ffc15 	stw	r4,-16(fp)
   4e1a0:	e17ffd15 	stw	r5,-12(fp)
   4e1a4:	e1bffe15 	stw	r6,-8(fp)
   4e1a8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4e1ac:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4e1b0:	e0bffd17 	ldw	r2,-12(fp)
   4e1b4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e1b8:	00003706 	br	4e298 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4e1bc:	e0bffc17 	ldw	r2,-16(fp)
   4e1c0:	10800c17 	ldw	r2,48(r2)
   4e1c4:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   4e1c8:	e0bffc17 	ldw	r2,-16(fp)
   4e1cc:	10800d17 	ldw	r2,52(r2)
   4e1d0:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   4e1d4:	e0fff917 	ldw	r3,-28(fp)
   4e1d8:	e0bff517 	ldw	r2,-44(fp)
   4e1dc:	1880062e 	bgeu	r3,r2,4e1f8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4e1e0:	e0fff517 	ldw	r3,-44(fp)
   4e1e4:	e0bff917 	ldw	r2,-28(fp)
   4e1e8:	1885c83a 	sub	r2,r3,r2
   4e1ec:	10bfffc4 	addi	r2,r2,-1
   4e1f0:	e0bff615 	stw	r2,-40(fp)
   4e1f4:	00000b06 	br	4e224 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4e1f8:	e0bff517 	ldw	r2,-44(fp)
   4e1fc:	10000526 	beq	r2,zero,4e214 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4e200:	00c20004 	movi	r3,2048
   4e204:	e0bff917 	ldw	r2,-28(fp)
   4e208:	1885c83a 	sub	r2,r3,r2
   4e20c:	e0bff615 	stw	r2,-40(fp)
   4e210:	00000406 	br	4e224 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4e214:	00c1ffc4 	movi	r3,2047
   4e218:	e0bff917 	ldw	r2,-28(fp)
   4e21c:	1885c83a 	sub	r2,r3,r2
   4e220:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e224:	e0bff617 	ldw	r2,-40(fp)
   4e228:	10001e26 	beq	r2,zero,4e2a4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4e22c:	e0fffe17 	ldw	r3,-8(fp)
   4e230:	e0bff617 	ldw	r2,-40(fp)
   4e234:	1880022e 	bgeu	r3,r2,4e240 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4e238:	e0bffe17 	ldw	r2,-8(fp)
   4e23c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4e240:	e0bffc17 	ldw	r2,-16(fp)
   4e244:	10c20e04 	addi	r3,r2,2104
   4e248:	e0bff917 	ldw	r2,-28(fp)
   4e24c:	1885883a 	add	r2,r3,r2
   4e250:	e1bff617 	ldw	r6,-40(fp)
   4e254:	e17ffd17 	ldw	r5,-12(fp)
   4e258:	1009883a 	mov	r4,r2
   4e25c:	00468a00 	call	468a0 <memcpy>
      ptr   += n;
   4e260:	e0fffd17 	ldw	r3,-12(fp)
   4e264:	e0bff617 	ldw	r2,-40(fp)
   4e268:	1885883a 	add	r2,r3,r2
   4e26c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   4e270:	e0fffe17 	ldw	r3,-8(fp)
   4e274:	e0bff617 	ldw	r2,-40(fp)
   4e278:	1885c83a 	sub	r2,r3,r2
   4e27c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e280:	e0fff917 	ldw	r3,-28(fp)
   4e284:	e0bff617 	ldw	r2,-40(fp)
   4e288:	1885883a 	add	r2,r3,r2
   4e28c:	10c1ffcc 	andi	r3,r2,2047
   4e290:	e0bffc17 	ldw	r2,-16(fp)
   4e294:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e298:	e0bffe17 	ldw	r2,-8(fp)
   4e29c:	00bfc716 	blt	zero,r2,4e1bc <__alt_data_end+0xfffe70bc>
   4e2a0:	00000106 	br	4e2a8 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   4e2a4:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e2a8:	0005303a 	rdctl	r2,status
   4e2ac:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e2b0:	e0fffb17 	ldw	r3,-20(fp)
   4e2b4:	00bfff84 	movi	r2,-2
   4e2b8:	1884703a 	and	r2,r3,r2
   4e2bc:	1001703a 	wrctl	status,r2
  
  return context;
   4e2c0:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4e2c4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e2c8:	e0bffc17 	ldw	r2,-16(fp)
   4e2cc:	10800817 	ldw	r2,32(r2)
   4e2d0:	10c00094 	ori	r3,r2,2
   4e2d4:	e0bffc17 	ldw	r2,-16(fp)
   4e2d8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e2dc:	e0bffc17 	ldw	r2,-16(fp)
   4e2e0:	10800017 	ldw	r2,0(r2)
   4e2e4:	10800104 	addi	r2,r2,4
   4e2e8:	1007883a 	mov	r3,r2
   4e2ec:	e0bffc17 	ldw	r2,-16(fp)
   4e2f0:	10800817 	ldw	r2,32(r2)
   4e2f4:	18800035 	stwio	r2,0(r3)
   4e2f8:	e0bffa17 	ldw	r2,-24(fp)
   4e2fc:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e300:	e0bff817 	ldw	r2,-32(fp)
   4e304:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4e308:	e0bffe17 	ldw	r2,-8(fp)
   4e30c:	0080100e 	bge	zero,r2,4e350 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   4e310:	e0bfff17 	ldw	r2,-4(fp)
   4e314:	1090000c 	andi	r2,r2,16384
   4e318:	1000101e 	bne	r2,zero,4e35c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4e31c:	0001883a 	nop
   4e320:	e0bffc17 	ldw	r2,-16(fp)
   4e324:	10c00d17 	ldw	r3,52(r2)
   4e328:	e0bff517 	ldw	r2,-44(fp)
   4e32c:	1880051e 	bne	r3,r2,4e344 <altera_avalon_jtag_uart_write+0x1b8>
   4e330:	e0bffc17 	ldw	r2,-16(fp)
   4e334:	10c00917 	ldw	r3,36(r2)
   4e338:	e0bffc17 	ldw	r2,-16(fp)
   4e33c:	10800117 	ldw	r2,4(r2)
   4e340:	18bff736 	bltu	r3,r2,4e320 <__alt_data_end+0xfffe7220>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4e344:	e0bffc17 	ldw	r2,-16(fp)
   4e348:	10800917 	ldw	r2,36(r2)
   4e34c:	1000051e 	bne	r2,zero,4e364 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   4e350:	e0bffe17 	ldw	r2,-8(fp)
   4e354:	00bfd016 	blt	zero,r2,4e298 <__alt_data_end+0xfffe7198>
   4e358:	00000306 	br	4e368 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   4e35c:	0001883a 	nop
   4e360:	00000106 	br	4e368 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   4e364:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4e368:	e0fffd17 	ldw	r3,-12(fp)
   4e36c:	e0bff717 	ldw	r2,-36(fp)
   4e370:	18800426 	beq	r3,r2,4e384 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   4e374:	e0fffd17 	ldw	r3,-12(fp)
   4e378:	e0bff717 	ldw	r2,-36(fp)
   4e37c:	1885c83a 	sub	r2,r3,r2
   4e380:	00000606 	br	4e39c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   4e384:	e0bfff17 	ldw	r2,-4(fp)
   4e388:	1090000c 	andi	r2,r2,16384
   4e38c:	10000226 	beq	r2,zero,4e398 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   4e390:	00bffd44 	movi	r2,-11
   4e394:	00000106 	br	4e39c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4e398:	00bffec4 	movi	r2,-5
}
   4e39c:	e037883a 	mov	sp,fp
   4e3a0:	dfc00117 	ldw	ra,4(sp)
   4e3a4:	df000017 	ldw	fp,0(sp)
   4e3a8:	dec00204 	addi	sp,sp,8
   4e3ac:	f800283a 	ret

0004e3b0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   4e3b0:	defff504 	addi	sp,sp,-44
   4e3b4:	df000a15 	stw	fp,40(sp)
   4e3b8:	df000a04 	addi	fp,sp,40
   4e3bc:	e13ffc15 	stw	r4,-16(fp)
   4e3c0:	e17ffd15 	stw	r5,-12(fp)
   4e3c4:	e1bffe15 	stw	r6,-8(fp)
   4e3c8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   4e3cc:	e03ff615 	stw	zero,-40(fp)
   4e3d0:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
   4e3d4:	10003c26 	beq	r2,zero,4e4c8 <alt_alarm_start+0x118>
  {
    if (alarm)
   4e3d8:	e0bffc17 	ldw	r2,-16(fp)
   4e3dc:	10003826 	beq	r2,zero,4e4c0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   4e3e0:	e0bffc17 	ldw	r2,-16(fp)
   4e3e4:	e0fffe17 	ldw	r3,-8(fp)
   4e3e8:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   4e3ec:	e0bffc17 	ldw	r2,-16(fp)
   4e3f0:	e0ffff17 	ldw	r3,-4(fp)
   4e3f4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e3f8:	0005303a 	rdctl	r2,status
   4e3fc:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e400:	e0fff917 	ldw	r3,-28(fp)
   4e404:	00bfff84 	movi	r2,-2
   4e408:	1884703a 	and	r2,r3,r2
   4e40c:	1001703a 	wrctl	status,r2
  
  return context;
   4e410:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   4e414:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   4e418:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
   4e41c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   4e420:	e0fffd17 	ldw	r3,-12(fp)
   4e424:	e0bff617 	ldw	r2,-40(fp)
   4e428:	1885883a 	add	r2,r3,r2
   4e42c:	10c00044 	addi	r3,r2,1
   4e430:	e0bffc17 	ldw	r2,-16(fp)
   4e434:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   4e438:	e0bffc17 	ldw	r2,-16(fp)
   4e43c:	10c00217 	ldw	r3,8(r2)
   4e440:	e0bff617 	ldw	r2,-40(fp)
   4e444:	1880042e 	bgeu	r3,r2,4e458 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   4e448:	e0bffc17 	ldw	r2,-16(fp)
   4e44c:	00c00044 	movi	r3,1
   4e450:	10c00405 	stb	r3,16(r2)
   4e454:	00000206 	br	4e460 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   4e458:	e0bffc17 	ldw	r2,-16(fp)
   4e45c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   4e460:	e0bffc17 	ldw	r2,-16(fp)
   4e464:	d0e00e04 	addi	r3,gp,-32712
   4e468:	e0fffa15 	stw	r3,-24(fp)
   4e46c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4e470:	e0bffb17 	ldw	r2,-20(fp)
   4e474:	e0fffa17 	ldw	r3,-24(fp)
   4e478:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4e47c:	e0bffa17 	ldw	r2,-24(fp)
   4e480:	10c00017 	ldw	r3,0(r2)
   4e484:	e0bffb17 	ldw	r2,-20(fp)
   4e488:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4e48c:	e0bffa17 	ldw	r2,-24(fp)
   4e490:	10800017 	ldw	r2,0(r2)
   4e494:	e0fffb17 	ldw	r3,-20(fp)
   4e498:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4e49c:	e0bffa17 	ldw	r2,-24(fp)
   4e4a0:	e0fffb17 	ldw	r3,-20(fp)
   4e4a4:	10c00015 	stw	r3,0(r2)
   4e4a8:	e0bff817 	ldw	r2,-32(fp)
   4e4ac:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e4b0:	e0bff717 	ldw	r2,-36(fp)
   4e4b4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   4e4b8:	0005883a 	mov	r2,zero
   4e4bc:	00000306 	br	4e4cc <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   4e4c0:	00bffa84 	movi	r2,-22
   4e4c4:	00000106 	br	4e4cc <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   4e4c8:	00bfde84 	movi	r2,-134
  }
}
   4e4cc:	e037883a 	mov	sp,fp
   4e4d0:	df000017 	ldw	fp,0(sp)
   4e4d4:	dec00104 	addi	sp,sp,4
   4e4d8:	f800283a 	ret

0004e4dc <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   4e4dc:	defffa04 	addi	sp,sp,-24
   4e4e0:	dfc00515 	stw	ra,20(sp)
   4e4e4:	df000415 	stw	fp,16(sp)
   4e4e8:	df000404 	addi	fp,sp,16
   4e4ec:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   4e4f0:	008000c4 	movi	r2,3
   4e4f4:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   4e4f8:	e0fffd17 	ldw	r3,-12(fp)
   4e4fc:	008003f4 	movhi	r2,15
   4e500:	10909004 	addi	r2,r2,16960
   4e504:	1885383a 	mul	r2,r3,r2
   4e508:	100b883a 	mov	r5,r2
   4e50c:	01017db4 	movhi	r4,1526
   4e510:	21384004 	addi	r4,r4,-7936
   4e514:	004afd00 	call	4afd0 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   4e518:	100b883a 	mov	r5,r2
   4e51c:	01200034 	movhi	r4,32768
   4e520:	213fffc4 	addi	r4,r4,-1
   4e524:	004afd00 	call	4afd0 <__udivsi3>
   4e528:	100b883a 	mov	r5,r2
   4e52c:	e13fff17 	ldw	r4,-4(fp)
   4e530:	004afd00 	call	4afd0 <__udivsi3>
   4e534:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   4e538:	e0bffe17 	ldw	r2,-8(fp)
   4e53c:	10002a26 	beq	r2,zero,4e5e8 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   4e540:	e03ffc15 	stw	zero,-16(fp)
   4e544:	00001706 	br	4e5a4 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   4e548:	00a00034 	movhi	r2,32768
   4e54c:	10bfffc4 	addi	r2,r2,-1
   4e550:	10bfffc4 	addi	r2,r2,-1
   4e554:	103ffe1e 	bne	r2,zero,4e550 <__alt_data_end+0xfffe7450>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   4e558:	e0fffd17 	ldw	r3,-12(fp)
   4e55c:	008003f4 	movhi	r2,15
   4e560:	10909004 	addi	r2,r2,16960
   4e564:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   4e568:	100b883a 	mov	r5,r2
   4e56c:	01017db4 	movhi	r4,1526
   4e570:	21384004 	addi	r4,r4,-7936
   4e574:	004afd00 	call	4afd0 <__udivsi3>
   4e578:	100b883a 	mov	r5,r2
   4e57c:	01200034 	movhi	r4,32768
   4e580:	213fffc4 	addi	r4,r4,-1
   4e584:	004afd00 	call	4afd0 <__udivsi3>
   4e588:	1007883a 	mov	r3,r2
   4e58c:	e0bfff17 	ldw	r2,-4(fp)
   4e590:	10c5c83a 	sub	r2,r2,r3
   4e594:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   4e598:	e0bffc17 	ldw	r2,-16(fp)
   4e59c:	10800044 	addi	r2,r2,1
   4e5a0:	e0bffc15 	stw	r2,-16(fp)
   4e5a4:	e0fffc17 	ldw	r3,-16(fp)
   4e5a8:	e0bffe17 	ldw	r2,-8(fp)
   4e5ac:	18bfe616 	blt	r3,r2,4e548 <__alt_data_end+0xfffe7448>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4e5b0:	e0fffd17 	ldw	r3,-12(fp)
   4e5b4:	008003f4 	movhi	r2,15
   4e5b8:	10909004 	addi	r2,r2,16960
   4e5bc:	1885383a 	mul	r2,r3,r2
   4e5c0:	100b883a 	mov	r5,r2
   4e5c4:	01017db4 	movhi	r4,1526
   4e5c8:	21384004 	addi	r4,r4,-7936
   4e5cc:	004afd00 	call	4afd0 <__udivsi3>
   4e5d0:	1007883a 	mov	r3,r2
   4e5d4:	e0bfff17 	ldw	r2,-4(fp)
   4e5d8:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   4e5dc:	10bfffc4 	addi	r2,r2,-1
   4e5e0:	103ffe1e 	bne	r2,zero,4e5dc <__alt_data_end+0xfffe74dc>
   4e5e4:	00000d06 	br	4e61c <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4e5e8:	e0fffd17 	ldw	r3,-12(fp)
   4e5ec:	008003f4 	movhi	r2,15
   4e5f0:	10909004 	addi	r2,r2,16960
   4e5f4:	1885383a 	mul	r2,r3,r2
   4e5f8:	100b883a 	mov	r5,r2
   4e5fc:	01017db4 	movhi	r4,1526
   4e600:	21384004 	addi	r4,r4,-7936
   4e604:	004afd00 	call	4afd0 <__udivsi3>
   4e608:	1007883a 	mov	r3,r2
   4e60c:	e0bfff17 	ldw	r2,-4(fp)
   4e610:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   4e614:	10bfffc4 	addi	r2,r2,-1
   4e618:	00bffe16 	blt	zero,r2,4e614 <__alt_data_end+0xfffe7514>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   4e61c:	0005883a 	mov	r2,zero
}
   4e620:	e037883a 	mov	sp,fp
   4e624:	dfc00117 	ldw	ra,4(sp)
   4e628:	df000017 	ldw	fp,0(sp)
   4e62c:	dec00204 	addi	sp,sp,8
   4e630:	f800283a 	ret

0004e634 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   4e634:	defffe04 	addi	sp,sp,-8
   4e638:	df000115 	stw	fp,4(sp)
   4e63c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4e640:	e03fff15 	stw	zero,-4(fp)
   4e644:	00000506 	br	4e65c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   4e648:	e0bfff17 	ldw	r2,-4(fp)
   4e64c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4e650:	e0bfff17 	ldw	r2,-4(fp)
   4e654:	10800804 	addi	r2,r2,32
   4e658:	e0bfff15 	stw	r2,-4(fp)
   4e65c:	e0bfff17 	ldw	r2,-4(fp)
   4e660:	10820030 	cmpltui	r2,r2,2048
   4e664:	103ff81e 	bne	r2,zero,4e648 <__alt_data_end+0xfffe7548>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   4e668:	0001883a 	nop
   4e66c:	e037883a 	mov	sp,fp
   4e670:	df000017 	ldw	fp,0(sp)
   4e674:	dec00104 	addi	sp,sp,4
   4e678:	f800283a 	ret

0004e67c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e67c:	defffe04 	addi	sp,sp,-8
   4e680:	dfc00115 	stw	ra,4(sp)
   4e684:	df000015 	stw	fp,0(sp)
   4e688:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e68c:	d0a00b17 	ldw	r2,-32724(gp)
   4e690:	10000326 	beq	r2,zero,4e6a0 <alt_get_errno+0x24>
   4e694:	d0a00b17 	ldw	r2,-32724(gp)
   4e698:	103ee83a 	callr	r2
   4e69c:	00000106 	br	4e6a4 <alt_get_errno+0x28>
   4e6a0:	d0a6d104 	addi	r2,gp,-25788
}
   4e6a4:	e037883a 	mov	sp,fp
   4e6a8:	dfc00117 	ldw	ra,4(sp)
   4e6ac:	df000017 	ldw	fp,0(sp)
   4e6b0:	dec00204 	addi	sp,sp,8
   4e6b4:	f800283a 	ret

0004e6b8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   4e6b8:	defffa04 	addi	sp,sp,-24
   4e6bc:	dfc00515 	stw	ra,20(sp)
   4e6c0:	df000415 	stw	fp,16(sp)
   4e6c4:	df000404 	addi	fp,sp,16
   4e6c8:	e13ffe15 	stw	r4,-8(fp)
   4e6cc:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   4e6d0:	e0bffe17 	ldw	r2,-8(fp)
   4e6d4:	10000326 	beq	r2,zero,4e6e4 <alt_dev_llist_insert+0x2c>
   4e6d8:	e0bffe17 	ldw	r2,-8(fp)
   4e6dc:	10800217 	ldw	r2,8(r2)
   4e6e0:	1000061e 	bne	r2,zero,4e6fc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   4e6e4:	004e67c0 	call	4e67c <alt_get_errno>
   4e6e8:	1007883a 	mov	r3,r2
   4e6ec:	00800584 	movi	r2,22
   4e6f0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   4e6f4:	00bffa84 	movi	r2,-22
   4e6f8:	00001306 	br	4e748 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   4e6fc:	e0bffe17 	ldw	r2,-8(fp)
   4e700:	e0ffff17 	ldw	r3,-4(fp)
   4e704:	e0fffc15 	stw	r3,-16(fp)
   4e708:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4e70c:	e0bffd17 	ldw	r2,-12(fp)
   4e710:	e0fffc17 	ldw	r3,-16(fp)
   4e714:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4e718:	e0bffc17 	ldw	r2,-16(fp)
   4e71c:	10c00017 	ldw	r3,0(r2)
   4e720:	e0bffd17 	ldw	r2,-12(fp)
   4e724:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4e728:	e0bffc17 	ldw	r2,-16(fp)
   4e72c:	10800017 	ldw	r2,0(r2)
   4e730:	e0fffd17 	ldw	r3,-12(fp)
   4e734:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4e738:	e0bffc17 	ldw	r2,-16(fp)
   4e73c:	e0fffd17 	ldw	r3,-12(fp)
   4e740:	10c00015 	stw	r3,0(r2)

  return 0;  
   4e744:	0005883a 	mov	r2,zero
}
   4e748:	e037883a 	mov	sp,fp
   4e74c:	dfc00117 	ldw	ra,4(sp)
   4e750:	df000017 	ldw	fp,0(sp)
   4e754:	dec00204 	addi	sp,sp,8
   4e758:	f800283a 	ret

0004e75c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   4e75c:	defffd04 	addi	sp,sp,-12
   4e760:	dfc00215 	stw	ra,8(sp)
   4e764:	df000115 	stw	fp,4(sp)
   4e768:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4e76c:	00800174 	movhi	r2,5
   4e770:	10bdaa04 	addi	r2,r2,-2392
   4e774:	e0bfff15 	stw	r2,-4(fp)
   4e778:	00000606 	br	4e794 <_do_ctors+0x38>
        (*ctor) (); 
   4e77c:	e0bfff17 	ldw	r2,-4(fp)
   4e780:	10800017 	ldw	r2,0(r2)
   4e784:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4e788:	e0bfff17 	ldw	r2,-4(fp)
   4e78c:	10bfff04 	addi	r2,r2,-4
   4e790:	e0bfff15 	stw	r2,-4(fp)
   4e794:	e0ffff17 	ldw	r3,-4(fp)
   4e798:	00800174 	movhi	r2,5
   4e79c:	10bdab04 	addi	r2,r2,-2388
   4e7a0:	18bff62e 	bgeu	r3,r2,4e77c <__alt_data_end+0xfffe767c>
        (*ctor) (); 
}
   4e7a4:	0001883a 	nop
   4e7a8:	e037883a 	mov	sp,fp
   4e7ac:	dfc00117 	ldw	ra,4(sp)
   4e7b0:	df000017 	ldw	fp,0(sp)
   4e7b4:	dec00204 	addi	sp,sp,8
   4e7b8:	f800283a 	ret

0004e7bc <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   4e7bc:	defffd04 	addi	sp,sp,-12
   4e7c0:	dfc00215 	stw	ra,8(sp)
   4e7c4:	df000115 	stw	fp,4(sp)
   4e7c8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4e7cc:	00800174 	movhi	r2,5
   4e7d0:	10bdaa04 	addi	r2,r2,-2392
   4e7d4:	e0bfff15 	stw	r2,-4(fp)
   4e7d8:	00000606 	br	4e7f4 <_do_dtors+0x38>
        (*dtor) (); 
   4e7dc:	e0bfff17 	ldw	r2,-4(fp)
   4e7e0:	10800017 	ldw	r2,0(r2)
   4e7e4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4e7e8:	e0bfff17 	ldw	r2,-4(fp)
   4e7ec:	10bfff04 	addi	r2,r2,-4
   4e7f0:	e0bfff15 	stw	r2,-4(fp)
   4e7f4:	e0ffff17 	ldw	r3,-4(fp)
   4e7f8:	00800174 	movhi	r2,5
   4e7fc:	10bdab04 	addi	r2,r2,-2388
   4e800:	18bff62e 	bgeu	r3,r2,4e7dc <__alt_data_end+0xfffe76dc>
        (*dtor) (); 
}
   4e804:	0001883a 	nop
   4e808:	e037883a 	mov	sp,fp
   4e80c:	dfc00117 	ldw	ra,4(sp)
   4e810:	df000017 	ldw	fp,0(sp)
   4e814:	dec00204 	addi	sp,sp,8
   4e818:	f800283a 	ret

0004e81c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   4e81c:	defffe04 	addi	sp,sp,-8
   4e820:	dfc00115 	stw	ra,4(sp)
   4e824:	df000015 	stw	fp,0(sp)
   4e828:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   4e82c:	01440004 	movi	r5,4096
   4e830:	0009883a 	mov	r4,zero
   4e834:	004f2880 	call	4f288 <alt_icache_flush>
#endif
}
   4e838:	0001883a 	nop
   4e83c:	e037883a 	mov	sp,fp
   4e840:	dfc00117 	ldw	ra,4(sp)
   4e844:	df000017 	ldw	fp,0(sp)
   4e848:	dec00204 	addi	sp,sp,8
   4e84c:	f800283a 	ret

0004e850 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4e850:	defff904 	addi	sp,sp,-28
   4e854:	dfc00615 	stw	ra,24(sp)
   4e858:	df000515 	stw	fp,20(sp)
   4e85c:	df000504 	addi	fp,sp,20
   4e860:	e13ffc15 	stw	r4,-16(fp)
   4e864:	e17ffd15 	stw	r5,-12(fp)
   4e868:	e1bffe15 	stw	r6,-8(fp)
   4e86c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   4e870:	e0800217 	ldw	r2,8(fp)
   4e874:	d8800015 	stw	r2,0(sp)
   4e878:	e1ffff17 	ldw	r7,-4(fp)
   4e87c:	e1bffe17 	ldw	r6,-8(fp)
   4e880:	e17ffd17 	ldw	r5,-12(fp)
   4e884:	e13ffc17 	ldw	r4,-16(fp)
   4e888:	004ea000 	call	4ea00 <alt_iic_isr_register>
}  
   4e88c:	e037883a 	mov	sp,fp
   4e890:	dfc00117 	ldw	ra,4(sp)
   4e894:	df000017 	ldw	fp,0(sp)
   4e898:	dec00204 	addi	sp,sp,8
   4e89c:	f800283a 	ret

0004e8a0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   4e8a0:	defff904 	addi	sp,sp,-28
   4e8a4:	df000615 	stw	fp,24(sp)
   4e8a8:	df000604 	addi	fp,sp,24
   4e8ac:	e13ffe15 	stw	r4,-8(fp)
   4e8b0:	e17fff15 	stw	r5,-4(fp)
   4e8b4:	e0bfff17 	ldw	r2,-4(fp)
   4e8b8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e8bc:	0005303a 	rdctl	r2,status
   4e8c0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e8c4:	e0fffb17 	ldw	r3,-20(fp)
   4e8c8:	00bfff84 	movi	r2,-2
   4e8cc:	1884703a 	and	r2,r3,r2
   4e8d0:	1001703a 	wrctl	status,r2
  
  return context;
   4e8d4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4e8d8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   4e8dc:	00c00044 	movi	r3,1
   4e8e0:	e0bffa17 	ldw	r2,-24(fp)
   4e8e4:	1884983a 	sll	r2,r3,r2
   4e8e8:	1007883a 	mov	r3,r2
   4e8ec:	d0a6d517 	ldw	r2,-25772(gp)
   4e8f0:	1884b03a 	or	r2,r3,r2
   4e8f4:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4e8f8:	d0a6d517 	ldw	r2,-25772(gp)
   4e8fc:	100170fa 	wrctl	ienable,r2
   4e900:	e0bffc17 	ldw	r2,-16(fp)
   4e904:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e908:	e0bffd17 	ldw	r2,-12(fp)
   4e90c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4e910:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   4e914:	0001883a 	nop
}
   4e918:	e037883a 	mov	sp,fp
   4e91c:	df000017 	ldw	fp,0(sp)
   4e920:	dec00104 	addi	sp,sp,4
   4e924:	f800283a 	ret

0004e928 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   4e928:	defff904 	addi	sp,sp,-28
   4e92c:	df000615 	stw	fp,24(sp)
   4e930:	df000604 	addi	fp,sp,24
   4e934:	e13ffe15 	stw	r4,-8(fp)
   4e938:	e17fff15 	stw	r5,-4(fp)
   4e93c:	e0bfff17 	ldw	r2,-4(fp)
   4e940:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e944:	0005303a 	rdctl	r2,status
   4e948:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e94c:	e0fffb17 	ldw	r3,-20(fp)
   4e950:	00bfff84 	movi	r2,-2
   4e954:	1884703a 	and	r2,r3,r2
   4e958:	1001703a 	wrctl	status,r2
  
  return context;
   4e95c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4e960:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   4e964:	00c00044 	movi	r3,1
   4e968:	e0bffa17 	ldw	r2,-24(fp)
   4e96c:	1884983a 	sll	r2,r3,r2
   4e970:	0084303a 	nor	r2,zero,r2
   4e974:	1007883a 	mov	r3,r2
   4e978:	d0a6d517 	ldw	r2,-25772(gp)
   4e97c:	1884703a 	and	r2,r3,r2
   4e980:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4e984:	d0a6d517 	ldw	r2,-25772(gp)
   4e988:	100170fa 	wrctl	ienable,r2
   4e98c:	e0bffc17 	ldw	r2,-16(fp)
   4e990:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e994:	e0bffd17 	ldw	r2,-12(fp)
   4e998:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4e99c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   4e9a0:	0001883a 	nop
}
   4e9a4:	e037883a 	mov	sp,fp
   4e9a8:	df000017 	ldw	fp,0(sp)
   4e9ac:	dec00104 	addi	sp,sp,4
   4e9b0:	f800283a 	ret

0004e9b4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   4e9b4:	defffc04 	addi	sp,sp,-16
   4e9b8:	df000315 	stw	fp,12(sp)
   4e9bc:	df000304 	addi	fp,sp,12
   4e9c0:	e13ffe15 	stw	r4,-8(fp)
   4e9c4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   4e9c8:	000530fa 	rdctl	r2,ienable
   4e9cc:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   4e9d0:	00c00044 	movi	r3,1
   4e9d4:	e0bfff17 	ldw	r2,-4(fp)
   4e9d8:	1884983a 	sll	r2,r3,r2
   4e9dc:	1007883a 	mov	r3,r2
   4e9e0:	e0bffd17 	ldw	r2,-12(fp)
   4e9e4:	1884703a 	and	r2,r3,r2
   4e9e8:	1004c03a 	cmpne	r2,r2,zero
   4e9ec:	10803fcc 	andi	r2,r2,255
}
   4e9f0:	e037883a 	mov	sp,fp
   4e9f4:	df000017 	ldw	fp,0(sp)
   4e9f8:	dec00104 	addi	sp,sp,4
   4e9fc:	f800283a 	ret

0004ea00 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4ea00:	defff504 	addi	sp,sp,-44
   4ea04:	dfc00a15 	stw	ra,40(sp)
   4ea08:	df000915 	stw	fp,36(sp)
   4ea0c:	df000904 	addi	fp,sp,36
   4ea10:	e13ffc15 	stw	r4,-16(fp)
   4ea14:	e17ffd15 	stw	r5,-12(fp)
   4ea18:	e1bffe15 	stw	r6,-8(fp)
   4ea1c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   4ea20:	00bffa84 	movi	r2,-22
   4ea24:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   4ea28:	e0bffd17 	ldw	r2,-12(fp)
   4ea2c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   4ea30:	e0bff817 	ldw	r2,-32(fp)
   4ea34:	10800808 	cmpgei	r2,r2,32
   4ea38:	1000271e 	bne	r2,zero,4ead8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4ea3c:	0005303a 	rdctl	r2,status
   4ea40:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ea44:	e0fffb17 	ldw	r3,-20(fp)
   4ea48:	00bfff84 	movi	r2,-2
   4ea4c:	1884703a 	and	r2,r3,r2
   4ea50:	1001703a 	wrctl	status,r2
  
  return context;
   4ea54:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   4ea58:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   4ea5c:	00800174 	movhi	r2,5
   4ea60:	108c0904 	addi	r2,r2,12324
   4ea64:	e0fff817 	ldw	r3,-32(fp)
   4ea68:	180690fa 	slli	r3,r3,3
   4ea6c:	10c5883a 	add	r2,r2,r3
   4ea70:	e0fffe17 	ldw	r3,-8(fp)
   4ea74:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   4ea78:	00800174 	movhi	r2,5
   4ea7c:	108c0904 	addi	r2,r2,12324
   4ea80:	e0fff817 	ldw	r3,-32(fp)
   4ea84:	180690fa 	slli	r3,r3,3
   4ea88:	10c5883a 	add	r2,r2,r3
   4ea8c:	10800104 	addi	r2,r2,4
   4ea90:	e0ffff17 	ldw	r3,-4(fp)
   4ea94:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   4ea98:	e0bffe17 	ldw	r2,-8(fp)
   4ea9c:	10000526 	beq	r2,zero,4eab4 <alt_iic_isr_register+0xb4>
   4eaa0:	e0bff817 	ldw	r2,-32(fp)
   4eaa4:	100b883a 	mov	r5,r2
   4eaa8:	e13ffc17 	ldw	r4,-16(fp)
   4eaac:	004e8a00 	call	4e8a0 <alt_ic_irq_enable>
   4eab0:	00000406 	br	4eac4 <alt_iic_isr_register+0xc4>
   4eab4:	e0bff817 	ldw	r2,-32(fp)
   4eab8:	100b883a 	mov	r5,r2
   4eabc:	e13ffc17 	ldw	r4,-16(fp)
   4eac0:	004e9280 	call	4e928 <alt_ic_irq_disable>
   4eac4:	e0bff715 	stw	r2,-36(fp)
   4eac8:	e0bffa17 	ldw	r2,-24(fp)
   4eacc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4ead0:	e0bff917 	ldw	r2,-28(fp)
   4ead4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   4ead8:	e0bff717 	ldw	r2,-36(fp)
}
   4eadc:	e037883a 	mov	sp,fp
   4eae0:	dfc00117 	ldw	ra,4(sp)
   4eae4:	df000017 	ldw	fp,0(sp)
   4eae8:	dec00204 	addi	sp,sp,8
   4eaec:	f800283a 	ret

0004eaf0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   4eaf0:	defff904 	addi	sp,sp,-28
   4eaf4:	dfc00615 	stw	ra,24(sp)
   4eaf8:	df000515 	stw	fp,20(sp)
   4eafc:	df000504 	addi	fp,sp,20
   4eb00:	e13ffc15 	stw	r4,-16(fp)
   4eb04:	e17ffd15 	stw	r5,-12(fp)
   4eb08:	e1bffe15 	stw	r6,-8(fp)
   4eb0c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   4eb10:	e1bfff17 	ldw	r6,-4(fp)
   4eb14:	e17ffe17 	ldw	r5,-8(fp)
   4eb18:	e13ffd17 	ldw	r4,-12(fp)
   4eb1c:	004ed300 	call	4ed30 <open>
   4eb20:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   4eb24:	e0bffb17 	ldw	r2,-20(fp)
   4eb28:	10001c16 	blt	r2,zero,4eb9c <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   4eb2c:	00800174 	movhi	r2,5
   4eb30:	1080af04 	addi	r2,r2,700
   4eb34:	e0fffb17 	ldw	r3,-20(fp)
   4eb38:	18c00324 	muli	r3,r3,12
   4eb3c:	10c5883a 	add	r2,r2,r3
   4eb40:	10c00017 	ldw	r3,0(r2)
   4eb44:	e0bffc17 	ldw	r2,-16(fp)
   4eb48:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   4eb4c:	00800174 	movhi	r2,5
   4eb50:	1080af04 	addi	r2,r2,700
   4eb54:	e0fffb17 	ldw	r3,-20(fp)
   4eb58:	18c00324 	muli	r3,r3,12
   4eb5c:	10c5883a 	add	r2,r2,r3
   4eb60:	10800104 	addi	r2,r2,4
   4eb64:	10c00017 	ldw	r3,0(r2)
   4eb68:	e0bffc17 	ldw	r2,-16(fp)
   4eb6c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   4eb70:	00800174 	movhi	r2,5
   4eb74:	1080af04 	addi	r2,r2,700
   4eb78:	e0fffb17 	ldw	r3,-20(fp)
   4eb7c:	18c00324 	muli	r3,r3,12
   4eb80:	10c5883a 	add	r2,r2,r3
   4eb84:	10800204 	addi	r2,r2,8
   4eb88:	10c00017 	ldw	r3,0(r2)
   4eb8c:	e0bffc17 	ldw	r2,-16(fp)
   4eb90:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   4eb94:	e13ffb17 	ldw	r4,-20(fp)
   4eb98:	004d5980 	call	4d598 <alt_release_fd>
  }
} 
   4eb9c:	0001883a 	nop
   4eba0:	e037883a 	mov	sp,fp
   4eba4:	dfc00117 	ldw	ra,4(sp)
   4eba8:	df000017 	ldw	fp,0(sp)
   4ebac:	dec00204 	addi	sp,sp,8
   4ebb0:	f800283a 	ret

0004ebb4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   4ebb4:	defffb04 	addi	sp,sp,-20
   4ebb8:	dfc00415 	stw	ra,16(sp)
   4ebbc:	df000315 	stw	fp,12(sp)
   4ebc0:	df000304 	addi	fp,sp,12
   4ebc4:	e13ffd15 	stw	r4,-12(fp)
   4ebc8:	e17ffe15 	stw	r5,-8(fp)
   4ebcc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   4ebd0:	01c07fc4 	movi	r7,511
   4ebd4:	01800044 	movi	r6,1
   4ebd8:	e17ffd17 	ldw	r5,-12(fp)
   4ebdc:	01000174 	movhi	r4,5
   4ebe0:	2100b204 	addi	r4,r4,712
   4ebe4:	004eaf00 	call	4eaf0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   4ebe8:	01c07fc4 	movi	r7,511
   4ebec:	000d883a 	mov	r6,zero
   4ebf0:	e17ffe17 	ldw	r5,-8(fp)
   4ebf4:	01000174 	movhi	r4,5
   4ebf8:	2100af04 	addi	r4,r4,700
   4ebfc:	004eaf00 	call	4eaf0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   4ec00:	01c07fc4 	movi	r7,511
   4ec04:	01800044 	movi	r6,1
   4ec08:	e17fff17 	ldw	r5,-4(fp)
   4ec0c:	01000174 	movhi	r4,5
   4ec10:	2100b504 	addi	r4,r4,724
   4ec14:	004eaf00 	call	4eaf0 <alt_open_fd>
}  
   4ec18:	0001883a 	nop
   4ec1c:	e037883a 	mov	sp,fp
   4ec20:	dfc00117 	ldw	ra,4(sp)
   4ec24:	df000017 	ldw	fp,0(sp)
   4ec28:	dec00204 	addi	sp,sp,8
   4ec2c:	f800283a 	ret

0004ec30 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4ec30:	defffe04 	addi	sp,sp,-8
   4ec34:	dfc00115 	stw	ra,4(sp)
   4ec38:	df000015 	stw	fp,0(sp)
   4ec3c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ec40:	d0a00b17 	ldw	r2,-32724(gp)
   4ec44:	10000326 	beq	r2,zero,4ec54 <alt_get_errno+0x24>
   4ec48:	d0a00b17 	ldw	r2,-32724(gp)
   4ec4c:	103ee83a 	callr	r2
   4ec50:	00000106 	br	4ec58 <alt_get_errno+0x28>
   4ec54:	d0a6d104 	addi	r2,gp,-25788
}
   4ec58:	e037883a 	mov	sp,fp
   4ec5c:	dfc00117 	ldw	ra,4(sp)
   4ec60:	df000017 	ldw	fp,0(sp)
   4ec64:	dec00204 	addi	sp,sp,8
   4ec68:	f800283a 	ret

0004ec6c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   4ec6c:	defffd04 	addi	sp,sp,-12
   4ec70:	df000215 	stw	fp,8(sp)
   4ec74:	df000204 	addi	fp,sp,8
   4ec78:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   4ec7c:	e0bfff17 	ldw	r2,-4(fp)
   4ec80:	10800217 	ldw	r2,8(r2)
   4ec84:	10d00034 	orhi	r3,r2,16384
   4ec88:	e0bfff17 	ldw	r2,-4(fp)
   4ec8c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4ec90:	e03ffe15 	stw	zero,-8(fp)
   4ec94:	00001d06 	br	4ed0c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4ec98:	00800174 	movhi	r2,5
   4ec9c:	1080af04 	addi	r2,r2,700
   4eca0:	e0fffe17 	ldw	r3,-8(fp)
   4eca4:	18c00324 	muli	r3,r3,12
   4eca8:	10c5883a 	add	r2,r2,r3
   4ecac:	10c00017 	ldw	r3,0(r2)
   4ecb0:	e0bfff17 	ldw	r2,-4(fp)
   4ecb4:	10800017 	ldw	r2,0(r2)
   4ecb8:	1880111e 	bne	r3,r2,4ed00 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4ecbc:	00800174 	movhi	r2,5
   4ecc0:	1080af04 	addi	r2,r2,700
   4ecc4:	e0fffe17 	ldw	r3,-8(fp)
   4ecc8:	18c00324 	muli	r3,r3,12
   4eccc:	10c5883a 	add	r2,r2,r3
   4ecd0:	10800204 	addi	r2,r2,8
   4ecd4:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4ecd8:	1000090e 	bge	r2,zero,4ed00 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   4ecdc:	e0bffe17 	ldw	r2,-8(fp)
   4ece0:	10c00324 	muli	r3,r2,12
   4ece4:	00800174 	movhi	r2,5
   4ece8:	1080af04 	addi	r2,r2,700
   4ecec:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4ecf0:	e0bfff17 	ldw	r2,-4(fp)
   4ecf4:	18800226 	beq	r3,r2,4ed00 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   4ecf8:	00bffcc4 	movi	r2,-13
   4ecfc:	00000806 	br	4ed20 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4ed00:	e0bffe17 	ldw	r2,-8(fp)
   4ed04:	10800044 	addi	r2,r2,1
   4ed08:	e0bffe15 	stw	r2,-8(fp)
   4ed0c:	d0a00a17 	ldw	r2,-32728(gp)
   4ed10:	1007883a 	mov	r3,r2
   4ed14:	e0bffe17 	ldw	r2,-8(fp)
   4ed18:	18bfdf2e 	bgeu	r3,r2,4ec98 <__alt_data_end+0xfffe7b98>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   4ed1c:	0005883a 	mov	r2,zero
}
   4ed20:	e037883a 	mov	sp,fp
   4ed24:	df000017 	ldw	fp,0(sp)
   4ed28:	dec00104 	addi	sp,sp,4
   4ed2c:	f800283a 	ret

0004ed30 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   4ed30:	defff604 	addi	sp,sp,-40
   4ed34:	dfc00915 	stw	ra,36(sp)
   4ed38:	df000815 	stw	fp,32(sp)
   4ed3c:	df000804 	addi	fp,sp,32
   4ed40:	e13ffd15 	stw	r4,-12(fp)
   4ed44:	e17ffe15 	stw	r5,-8(fp)
   4ed48:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   4ed4c:	00bfffc4 	movi	r2,-1
   4ed50:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   4ed54:	00bffb44 	movi	r2,-19
   4ed58:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   4ed5c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   4ed60:	d1600804 	addi	r5,gp,-32736
   4ed64:	e13ffd17 	ldw	r4,-12(fp)
   4ed68:	004f04c0 	call	4f04c <alt_find_dev>
   4ed6c:	e0bff815 	stw	r2,-32(fp)
   4ed70:	e0bff817 	ldw	r2,-32(fp)
   4ed74:	1000051e 	bne	r2,zero,4ed8c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   4ed78:	e13ffd17 	ldw	r4,-12(fp)
   4ed7c:	004f0dc0 	call	4f0dc <alt_find_file>
   4ed80:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   4ed84:	00800044 	movi	r2,1
   4ed88:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   4ed8c:	e0bff817 	ldw	r2,-32(fp)
   4ed90:	10002926 	beq	r2,zero,4ee38 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   4ed94:	e13ff817 	ldw	r4,-32(fp)
   4ed98:	004f1e40 	call	4f1e4 <alt_get_fd>
   4ed9c:	e0bff915 	stw	r2,-28(fp)
   4eda0:	e0bff917 	ldw	r2,-28(fp)
   4eda4:	1000030e 	bge	r2,zero,4edb4 <open+0x84>
    {
      status = index;
   4eda8:	e0bff917 	ldw	r2,-28(fp)
   4edac:	e0bffa15 	stw	r2,-24(fp)
   4edb0:	00002306 	br	4ee40 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   4edb4:	e0bff917 	ldw	r2,-28(fp)
   4edb8:	10c00324 	muli	r3,r2,12
   4edbc:	00800174 	movhi	r2,5
   4edc0:	1080af04 	addi	r2,r2,700
   4edc4:	1885883a 	add	r2,r3,r2
   4edc8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   4edcc:	e0fffe17 	ldw	r3,-8(fp)
   4edd0:	00900034 	movhi	r2,16384
   4edd4:	10bfffc4 	addi	r2,r2,-1
   4edd8:	1886703a 	and	r3,r3,r2
   4eddc:	e0bffc17 	ldw	r2,-16(fp)
   4ede0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   4ede4:	e0bffb17 	ldw	r2,-20(fp)
   4ede8:	1000051e 	bne	r2,zero,4ee00 <open+0xd0>
   4edec:	e13ffc17 	ldw	r4,-16(fp)
   4edf0:	004ec6c0 	call	4ec6c <alt_file_locked>
   4edf4:	e0bffa15 	stw	r2,-24(fp)
   4edf8:	e0bffa17 	ldw	r2,-24(fp)
   4edfc:	10001016 	blt	r2,zero,4ee40 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   4ee00:	e0bff817 	ldw	r2,-32(fp)
   4ee04:	10800317 	ldw	r2,12(r2)
   4ee08:	10000826 	beq	r2,zero,4ee2c <open+0xfc>
   4ee0c:	e0bff817 	ldw	r2,-32(fp)
   4ee10:	10800317 	ldw	r2,12(r2)
   4ee14:	e1ffff17 	ldw	r7,-4(fp)
   4ee18:	e1bffe17 	ldw	r6,-8(fp)
   4ee1c:	e17ffd17 	ldw	r5,-12(fp)
   4ee20:	e13ffc17 	ldw	r4,-16(fp)
   4ee24:	103ee83a 	callr	r2
   4ee28:	00000106 	br	4ee30 <open+0x100>
   4ee2c:	0005883a 	mov	r2,zero
   4ee30:	e0bffa15 	stw	r2,-24(fp)
   4ee34:	00000206 	br	4ee40 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   4ee38:	00bffb44 	movi	r2,-19
   4ee3c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   4ee40:	e0bffa17 	ldw	r2,-24(fp)
   4ee44:	1000090e 	bge	r2,zero,4ee6c <open+0x13c>
  {
    alt_release_fd (index);  
   4ee48:	e13ff917 	ldw	r4,-28(fp)
   4ee4c:	004d5980 	call	4d598 <alt_release_fd>
    ALT_ERRNO = -status;
   4ee50:	004ec300 	call	4ec30 <alt_get_errno>
   4ee54:	1007883a 	mov	r3,r2
   4ee58:	e0bffa17 	ldw	r2,-24(fp)
   4ee5c:	0085c83a 	sub	r2,zero,r2
   4ee60:	18800015 	stw	r2,0(r3)
    return -1;
   4ee64:	00bfffc4 	movi	r2,-1
   4ee68:	00000106 	br	4ee70 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   4ee6c:	e0bff917 	ldw	r2,-28(fp)
}
   4ee70:	e037883a 	mov	sp,fp
   4ee74:	dfc00117 	ldw	ra,4(sp)
   4ee78:	df000017 	ldw	fp,0(sp)
   4ee7c:	dec00204 	addi	sp,sp,8
   4ee80:	f800283a 	ret

0004ee84 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   4ee84:	defffa04 	addi	sp,sp,-24
   4ee88:	df000515 	stw	fp,20(sp)
   4ee8c:	df000504 	addi	fp,sp,20
   4ee90:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4ee94:	0005303a 	rdctl	r2,status
   4ee98:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ee9c:	e0fffc17 	ldw	r3,-16(fp)
   4eea0:	00bfff84 	movi	r2,-2
   4eea4:	1884703a 	and	r2,r3,r2
   4eea8:	1001703a 	wrctl	status,r2
  
  return context;
   4eeac:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   4eeb0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   4eeb4:	e0bfff17 	ldw	r2,-4(fp)
   4eeb8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   4eebc:	e0bffd17 	ldw	r2,-12(fp)
   4eec0:	10800017 	ldw	r2,0(r2)
   4eec4:	e0fffd17 	ldw	r3,-12(fp)
   4eec8:	18c00117 	ldw	r3,4(r3)
   4eecc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   4eed0:	e0bffd17 	ldw	r2,-12(fp)
   4eed4:	10800117 	ldw	r2,4(r2)
   4eed8:	e0fffd17 	ldw	r3,-12(fp)
   4eedc:	18c00017 	ldw	r3,0(r3)
   4eee0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   4eee4:	e0bffd17 	ldw	r2,-12(fp)
   4eee8:	e0fffd17 	ldw	r3,-12(fp)
   4eeec:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   4eef0:	e0bffd17 	ldw	r2,-12(fp)
   4eef4:	e0fffd17 	ldw	r3,-12(fp)
   4eef8:	10c00015 	stw	r3,0(r2)
   4eefc:	e0bffb17 	ldw	r2,-20(fp)
   4ef00:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4ef04:	e0bffe17 	ldw	r2,-8(fp)
   4ef08:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   4ef0c:	0001883a 	nop
   4ef10:	e037883a 	mov	sp,fp
   4ef14:	df000017 	ldw	fp,0(sp)
   4ef18:	dec00104 	addi	sp,sp,4
   4ef1c:	f800283a 	ret

0004ef20 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   4ef20:	defffb04 	addi	sp,sp,-20
   4ef24:	dfc00415 	stw	ra,16(sp)
   4ef28:	df000315 	stw	fp,12(sp)
   4ef2c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   4ef30:	d0a00e17 	ldw	r2,-32712(gp)
   4ef34:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   4ef38:	d0a6d717 	ldw	r2,-25764(gp)
   4ef3c:	10800044 	addi	r2,r2,1
   4ef40:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4ef44:	00002e06 	br	4f000 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   4ef48:	e0bffd17 	ldw	r2,-12(fp)
   4ef4c:	10800017 	ldw	r2,0(r2)
   4ef50:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   4ef54:	e0bffd17 	ldw	r2,-12(fp)
   4ef58:	10800403 	ldbu	r2,16(r2)
   4ef5c:	10803fcc 	andi	r2,r2,255
   4ef60:	10000426 	beq	r2,zero,4ef74 <alt_tick+0x54>
   4ef64:	d0a6d717 	ldw	r2,-25764(gp)
   4ef68:	1000021e 	bne	r2,zero,4ef74 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   4ef6c:	e0bffd17 	ldw	r2,-12(fp)
   4ef70:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   4ef74:	e0bffd17 	ldw	r2,-12(fp)
   4ef78:	10800217 	ldw	r2,8(r2)
   4ef7c:	d0e6d717 	ldw	r3,-25764(gp)
   4ef80:	18801d36 	bltu	r3,r2,4eff8 <alt_tick+0xd8>
   4ef84:	e0bffd17 	ldw	r2,-12(fp)
   4ef88:	10800403 	ldbu	r2,16(r2)
   4ef8c:	10803fcc 	andi	r2,r2,255
   4ef90:	1000191e 	bne	r2,zero,4eff8 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   4ef94:	e0bffd17 	ldw	r2,-12(fp)
   4ef98:	10800317 	ldw	r2,12(r2)
   4ef9c:	e0fffd17 	ldw	r3,-12(fp)
   4efa0:	18c00517 	ldw	r3,20(r3)
   4efa4:	1809883a 	mov	r4,r3
   4efa8:	103ee83a 	callr	r2
   4efac:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   4efb0:	e0bfff17 	ldw	r2,-4(fp)
   4efb4:	1000031e 	bne	r2,zero,4efc4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   4efb8:	e13ffd17 	ldw	r4,-12(fp)
   4efbc:	004ee840 	call	4ee84 <alt_alarm_stop>
   4efc0:	00000d06 	br	4eff8 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   4efc4:	e0bffd17 	ldw	r2,-12(fp)
   4efc8:	10c00217 	ldw	r3,8(r2)
   4efcc:	e0bfff17 	ldw	r2,-4(fp)
   4efd0:	1887883a 	add	r3,r3,r2
   4efd4:	e0bffd17 	ldw	r2,-12(fp)
   4efd8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   4efdc:	e0bffd17 	ldw	r2,-12(fp)
   4efe0:	10c00217 	ldw	r3,8(r2)
   4efe4:	d0a6d717 	ldw	r2,-25764(gp)
   4efe8:	1880032e 	bgeu	r3,r2,4eff8 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   4efec:	e0bffd17 	ldw	r2,-12(fp)
   4eff0:	00c00044 	movi	r3,1
   4eff4:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   4eff8:	e0bffe17 	ldw	r2,-8(fp)
   4effc:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f000:	e0fffd17 	ldw	r3,-12(fp)
   4f004:	d0a00e04 	addi	r2,gp,-32712
   4f008:	18bfcf1e 	bne	r3,r2,4ef48 <__alt_data_end+0xfffe7e48>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   4f00c:	0001883a 	nop
}
   4f010:	0001883a 	nop
   4f014:	e037883a 	mov	sp,fp
   4f018:	dfc00117 	ldw	ra,4(sp)
   4f01c:	df000017 	ldw	fp,0(sp)
   4f020:	dec00204 	addi	sp,sp,8
   4f024:	f800283a 	ret

0004f028 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
   4f028:	deffff04 	addi	sp,sp,-4
   4f02c:	df000015 	stw	fp,0(sp)
   4f030:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   4f034:	000170fa 	wrctl	ienable,zero
}
   4f038:	0001883a 	nop
   4f03c:	e037883a 	mov	sp,fp
   4f040:	df000017 	ldw	fp,0(sp)
   4f044:	dec00104 	addi	sp,sp,4
   4f048:	f800283a 	ret

0004f04c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   4f04c:	defffa04 	addi	sp,sp,-24
   4f050:	dfc00515 	stw	ra,20(sp)
   4f054:	df000415 	stw	fp,16(sp)
   4f058:	df000404 	addi	fp,sp,16
   4f05c:	e13ffe15 	stw	r4,-8(fp)
   4f060:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   4f064:	e0bfff17 	ldw	r2,-4(fp)
   4f068:	10800017 	ldw	r2,0(r2)
   4f06c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   4f070:	e13ffe17 	ldw	r4,-8(fp)
   4f074:	0040f140 	call	40f14 <strlen>
   4f078:	10800044 	addi	r2,r2,1
   4f07c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f080:	00000d06 	br	4f0b8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   4f084:	e0bffc17 	ldw	r2,-16(fp)
   4f088:	10800217 	ldw	r2,8(r2)
   4f08c:	e0fffd17 	ldw	r3,-12(fp)
   4f090:	180d883a 	mov	r6,r3
   4f094:	e17ffe17 	ldw	r5,-8(fp)
   4f098:	1009883a 	mov	r4,r2
   4f09c:	004f3640 	call	4f364 <memcmp>
   4f0a0:	1000021e 	bne	r2,zero,4f0ac <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   4f0a4:	e0bffc17 	ldw	r2,-16(fp)
   4f0a8:	00000706 	br	4f0c8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   4f0ac:	e0bffc17 	ldw	r2,-16(fp)
   4f0b0:	10800017 	ldw	r2,0(r2)
   4f0b4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f0b8:	e0fffc17 	ldw	r3,-16(fp)
   4f0bc:	e0bfff17 	ldw	r2,-4(fp)
   4f0c0:	18bff01e 	bne	r3,r2,4f084 <__alt_data_end+0xfffe7f84>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   4f0c4:	0005883a 	mov	r2,zero
}
   4f0c8:	e037883a 	mov	sp,fp
   4f0cc:	dfc00117 	ldw	ra,4(sp)
   4f0d0:	df000017 	ldw	fp,0(sp)
   4f0d4:	dec00204 	addi	sp,sp,8
   4f0d8:	f800283a 	ret

0004f0dc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   4f0dc:	defffb04 	addi	sp,sp,-20
   4f0e0:	dfc00415 	stw	ra,16(sp)
   4f0e4:	df000315 	stw	fp,12(sp)
   4f0e8:	df000304 	addi	fp,sp,12
   4f0ec:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   4f0f0:	d0a00617 	ldw	r2,-32744(gp)
   4f0f4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f0f8:	00003106 	br	4f1c0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   4f0fc:	e0bffd17 	ldw	r2,-12(fp)
   4f100:	10800217 	ldw	r2,8(r2)
   4f104:	1009883a 	mov	r4,r2
   4f108:	0040f140 	call	40f14 <strlen>
   4f10c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   4f110:	e0bffd17 	ldw	r2,-12(fp)
   4f114:	10c00217 	ldw	r3,8(r2)
   4f118:	e0bffe17 	ldw	r2,-8(fp)
   4f11c:	10bfffc4 	addi	r2,r2,-1
   4f120:	1885883a 	add	r2,r3,r2
   4f124:	10800003 	ldbu	r2,0(r2)
   4f128:	10803fcc 	andi	r2,r2,255
   4f12c:	1080201c 	xori	r2,r2,128
   4f130:	10bfe004 	addi	r2,r2,-128
   4f134:	10800bd8 	cmpnei	r2,r2,47
   4f138:	1000031e 	bne	r2,zero,4f148 <alt_find_file+0x6c>
    {
      len -= 1;
   4f13c:	e0bffe17 	ldw	r2,-8(fp)
   4f140:	10bfffc4 	addi	r2,r2,-1
   4f144:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f148:	e0bffe17 	ldw	r2,-8(fp)
   4f14c:	e0ffff17 	ldw	r3,-4(fp)
   4f150:	1885883a 	add	r2,r3,r2
   4f154:	10800003 	ldbu	r2,0(r2)
   4f158:	10803fcc 	andi	r2,r2,255
   4f15c:	1080201c 	xori	r2,r2,128
   4f160:	10bfe004 	addi	r2,r2,-128
   4f164:	10800be0 	cmpeqi	r2,r2,47
   4f168:	1000081e 	bne	r2,zero,4f18c <alt_find_file+0xb0>
   4f16c:	e0bffe17 	ldw	r2,-8(fp)
   4f170:	e0ffff17 	ldw	r3,-4(fp)
   4f174:	1885883a 	add	r2,r3,r2
   4f178:	10800003 	ldbu	r2,0(r2)
   4f17c:	10803fcc 	andi	r2,r2,255
   4f180:	1080201c 	xori	r2,r2,128
   4f184:	10bfe004 	addi	r2,r2,-128
   4f188:	10000a1e 	bne	r2,zero,4f1b4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   4f18c:	e0bffd17 	ldw	r2,-12(fp)
   4f190:	10800217 	ldw	r2,8(r2)
   4f194:	e0fffe17 	ldw	r3,-8(fp)
   4f198:	180d883a 	mov	r6,r3
   4f19c:	e17fff17 	ldw	r5,-4(fp)
   4f1a0:	1009883a 	mov	r4,r2
   4f1a4:	004f3640 	call	4f364 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f1a8:	1000021e 	bne	r2,zero,4f1b4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   4f1ac:	e0bffd17 	ldw	r2,-12(fp)
   4f1b0:	00000706 	br	4f1d0 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   4f1b4:	e0bffd17 	ldw	r2,-12(fp)
   4f1b8:	10800017 	ldw	r2,0(r2)
   4f1bc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f1c0:	e0fffd17 	ldw	r3,-12(fp)
   4f1c4:	d0a00604 	addi	r2,gp,-32744
   4f1c8:	18bfcc1e 	bne	r3,r2,4f0fc <__alt_data_end+0xfffe7ffc>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   4f1cc:	0005883a 	mov	r2,zero
}
   4f1d0:	e037883a 	mov	sp,fp
   4f1d4:	dfc00117 	ldw	ra,4(sp)
   4f1d8:	df000017 	ldw	fp,0(sp)
   4f1dc:	dec00204 	addi	sp,sp,8
   4f1e0:	f800283a 	ret

0004f1e4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   4f1e4:	defffc04 	addi	sp,sp,-16
   4f1e8:	df000315 	stw	fp,12(sp)
   4f1ec:	df000304 	addi	fp,sp,12
   4f1f0:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   4f1f4:	00bffa04 	movi	r2,-24
   4f1f8:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f1fc:	e03ffd15 	stw	zero,-12(fp)
   4f200:	00001906 	br	4f268 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   4f204:	00800174 	movhi	r2,5
   4f208:	1080af04 	addi	r2,r2,700
   4f20c:	e0fffd17 	ldw	r3,-12(fp)
   4f210:	18c00324 	muli	r3,r3,12
   4f214:	10c5883a 	add	r2,r2,r3
   4f218:	10800017 	ldw	r2,0(r2)
   4f21c:	10000f1e 	bne	r2,zero,4f25c <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   4f220:	00800174 	movhi	r2,5
   4f224:	1080af04 	addi	r2,r2,700
   4f228:	e0fffd17 	ldw	r3,-12(fp)
   4f22c:	18c00324 	muli	r3,r3,12
   4f230:	10c5883a 	add	r2,r2,r3
   4f234:	e0ffff17 	ldw	r3,-4(fp)
   4f238:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   4f23c:	d0e00a17 	ldw	r3,-32728(gp)
   4f240:	e0bffd17 	ldw	r2,-12(fp)
   4f244:	1880020e 	bge	r3,r2,4f250 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   4f248:	e0bffd17 	ldw	r2,-12(fp)
   4f24c:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   4f250:	e0bffd17 	ldw	r2,-12(fp)
   4f254:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   4f258:	00000606 	br	4f274 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f25c:	e0bffd17 	ldw	r2,-12(fp)
   4f260:	10800044 	addi	r2,r2,1
   4f264:	e0bffd15 	stw	r2,-12(fp)
   4f268:	e0bffd17 	ldw	r2,-12(fp)
   4f26c:	10800810 	cmplti	r2,r2,32
   4f270:	103fe41e 	bne	r2,zero,4f204 <__alt_data_end+0xfffe8104>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   4f274:	e0bffe17 	ldw	r2,-8(fp)
}
   4f278:	e037883a 	mov	sp,fp
   4f27c:	df000017 	ldw	fp,0(sp)
   4f280:	dec00104 	addi	sp,sp,4
   4f284:	f800283a 	ret

0004f288 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   4f288:	defffb04 	addi	sp,sp,-20
   4f28c:	df000415 	stw	fp,16(sp)
   4f290:	df000404 	addi	fp,sp,16
   4f294:	e13ffe15 	stw	r4,-8(fp)
   4f298:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   4f29c:	e0bfff17 	ldw	r2,-4(fp)
   4f2a0:	10840070 	cmpltui	r2,r2,4097
   4f2a4:	1000021e 	bne	r2,zero,4f2b0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   4f2a8:	00840004 	movi	r2,4096
   4f2ac:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   4f2b0:	e0fffe17 	ldw	r3,-8(fp)
   4f2b4:	e0bfff17 	ldw	r2,-4(fp)
   4f2b8:	1885883a 	add	r2,r3,r2
   4f2bc:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   4f2c0:	e0bffe17 	ldw	r2,-8(fp)
   4f2c4:	e0bffc15 	stw	r2,-16(fp)
   4f2c8:	00000506 	br	4f2e0 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   4f2cc:	e0bffc17 	ldw	r2,-16(fp)
   4f2d0:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   4f2d4:	e0bffc17 	ldw	r2,-16(fp)
   4f2d8:	10800804 	addi	r2,r2,32
   4f2dc:	e0bffc15 	stw	r2,-16(fp)
   4f2e0:	e0fffc17 	ldw	r3,-16(fp)
   4f2e4:	e0bffd17 	ldw	r2,-12(fp)
   4f2e8:	18bff836 	bltu	r3,r2,4f2cc <__alt_data_end+0xfffe81cc>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   4f2ec:	e0bffe17 	ldw	r2,-8(fp)
   4f2f0:	108007cc 	andi	r2,r2,31
   4f2f4:	10000226 	beq	r2,zero,4f300 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   4f2f8:	e0bffc17 	ldw	r2,-16(fp)
   4f2fc:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   4f300:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   4f304:	0001883a 	nop
   4f308:	e037883a 	mov	sp,fp
   4f30c:	df000017 	ldw	fp,0(sp)
   4f310:	dec00104 	addi	sp,sp,4
   4f314:	f800283a 	ret

0004f318 <atexit>:
   4f318:	200b883a 	mov	r5,r4
   4f31c:	000f883a 	mov	r7,zero
   4f320:	000d883a 	mov	r6,zero
   4f324:	0009883a 	mov	r4,zero
   4f328:	004f3e01 	jmpi	4f3e0 <__register_exitproc>

0004f32c <exit>:
   4f32c:	defffe04 	addi	sp,sp,-8
   4f330:	000b883a 	mov	r5,zero
   4f334:	dc000015 	stw	r16,0(sp)
   4f338:	dfc00115 	stw	ra,4(sp)
   4f33c:	2021883a 	mov	r16,r4
   4f340:	004f4f80 	call	4f4f8 <__call_exitprocs>
   4f344:	00800174 	movhi	r2,5
   4f348:	10852704 	addi	r2,r2,5276
   4f34c:	11000017 	ldw	r4,0(r2)
   4f350:	20800f17 	ldw	r2,60(r4)
   4f354:	10000126 	beq	r2,zero,4f35c <exit+0x30>
   4f358:	103ee83a 	callr	r2
   4f35c:	8009883a 	mov	r4,r16
   4f360:	004f6780 	call	4f678 <_exit>

0004f364 <memcmp>:
   4f364:	01c000c4 	movi	r7,3
   4f368:	3980192e 	bgeu	r7,r6,4f3d0 <memcmp+0x6c>
   4f36c:	2144b03a 	or	r2,r4,r5
   4f370:	11c4703a 	and	r2,r2,r7
   4f374:	10000f26 	beq	r2,zero,4f3b4 <memcmp+0x50>
   4f378:	20800003 	ldbu	r2,0(r4)
   4f37c:	28c00003 	ldbu	r3,0(r5)
   4f380:	10c0151e 	bne	r2,r3,4f3d8 <memcmp+0x74>
   4f384:	31bfff84 	addi	r6,r6,-2
   4f388:	01ffffc4 	movi	r7,-1
   4f38c:	00000406 	br	4f3a0 <memcmp+0x3c>
   4f390:	20800003 	ldbu	r2,0(r4)
   4f394:	28c00003 	ldbu	r3,0(r5)
   4f398:	31bfffc4 	addi	r6,r6,-1
   4f39c:	10c00e1e 	bne	r2,r3,4f3d8 <memcmp+0x74>
   4f3a0:	21000044 	addi	r4,r4,1
   4f3a4:	29400044 	addi	r5,r5,1
   4f3a8:	31fff91e 	bne	r6,r7,4f390 <__alt_data_end+0xfffe8290>
   4f3ac:	0005883a 	mov	r2,zero
   4f3b0:	f800283a 	ret
   4f3b4:	20c00017 	ldw	r3,0(r4)
   4f3b8:	28800017 	ldw	r2,0(r5)
   4f3bc:	18bfee1e 	bne	r3,r2,4f378 <__alt_data_end+0xfffe8278>
   4f3c0:	31bfff04 	addi	r6,r6,-4
   4f3c4:	21000104 	addi	r4,r4,4
   4f3c8:	29400104 	addi	r5,r5,4
   4f3cc:	39bff936 	bltu	r7,r6,4f3b4 <__alt_data_end+0xfffe82b4>
   4f3d0:	303fe91e 	bne	r6,zero,4f378 <__alt_data_end+0xfffe8278>
   4f3d4:	003ff506 	br	4f3ac <__alt_data_end+0xfffe82ac>
   4f3d8:	10c5c83a 	sub	r2,r2,r3
   4f3dc:	f800283a 	ret

0004f3e0 <__register_exitproc>:
   4f3e0:	defffa04 	addi	sp,sp,-24
   4f3e4:	dc000315 	stw	r16,12(sp)
   4f3e8:	04000174 	movhi	r16,5
   4f3ec:	84052704 	addi	r16,r16,5276
   4f3f0:	80c00017 	ldw	r3,0(r16)
   4f3f4:	dc400415 	stw	r17,16(sp)
   4f3f8:	dfc00515 	stw	ra,20(sp)
   4f3fc:	18805217 	ldw	r2,328(r3)
   4f400:	2023883a 	mov	r17,r4
   4f404:	10003726 	beq	r2,zero,4f4e4 <__register_exitproc+0x104>
   4f408:	10c00117 	ldw	r3,4(r2)
   4f40c:	010007c4 	movi	r4,31
   4f410:	20c00e16 	blt	r4,r3,4f44c <__register_exitproc+0x6c>
   4f414:	1a000044 	addi	r8,r3,1
   4f418:	8800221e 	bne	r17,zero,4f4a4 <__register_exitproc+0xc4>
   4f41c:	18c00084 	addi	r3,r3,2
   4f420:	18c7883a 	add	r3,r3,r3
   4f424:	18c7883a 	add	r3,r3,r3
   4f428:	12000115 	stw	r8,4(r2)
   4f42c:	10c7883a 	add	r3,r2,r3
   4f430:	19400015 	stw	r5,0(r3)
   4f434:	0005883a 	mov	r2,zero
   4f438:	dfc00517 	ldw	ra,20(sp)
   4f43c:	dc400417 	ldw	r17,16(sp)
   4f440:	dc000317 	ldw	r16,12(sp)
   4f444:	dec00604 	addi	sp,sp,24
   4f448:	f800283a 	ret
   4f44c:	00800034 	movhi	r2,0
   4f450:	10800004 	addi	r2,r2,0
   4f454:	10002626 	beq	r2,zero,4f4f0 <__register_exitproc+0x110>
   4f458:	01006404 	movi	r4,400
   4f45c:	d9400015 	stw	r5,0(sp)
   4f460:	d9800115 	stw	r6,4(sp)
   4f464:	d9c00215 	stw	r7,8(sp)
   4f468:	00000000 	call	0 <__alt_mem_onchip_memory2-0x40000>
   4f46c:	d9400017 	ldw	r5,0(sp)
   4f470:	d9800117 	ldw	r6,4(sp)
   4f474:	d9c00217 	ldw	r7,8(sp)
   4f478:	10001d26 	beq	r2,zero,4f4f0 <__register_exitproc+0x110>
   4f47c:	81000017 	ldw	r4,0(r16)
   4f480:	10000115 	stw	zero,4(r2)
   4f484:	02000044 	movi	r8,1
   4f488:	22405217 	ldw	r9,328(r4)
   4f48c:	0007883a 	mov	r3,zero
   4f490:	12400015 	stw	r9,0(r2)
   4f494:	20805215 	stw	r2,328(r4)
   4f498:	10006215 	stw	zero,392(r2)
   4f49c:	10006315 	stw	zero,396(r2)
   4f4a0:	883fde26 	beq	r17,zero,4f41c <__alt_data_end+0xfffe831c>
   4f4a4:	18c9883a 	add	r4,r3,r3
   4f4a8:	2109883a 	add	r4,r4,r4
   4f4ac:	1109883a 	add	r4,r2,r4
   4f4b0:	21802215 	stw	r6,136(r4)
   4f4b4:	01800044 	movi	r6,1
   4f4b8:	12406217 	ldw	r9,392(r2)
   4f4bc:	30cc983a 	sll	r6,r6,r3
   4f4c0:	4992b03a 	or	r9,r9,r6
   4f4c4:	12406215 	stw	r9,392(r2)
   4f4c8:	21c04215 	stw	r7,264(r4)
   4f4cc:	01000084 	movi	r4,2
   4f4d0:	893fd21e 	bne	r17,r4,4f41c <__alt_data_end+0xfffe831c>
   4f4d4:	11006317 	ldw	r4,396(r2)
   4f4d8:	218cb03a 	or	r6,r4,r6
   4f4dc:	11806315 	stw	r6,396(r2)
   4f4e0:	003fce06 	br	4f41c <__alt_data_end+0xfffe831c>
   4f4e4:	18805304 	addi	r2,r3,332
   4f4e8:	18805215 	stw	r2,328(r3)
   4f4ec:	003fc606 	br	4f408 <__alt_data_end+0xfffe8308>
   4f4f0:	00bfffc4 	movi	r2,-1
   4f4f4:	003fd006 	br	4f438 <__alt_data_end+0xfffe8338>

0004f4f8 <__call_exitprocs>:
   4f4f8:	defff504 	addi	sp,sp,-44
   4f4fc:	df000915 	stw	fp,36(sp)
   4f500:	dd400615 	stw	r21,24(sp)
   4f504:	dc800315 	stw	r18,12(sp)
   4f508:	dfc00a15 	stw	ra,40(sp)
   4f50c:	ddc00815 	stw	r23,32(sp)
   4f510:	dd800715 	stw	r22,28(sp)
   4f514:	dd000515 	stw	r20,20(sp)
   4f518:	dcc00415 	stw	r19,16(sp)
   4f51c:	dc400215 	stw	r17,8(sp)
   4f520:	dc000115 	stw	r16,4(sp)
   4f524:	d9000015 	stw	r4,0(sp)
   4f528:	2839883a 	mov	fp,r5
   4f52c:	04800044 	movi	r18,1
   4f530:	057fffc4 	movi	r21,-1
   4f534:	00800174 	movhi	r2,5
   4f538:	10852704 	addi	r2,r2,5276
   4f53c:	12000017 	ldw	r8,0(r2)
   4f540:	45005217 	ldw	r20,328(r8)
   4f544:	44c05204 	addi	r19,r8,328
   4f548:	a0001c26 	beq	r20,zero,4f5bc <__call_exitprocs+0xc4>
   4f54c:	a0800117 	ldw	r2,4(r20)
   4f550:	15ffffc4 	addi	r23,r2,-1
   4f554:	b8000d16 	blt	r23,zero,4f58c <__call_exitprocs+0x94>
   4f558:	14000044 	addi	r16,r2,1
   4f55c:	8421883a 	add	r16,r16,r16
   4f560:	8421883a 	add	r16,r16,r16
   4f564:	84402004 	addi	r17,r16,128
   4f568:	a463883a 	add	r17,r20,r17
   4f56c:	a421883a 	add	r16,r20,r16
   4f570:	e0001e26 	beq	fp,zero,4f5ec <__call_exitprocs+0xf4>
   4f574:	80804017 	ldw	r2,256(r16)
   4f578:	e0801c26 	beq	fp,r2,4f5ec <__call_exitprocs+0xf4>
   4f57c:	bdffffc4 	addi	r23,r23,-1
   4f580:	843fff04 	addi	r16,r16,-4
   4f584:	8c7fff04 	addi	r17,r17,-4
   4f588:	bd7ff91e 	bne	r23,r21,4f570 <__alt_data_end+0xfffe8470>
   4f58c:	00800034 	movhi	r2,0
   4f590:	10800004 	addi	r2,r2,0
   4f594:	10000926 	beq	r2,zero,4f5bc <__call_exitprocs+0xc4>
   4f598:	a0800117 	ldw	r2,4(r20)
   4f59c:	1000301e 	bne	r2,zero,4f660 <__call_exitprocs+0x168>
   4f5a0:	a0800017 	ldw	r2,0(r20)
   4f5a4:	10003226 	beq	r2,zero,4f670 <__call_exitprocs+0x178>
   4f5a8:	a009883a 	mov	r4,r20
   4f5ac:	98800015 	stw	r2,0(r19)
   4f5b0:	00000000 	call	0 <__alt_mem_onchip_memory2-0x40000>
   4f5b4:	9d000017 	ldw	r20,0(r19)
   4f5b8:	a03fe41e 	bne	r20,zero,4f54c <__alt_data_end+0xfffe844c>
   4f5bc:	dfc00a17 	ldw	ra,40(sp)
   4f5c0:	df000917 	ldw	fp,36(sp)
   4f5c4:	ddc00817 	ldw	r23,32(sp)
   4f5c8:	dd800717 	ldw	r22,28(sp)
   4f5cc:	dd400617 	ldw	r21,24(sp)
   4f5d0:	dd000517 	ldw	r20,20(sp)
   4f5d4:	dcc00417 	ldw	r19,16(sp)
   4f5d8:	dc800317 	ldw	r18,12(sp)
   4f5dc:	dc400217 	ldw	r17,8(sp)
   4f5e0:	dc000117 	ldw	r16,4(sp)
   4f5e4:	dec00b04 	addi	sp,sp,44
   4f5e8:	f800283a 	ret
   4f5ec:	a0800117 	ldw	r2,4(r20)
   4f5f0:	80c00017 	ldw	r3,0(r16)
   4f5f4:	10bfffc4 	addi	r2,r2,-1
   4f5f8:	15c01426 	beq	r2,r23,4f64c <__call_exitprocs+0x154>
   4f5fc:	80000015 	stw	zero,0(r16)
   4f600:	183fde26 	beq	r3,zero,4f57c <__alt_data_end+0xfffe847c>
   4f604:	95c8983a 	sll	r4,r18,r23
   4f608:	a0806217 	ldw	r2,392(r20)
   4f60c:	a5800117 	ldw	r22,4(r20)
   4f610:	2084703a 	and	r2,r4,r2
   4f614:	10000b26 	beq	r2,zero,4f644 <__call_exitprocs+0x14c>
   4f618:	a0806317 	ldw	r2,396(r20)
   4f61c:	2088703a 	and	r4,r4,r2
   4f620:	20000c1e 	bne	r4,zero,4f654 <__call_exitprocs+0x15c>
   4f624:	89400017 	ldw	r5,0(r17)
   4f628:	d9000017 	ldw	r4,0(sp)
   4f62c:	183ee83a 	callr	r3
   4f630:	a0800117 	ldw	r2,4(r20)
   4f634:	15bfbf1e 	bne	r2,r22,4f534 <__alt_data_end+0xfffe8434>
   4f638:	98800017 	ldw	r2,0(r19)
   4f63c:	153fcf26 	beq	r2,r20,4f57c <__alt_data_end+0xfffe847c>
   4f640:	003fbc06 	br	4f534 <__alt_data_end+0xfffe8434>
   4f644:	183ee83a 	callr	r3
   4f648:	003ff906 	br	4f630 <__alt_data_end+0xfffe8530>
   4f64c:	a5c00115 	stw	r23,4(r20)
   4f650:	003feb06 	br	4f600 <__alt_data_end+0xfffe8500>
   4f654:	89000017 	ldw	r4,0(r17)
   4f658:	183ee83a 	callr	r3
   4f65c:	003ff406 	br	4f630 <__alt_data_end+0xfffe8530>
   4f660:	a0800017 	ldw	r2,0(r20)
   4f664:	a027883a 	mov	r19,r20
   4f668:	1029883a 	mov	r20,r2
   4f66c:	003fb606 	br	4f548 <__alt_data_end+0xfffe8448>
   4f670:	0005883a 	mov	r2,zero
   4f674:	003ffb06 	br	4f664 <__alt_data_end+0xfffe8564>

0004f678 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   4f678:	defffd04 	addi	sp,sp,-12
   4f67c:	df000215 	stw	fp,8(sp)
   4f680:	df000204 	addi	fp,sp,8
   4f684:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   4f688:	0001883a 	nop
   4f68c:	e0bfff17 	ldw	r2,-4(fp)
   4f690:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   4f694:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   4f698:	10000226 	beq	r2,zero,4f6a4 <_exit+0x2c>
    ALT_SIM_FAIL();
   4f69c:	002af070 	cmpltui	zero,zero,43969
   4f6a0:	00000106 	br	4f6a8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   4f6a4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   4f6a8:	003fff06 	br	4f6a8 <__alt_data_end+0xfffe85a8>
